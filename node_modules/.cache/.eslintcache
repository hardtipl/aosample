[{"/var/www/html/github/inhouse/src/index.js":"1","/var/www/html/github/inhouse/src/reportWebVitals.js":"2","/var/www/html/github/inhouse/src/App.js":"3","/var/www/html/github/inhouse/src/pages/auth.js":"4","/var/www/html/github/inhouse/src/pages/withoutlogin.jsx":"5","/var/www/html/github/inhouse/src/pages/userroleguard.jsx":"6","/var/www/html/github/inhouse/src/pages/withlogin.jsx":"7","/var/www/html/github/inhouse/src/pages/login/login.jsx":"8","/var/www/html/github/inhouse/src/pages/register/register.jsx":"9","/var/www/html/github/inhouse/src/pages/create_inquiry/c_inquiry.jsx":"10","/var/www/html/github/inhouse/src/pages/inquiry_list/i_list.jsx":"11","/var/www/html/github/inhouse/src/pages/project_list/p_list.jsx":"12","/var/www/html/github/inhouse/src/pages/sales_dashboard/sales_dash.jsx":"13","/var/www/html/github/inhouse/src/pages/create_milestone/c_milestone.jsx":"14","/var/www/html/github/inhouse/src/pages/create_project/c_project.jsx":"15","/var/www/html/github/inhouse/src/pages/inquiry_edit/i_edit.jsx":"16","/var/www/html/github/inhouse/src/pages/lead_list/l_list.jsx":"17","/var/www/html/github/inhouse/src/pages/project_edit/p_edit.jsx":"18","/var/www/html/github/inhouse/src/pages/create_lead/c_lead.jsx":"19","/var/www/html/github/inhouse/src/pages/admin_dash/admin_dash.jsx":"20","/var/www/html/github/inhouse/src/pages/lead_edit/l_edit.jsx":"21","/var/www/html/github/inhouse/src/pages/lead-project/l_project.jsx":"22","/var/www/html/github/inhouse/src/pages/c_module/c_module.jsx":"23","/var/www/html/github/inhouse/src/pages/milestones/m_list.jsx":"24","/var/www/html/github/inhouse/src/pages/modules/mod_list.jsx":"25","/var/www/html/github/inhouse/src/pages/task_list/tasklist.jsx":"26","/var/www/html/github/inhouse/src/pages/m_edit/m_edit.jsx":"27","/var/www/html/github/inhouse/src/pages/mod_edit/mod_edit.jsx":"28","/var/www/html/github/inhouse/src/pages/Developer_dash/dev_dash.jsx":"29","/var/www/html/github/inhouse/src/pages/create_task/create_task.jsx":"30","/var/www/html/github/inhouse/src/pages/Dev_task/dev_task.jsx":"31","/var/www/html/github/inhouse/src/pages/not_found/not_found.jsx":"32","/var/www/html/github/inhouse/src/pages/task_edit/Taskedit.jsx":"33","/var/www/html/github/inhouse/src/pages/dev_task_edit/DevTaskEdit.jsx":"34","/var/www/html/github/inhouse/src/pages/reports/reports.jsx":"35","/var/www/html/github/inhouse/src/pages/expanse/expanse.jsx":"36","/var/www/html/github/inhouse/src/pages/inquiry view/inquiry_view.jsx":"37","/var/www/html/github/inhouse/src/pages/income/income.jsx":"38","/var/www/html/github/inhouse/src/pages/reportsdetails/reports.jsx":"39","/var/www/html/github/inhouse/src/pages/companylistings/index.jsx":"40","/var/www/html/github/inhouse/src/pages/contactpersons/index.jsx":"41","/var/www/html/github/inhouse/src/header/header.jsx":"42","/var/www/html/github/inhouse/src/pages/filter.jsx":"43","/var/www/html/github/inhouse/src/pages/sidebar/sidebar.jsx":"44","/var/www/html/github/inhouse/src/constfiles/index.js":"45","/var/www/html/github/inhouse/src/pages/create_inquiry_update/c_inquiry.jsx":"46","/var/www/html/github/inhouse/src/pages/create_project_update/c_project.jsx":"47","/var/www/html/github/inhouse/src/pages/registerupdate/register.jsx":"48","/var/www/html/github/inhouse/src/pages/facebooklogin/facebook.jsx":"49"},{"size":498,"mtime":1663754701000,"results":"50","hashOfConfig":"51"},{"size":362,"mtime":1662976145000,"results":"52","hashOfConfig":"51"},{"size":5411,"mtime":1674019918834,"results":"53","hashOfConfig":"51"},{"size":522,"mtime":1665741476000,"results":"54","hashOfConfig":"51"},{"size":668,"mtime":1665218225000,"results":"55","hashOfConfig":"51"},{"size":429,"mtime":1665747053000,"results":"56","hashOfConfig":"51"},{"size":394,"mtime":1665572867000,"results":"57","hashOfConfig":"51"},{"size":4725,"mtime":1665741452000,"results":"58","hashOfConfig":"51"},{"size":11835,"mtime":1673077080000,"results":"59","hashOfConfig":"60"},{"size":37940,"mtime":1669111133000,"results":"61","hashOfConfig":"60"},{"size":5634,"mtime":1669185176000,"results":"62","hashOfConfig":"51"},{"size":5881,"mtime":1666095459000,"results":"63","hashOfConfig":"51"},{"size":7579,"mtime":1669016610000,"results":"64","hashOfConfig":"51"},{"size":6864,"mtime":1665741470000,"results":"65","hashOfConfig":"51"},{"size":55919,"mtime":1672899044000,"results":"66","hashOfConfig":"60"},{"size":16309,"mtime":1673436316404,"results":"67","hashOfConfig":"51"},{"size":5528,"mtime":1665821398000,"results":"68","hashOfConfig":"51"},{"size":34372,"mtime":1672997383000,"results":"69","hashOfConfig":"51"},{"size":52079,"mtime":1669119170000,"results":"70","hashOfConfig":"51"},{"size":9724,"mtime":1673071661000,"results":"71","hashOfConfig":"51"},{"size":28821,"mtime":1669109436000,"results":"72","hashOfConfig":"51"},{"size":26892,"mtime":1672897353000,"results":"73","hashOfConfig":"51"},{"size":4658,"mtime":1665741473000,"results":"74","hashOfConfig":"51"},{"size":4546,"mtime":1669276038000,"results":"75","hashOfConfig":"51"},{"size":4005,"mtime":1669097806000,"results":"76","hashOfConfig":"51"},{"size":4000,"mtime":1665824944000,"results":"77","hashOfConfig":"51"},{"size":8476,"mtime":1665741451000,"results":"78","hashOfConfig":"51"},{"size":7739,"mtime":1665741449000,"results":"79","hashOfConfig":"51"},{"size":1854,"mtime":1666090591000,"results":"80","hashOfConfig":"51"},{"size":7036,"mtime":1668844153000,"results":"81","hashOfConfig":"51"},{"size":4926,"mtime":1669276225000,"results":"82","hashOfConfig":"51"},{"size":244,"mtime":1665725559000,"results":"83","hashOfConfig":"51"},{"size":9269,"mtime":1665825453000,"results":"84","hashOfConfig":"51"},{"size":9384,"mtime":1665988014000,"results":"85","hashOfConfig":"51"},{"size":16711,"mtime":1669284195000,"results":"86","hashOfConfig":"51"},{"size":4773,"mtime":1673083097000,"results":"87","hashOfConfig":"51"},{"size":30036,"mtime":1669113776000,"results":"88","hashOfConfig":"51"},{"size":8490,"mtime":1673082683000,"results":"89","hashOfConfig":"51"},{"size":26959,"mtime":1674193789932,"results":"90","hashOfConfig":"51"},{"size":1916,"mtime":1669098167000,"results":"91","hashOfConfig":"51"},{"size":2209,"mtime":1669098517000,"results":"92","hashOfConfig":"51"},{"size":4219,"mtime":1674115589120,"results":"93","hashOfConfig":"51"},{"size":2755,"mtime":1665811479000,"results":"94","hashOfConfig":"51"},{"size":1037,"mtime":1665487336000,"results":"95","hashOfConfig":"51"},{"size":446,"mtime":1669010859000,"results":"96","hashOfConfig":"51"},{"size":27810,"mtime":1673420678553,"results":"97","hashOfConfig":"51"},{"size":20678,"mtime":1673434714621,"results":"98","hashOfConfig":"51"},{"size":9418,"mtime":1673875182971,"results":"99","hashOfConfig":"51"},{"size":513,"mtime":1674025225941,"results":"100","hashOfConfig":"51"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"12xl1ql",{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"104"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"104"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"104"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"104"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"104"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"104"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"eq9az8",{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":59,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"104"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"104"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"104"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"104"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":46,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":1,"source":"160","usedDeprecatedRules":"104"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"104"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":57,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"104"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":40,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"104"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"104"},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":47,"fixableErrorCount":0,"fixableWarningCount":1,"source":"180","usedDeprecatedRules":"104"},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":46,"fixableErrorCount":0,"fixableWarningCount":1,"source":"184","usedDeprecatedRules":"104"},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"104"},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"104"},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"104"},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"104"},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"104"},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"104"},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"104"},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"104"},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"104"},{"filePath":"221","messages":"222","suppressedMessages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"104"},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"104"},{"filePath":"232","messages":"233","suppressedMessages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"104"},{"filePath":"236","messages":"237","suppressedMessages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"239","messages":"240","suppressedMessages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":1,"source":"242","usedDeprecatedRules":"104"},{"filePath":"243","messages":"244","suppressedMessages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"104"},{"filePath":"247","messages":"248","suppressedMessages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":4,"source":null},{"filePath":"250","messages":"251","suppressedMessages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"104"},{"filePath":"254","messages":"255","suppressedMessages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"104"},{"filePath":"258","messages":"259","suppressedMessages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"104"},{"filePath":"262","messages":"263","suppressedMessages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"104"},{"filePath":"266","messages":"267","suppressedMessages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"104"},{"filePath":"270","messages":"271","suppressedMessages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"273","messages":"274","suppressedMessages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"276","messages":"277","suppressedMessages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"104"},{"filePath":"280","messages":"281","suppressedMessages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"104"},{"filePath":"284","messages":"285","suppressedMessages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"/var/www/html/github/inhouse/src/index.js",[],[],[],"/var/www/html/github/inhouse/src/reportWebVitals.js",[],[],"/var/www/html/github/inhouse/src/App.js",["287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302"],[],"import logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport Register from './pages/registerupdate/register';\nimport Login from './pages/login/login';\n// import Inquiry from './pages/create_inquiry/c_inquiry';\nimport Inquiry from './pages/create_inquiry_update/c_inquiry';\nimport Withoutlogin from './pages/withoutlogin';\nimport Withlogin from './pages/withlogin';\nimport SalesDash from './pages/sales_dashboard/sales_dash';\nimport Ilist from './pages/inquiry_list/i_list';\nimport Plist from './pages/project_list/p_list';\nimport Project from './pages/create_project_update/c_project';\nimport Iedit from './pages/inquiry_edit/i_edit';\nimport Milestone from './pages/create_milestone/c_milestone';\nimport P_edit from './pages/project_edit/p_edit';\nimport Lead from './pages/create_lead/c_lead';\nimport L_list from './pages/lead_list/l_list';\nimport L_edit from './pages/lead_edit/l_edit';\nimport L_project from './pages/lead-project/l_project';\nimport Auth from './pages/auth';\nimport AdminDash from './pages/admin_dash/admin_dash';\nimport CModule from './pages/c_module/c_module';\nimport M_List from './pages/milestones/m_list';\nimport Mod_List from './pages/modules/mod_list';\nimport M_edit from './pages/m_edit/m_edit';\nimport Mod_edit from './pages/mod_edit/mod_edit';\nimport Task_List from './pages/task_list/tasklist';\nimport Ctask from './pages/create_task/create_task';\nimport Dev_Dash from './pages/Developer_dash/dev_dash';\nimport Dev_task from './pages/Dev_task/dev_task';\nimport Not_Found from './pages/not_found/not_found';\nimport Userrollguard from './pages/userroleguard';\nimport Task_Edit from './pages/task_edit/Taskedit';\nimport Companylist from \"./pages/companylistings\"\nimport Contactlist from \"./pages/contactpersons\"\nimport Dev_Task_Edit from './pages/dev_task_edit/DevTaskEdit';\nimport Reports from './pages/reports/reports';\nimport Expanse from \"./pages/expanse/expanse\";\nimport Iview from './pages/inquiry view/inquiry_view';\nimport Income from \"./pages/income/income\"\nimport Detailreport from \"./pages/reportsdetails/reports\"\nimport { useNavigate } from 'react-router-dom';\nimport Facebook from './pages/facebooklogin/facebook';\nfunction App() {\n\n  \n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route element={<Withoutlogin />}>\n\n          <Route path=\"login\" element={<Login />} />\n          <Route path=\"facebooklogin\" element={<Facebook />} />\n        </Route>\n\n        <Route path='/' element={<Auth />}>\n          <Route element={<Withlogin />}>\n\n            <Route path=\"register\" element={<Register />} />\n            <Route path=\"inquiry\" element={<Inquiry />} />\n            <Route element={<Userrollguard usertype={\"Sales\"}/>}>\n            <Route path=\"sales_dash\" element={<SalesDash />} />\n            </Route>\n            <Route path=\"inquiry_list\" element={<Ilist />} />\n            <Route path=\"project_list\" element={<Plist />} />\n            <Route path=\"project/:inquiryid\" element={<Project />} />\n            <Route path=\"i_edit/:inquiryid\" element={<Iedit />} />\n            <Route path=\"milestone/:projectid\" element={<Milestone />} />\n            <Route path=\"p_edit/:projectid\" element={<P_edit />} />\n            <Route path=\"lead/:inquiryid\" element={<Lead />} />\n            <Route path=\"lead_list\" element={<L_list />} />\n            <Route path=\"l_edit/:Leadid\" element={<L_edit />} />\n            <Route path=\"lead_project/:Leadid\" element={<L_project />} />\n            <Route element={<Userrollguard usertype={\"Admin\"}/>}>\n            <Route path=\"admind\" element={<AdminDash />} />\n            <Route path=\"expense\" element={<Expanse />} />\n            <Route path=\"income\" element={<Income />} />\n            <Route path=\"detailreport\" element={<Detailreport />} />\n            </Route>\n            <Route path=\"cmodule/:milestoneid\" element={<CModule />} />\n            <Route path=\"mlist/:projectid\" element={<M_List />} />\n            <Route path=\"modlist/:milestoneid\" element={<Mod_List />} />\n            <Route path=\"medit/:projectid/:milestoneid\" element={<M_edit />} />\n            <Route path=\"modedit/:moduleid\" element={<Mod_edit />} />\n            <Route path=\"ctask/:moduleid\" element={<Ctask />} />\n            <Route element={<Userrollguard usertype={\"Developer\"}/>}>\n            <Route path=\"devdash\" element={<Dev_Dash />} />\n            </Route>\n            <Route path=\"dev_task\" element={<Dev_task />} />\n            <Route path=\"not_found\" element={<Not_Found />} />\n            <Route path=\"task_list/:moduleid\" element={<Task_List />} />\n            <Route path=\"task_edit/:id\" element={<Task_Edit />} />\n            <Route path=\"dev_task_edit/:id\" element={<Dev_Task_Edit />} />\n            <Route path=\"companylist\" element={<Companylist />} />\n            <Route path=\"companylist/:Companyid\" element={<Contactlist />} />\n            <Route path=\"reports\" element={<Reports />} />\n            <Route path=\"inquiry_view/:inquiryid\" element={<Iview />} />\n            {/* <Route path=\"tasklist/:milestoneid\" element={<Task_List />} /> */}\n            {/* <Route path=\"ctask/:moduleid\" element={<CTask />} /> */}\n            {/* <Route path=\"medit/:milestoneid\" element={<M_edit />} /> */}\n\n\n          </Route>\n\n        </Route>\n        {/* <Route path=\"/404\" element={<Page404 />} /> */}\n\n\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/var/www/html/github/inhouse/src/pages/auth.js",["303","304"],[],"import React from \"react\"\nimport {Navigate,Outlet} from \"react-router-dom\"\nimport { useLocation } from \"react-router-dom\"\n\nconst Auth=()=>{\n  const pathofurl=useLocation()\n  const pathnameapp=pathofurl.pathname\n  const authiticated=localStorage.getItem(\"userid\")\n  // console.log(\"Authenticcatino is called\",authiticated)\n    return (\n  \n        authiticated!=null&&authiticated!=undefined ?\n        pathnameapp!=\"/\"?<Outlet /> : \n        <Navigate to={`/login`}  />:<Navigate to={`/login`}/>\n      )\n}\nexport default Auth","/var/www/html/github/inhouse/src/pages/withoutlogin.jsx",["305","306","307","308","309"],[],"import React from \"react\";\nimport Header from \"../header/header\";\nimport Sidebar from \"./sidebar/sidebar\";\nimport { Outlet } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect } from \"react\";\n\n\nconst Withoutlogin=()=>{\n\nconst navigate = useNavigate()\n\n    useEffect(()=>{\n        \n        if(localStorage.getItem(\"usertype\")==\"Sales\"){\n            navigate(\"/sales_dash\")\n        }\n        else if(localStorage.getItem(\"usertype\")==\"Admin\"){\n            navigate(\"/admind\")\n        }\n    },[])\n    return(\n        <>\n        {/* <Header/>\n        <Sidebar/> */}\n        <Outlet/>\n        </>\n    )\n}\nexport default Withoutlogin","/var/www/html/github/inhouse/src/pages/userroleguard.jsx",["310","311"],[],"import React from 'react'\nimport { Outlet } from 'react-router-dom'\nimport { Navigate } from \"react-router-dom\"\nimport Login from './login/login'\n\nconst Userrollguard = ({ usertype }) => {\n    const usertypefromlocal=localStorage.getItem(\"usertype\")\n    // console.log(\"from roleguard\",usertype)\n    return (\n\n        usertypefromlocal==usertype ? <Outlet /> : <Navigate to={`/not_found`} />\n    )\n}\n\nexport default Userrollguard","/var/www/html/github/inhouse/src/pages/withlogin.jsx",["312"],[],"import React from \"react\"\nimport Header from \"../header/header\"\nimport Sidebar from \"./sidebar/sidebar\"\nimport { Outlet } from \"react-router-dom\"\nconst Withlogin=()=>{\n\n    const usertype = localStorage.getItem(\"usertype\")\n\n    return(\n        <>\n        <Header usertype={usertype}/>\n        {/* <Sidebar usertype={usertype}/> */}\n        <Outlet/>\n        </>\n    )\n}\nexport default Withlogin","/var/www/html/github/inhouse/src/pages/login/login.jsx",["313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331"],[],"import React, { useEffect, useState } from \"react\";\nimport \"./login.css\";\nimport { Navigate, useNavigate } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { useForm } from 'react-hook-form';\n\n\nconst Login = () => {\n  const navigate = useNavigate();\n  const[message,setMessage] =useState(false)\n\n  const userid = localStorage.getItem(\"userid\");\n  const usertype = localStorage.getItem(\"usertype\");\n\n  const [loginform, setLoginForm] = useState({\n    vusername: \"\",\n    vpassword: \"\",\n    etype: \"\",\n  });\n\n  const hadlechange = (e) => {\n    let objname = e.target?.name;\n    let value = e.target?.value;\n    setLoginForm({ ...loginform, [objname]: value });\n  };\n  const onSubmit = async () => {\n    const responseapi = await fetch(\n      `${process.env.REACT_APP_APIURL}/login`,\n\n      {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(loginform),\n      }\n    );\n    // console.log(\"dfg\", responseapi)\n\n    if (\n      responseapi?.status == 400 ||\n      responseapi?.status == 401 ||\n      responseapi?.status == 403 ||\n      responseapi?.status == 500\n    ) {\n      let apirespmessage=await responseapi.text()\n      // console.log(apirespmessage)\n      setMessage(apirespmessage)\n      // alert(responseapi.statusText)\n      // throw responseapi.statusText;\n\n    } else {\n      let check = await responseapi.json();\n      // alert(\"sdf\")\n      localStorage.setItem(\"Token\", check.token);\n      localStorage.setItem(\"userid\", check.userid);\n      localStorage.setItem(\"usertype\", check.usertype);\n\n\n      // alert(\"Success\")\n      if (check.usertype == \"Sales\") {\n        navigate(\"/sales_dash\");\n      } else if (check.usertype == \"Admin\") {\n        navigate(\"/admind\");\n      } else if (check.usertype == \"Developer\") {\n        navigate(\"/devdash\");\n      }\n    }\n\n  };\n\n\n  useEffect(() => { }, [loginform]);\n  const handelsubmit = (e) => {\n    onSubmit();\n  };\n  const handleRegister = () => {\n    navigate(\"/register\");\n  };\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    control,\n  } = useForm();\n\n  return (\n    <>\n      <div className=\"loginBody\">\n        <div className=\"container\">\n          <div className=\"row d-block\">\n            <div className=\"col-12 my-3\">\n              <h1 className=\"logo text-center\">Login</h1>\n            </div>\n           \n            <div className=\"col-6 mb-3 loginMargin\">\n              <label htmlFor=\"\">Username</label>\n              <input\n                {...register('vusername', { required: true })}\n                type=\"text\"\n                className=\"form-control rounded-pill mt-2\"\n                name=\"vusername\"\n                value={loginform.username}\n                onChange={hadlechange}\n              />\n              {loginform.vusername==\"\"?errors.vusername && <p className=\"error\">UserName is required.</p>:\"\"}\n              {message ==\"Username Not Exist\" && <p className=\"error\">{message}</p>}\n            </div>\n\n            <div className=\"col-6 mb-3 loginMargin\">\n              <label htmlFor=\"\">Password</label>\n              <input\n                {...register('vpassword', { required: true })}\n                type=\"password\"\n                className=\"form-control rounded-pill mt-2\"\n                name=\"vpassword\"\n                placeholder=\"Password\"\n                value={loginform.password}\n                onChange={hadlechange}\n              />\n              {loginform.vpassword==\"\"?errors.vpassword && <p className=\"error\">Password is required.</p>:\"\"}\n              {message ==\"Password not matched\" && <p className=\"error\">{message}</p>}\n            </div>\n\n            <div className=\"col-6 mb-3 loginMargin\">\n              <label htmlFor=\"\">User Type</label>\n              <select\n                {...register('etype', { required: true })}\n                type=\"text\"\n                className=\"form-control rounded-pill mt-2\"\n                name=\"etype\"\n                value={loginform.etype}\n                onChange={hadlechange}\n              >\n                <option value=\"\" >Select</option>\n\n                <option value=\"Admin\" >Admin</option>\n                <option value=\"Sales\" >Sales</option>\n                <option value=\"Developer\" >Developer</option>\n              </select>\n\n              {loginform.etype==\"\"?errors.etype && <p className=\"error\">Select anyone</p>:\"\"}\n            </div>\n\n            <div className=\"button\">\n              <input type=\"submit\" className=\"form-control my-3 btn btn-outline-dark \" onClick={handleSubmit(onSubmit)} value=\"Log in\" />\n\n            </div>\n\n        \n\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n","/var/www/html/github/inhouse/src/pages/register/register.jsx",["332","333","334","335","336","337","338","339","340","341","342","343","344","345"],[],"/var/www/html/github/inhouse/src/pages/create_inquiry/c_inquiry.jsx",["346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404"],[],"/var/www/html/github/inhouse/src/pages/inquiry_list/i_list.jsx",["405","406","407","408","409","410","411","412","413","414","415","416","417","418"],[],"import React, { useCallback } from \"react\";\nimport Sidebar from \"../sidebar/sidebar\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./i_list.css\";\nimport Filter from \"../filter\";\nimport ReactPaginate from 'react-paginate';\n// import { usePagination,DOTS } from \"../usePagination\";\n// import '../pagination.css';\n// import { useMemo } from \"react\";\n\n\n\nconst Ilist = (props)=>{\n  const [data, setData] = useState([{}]);\n  const [pageCount, setpageCount] = useState(0);\n  const [itemOffset, setItemOffset] = useState(0);\n  const [currentItem, setCurrentItem] = useState(null);\n  let itemPerPage = 10;\n\n\n\n\n  const [selectedFilter,setSelectedFilter] = useState()\n  const [FilterName, setFilterName] = useState()\n\n\n  let controller = new AbortController();\n  const filterapidata=(filterData)=>{\n    setFilterName(filterData.FilterName)\n    setSelectedFilter(filterData.selectedFilter)\n    if(filterData.FilterName!=undefined){\n     controller.abort(\"change filter value\");\n    // controller.abort(\"change filter value\");\n\n   }\n  }\n  useEffect(()=>{\n    // if(FilterName?.length>0&& selectedFilter?.length>0){\n    //   console.log(\"fffff\")\n  \n    // }\n\n   listapi()\n  },[FilterName])\n\n\n\n  \n\n   \n\n  const listapi =  async () => {\n    let {signal}=controller\n    \n    let apihiturl = `${process.env.REACT_APP_APIURL}/inquiry?`\n    \n    if(selectedFilter?.length>0&&\n      FilterName?.length>0)\n      {\n      \n      apihiturl+=`${selectedFilter}=${FilterName}`\n    }\n    if (!selectedFilter&& FilterName?.length > 0) {\n      apihiturl += `filterdata=${FilterName}`\n    }\n    if(itemOffset>0){\n      apihiturl += `&lastinquiry=${itemOffset}`\n    }\n    // console.log(apihiturl,FilterName)\n      const result = await fetch(apihiturl, {\n        signal,\n        method: \"get\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"Token\")}`,\n        },\n      });\n      const apiresponse = await result.json();\n      const apicheck = apiresponse?.inquirylist;\n      setData(apicheck);\n      setCurrentItem(apicheck)\n      // console.log(apiresponse.inquirycount)\n      setpageCount(Math.ceil(apiresponse.inquirycount/ itemPerPage))\n    \n  };\n\n  useEffect(() => {\n    listapi();\n    \n  }, []);\n\n  useEffect(() => {\n    // console.log(data);\n  }, [data]);\n\n\n  useEffect(()=>{\n    const endoffset = itemOffset + itemPerPage\n    // setCurrentItem(data.slice(itemOffset,endoffset))\n    // setpageCount(Math.ceil(data.length/ itemPerPage))\n    // console.log(endoffset)\n    // console.log(\"current\",currentItem)\n    // console.log(\"data\", data.length)\n  },[itemOffset,itemPerPage,data])\n\n  const handlePageClick=(e)=>{\n    const newOffset=(e.selected*itemPerPage)\n    // alert(newOffset)\n    setItemOffset(newOffset)\n    // console.log(newOffset)\n  }\n useEffect(()=>{\n  listapi();\n   \n },[itemOffset])\n \n \n\n    return(\n        <>\n\n\n<Sidebar IsSales={true}/>\n\n<div className='set'>\n  <div className=\"container my-3 body p-5\">\n    <div className=\"row \"></div>\n<div>\n  \n  <Filter tofilterdata={filterapidata} isPage={\"inquiry\"}/>\n  \n  \n  <table class=\"table\">\n<thead class=\"thead-dark\">\n  <tr>\n    {/* <th scope=\"col\">#</th> */}\n    <th scope=\"col\">Title</th>\n    <th scope=\"col\">Technology</th>\n    <th scope=\"col\">Type of inquiry</th>\n    <th scope=\"col\">Monthly Budget</th>\n    <th scope=\"col\">Status</th>\n    <th scope=\"col\">View</th>\n    <th scope=\"col\">Edit</th>\n  </tr>\n</thead>\n\n\n<tbody>\n            {currentItem?.map((e) => {\n              return (\n                <tr>\n                  <td data-column=\"First Name\">{e.vTitle}</td>\n                  <td data-column=\"Last Name\">{e.vTechnology}</td>\n                  <td data-column=\"Job Title\">{e.eTypeofInquiry}</td>\n                  <td data-column=\"Twitter\">{e.vHireMonthlyBudget}</td>\n                 {e.eStatus==\"Converted\" ?<td className=\"Converted\" data-column=\"Status\">{e.eStatus}</td>:\"\"}\n                 {e.eStatus==\"InProgress\" ?<td className=\"Inprogress\" data-column=\"Status\">{e.eStatus}</td>:\"\"}\n                 {e.eStatus==\"Cancelled\" ?<td className=\"Cancelled\" data-column=\"Status\">{e.eStatus}</td>:\"\"}\n                 {e.eStatus==\"Rejected\" ?<td className=\"Rejected\" data-column=\"Status\">{e.eStatus}</td>:\"\"}\n                 {e.eStatus==\"OnHold\" ?<td className=\"OnHold\" data-column=\"Status\">{e.eStatus}</td>:\"\"}\n                 {e.eStatus==\"No Response From Client\" ?<td className=\"NoResponse\" data-column=\"Status\">{e.eStatus}</td>:\"\"}\n                 <td data-column=\"Status\">\n                 <Link to={\"/inquiry_view/\" + `${e.id}`}>\n                    {\" \"}\n                   View\n                  </Link>\n                  </td>\n                 <td data-column=\"Status\">\n                  <Link to={\"/i_edit/\" + `${e.id}`}>\n                    {\" \"}\n                    Edit\n                  </Link>\n                  </td>\n                 \n                </tr>\n              );\n            })}\n           \n          </tbody>\n          \n</table>\n<div className=\"pagination\">\n\n<ReactPaginate\nbreakLabel=\"...\"\nnextLabel=\"next >\"\nonPageChange={handlePageClick}\npageRangeDisplayed={3}\npageCount={pageCount}\npreviousLabel=\"< previous\"\nrenderOnZeroPageCount={null}\nbreakClassName={'page-item'}\nbreakLinkClassName={'page-link'}\ncontainerClassName={'pagination'}\npageClassName={'page-item'}\npageLinkClassName={'page-link'}\npreviousClassName={'page-item'}\npreviousLinkClassName={'page-link'}\nnextClassName={'page-item'}\nnextLinkClassName={'page-link'}\nactiveClassName={'active'}\n\n\n/>\n</div>\n</div>\n</div>\n</div>\n\n\n        </>\n    )\n\n}\nexport default Ilist","/var/www/html/github/inhouse/src/pages/project_list/p_list.jsx",["419","420","421","422","423","424","425","426","427","428","429","430"],[],"import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Sidebar from \"../sidebar/sidebar\";\nimport Filter from \"../filter\";\nimport ReactPaginate from \"react-paginate\";\n\nconst Plist = () => {\n  const [selectedFilter, setSelectedFilter] = useState()\n  const [FilterName, setFilterName] = useState()\n  const [pageCount, setpageCount] = useState(0);\n  const [itemOffset, setItemOffset] = useState(0);\n  const [currentItem, setCurrentItem] = useState(null);\n  let itemPerPage = 10;\n\n\n\n  let controller = new AbortController();\n  const filterapidata = (filterData) => {\n    setFilterName(filterData.FilterName)\n    setSelectedFilter(filterData.selectedFilter)\n    setItemOffset(0)\n    if (filterData.FilterName != undefined) {\n      controller.abort(\"change filter value\");\n      // controller.abort(\"change filter value\");\n\n    }\n  }\n  useEffect(() => {\n    // if(FilterName?.length>0&& selectedFilter?.length>0){\n    //   console.log(\"fffff\")\n\n    // }\n\n    listapi()\n  }, [FilterName])\n\n  const [data, setData] = useState([]);\n\n  const listapi = async (passFilterParam) => {\n    let { signal } = controller\n    // console.log(\"signal\",signal)\n    let apihiturl = `${process.env.REACT_APP_APIURL}/projects?`\n    if(selectedFilter?.length>0&&\n      FilterName?.length>0)\n      {\n      \n      apihiturl+=`${selectedFilter}=${FilterName}`\n    }\n    if (!selectedFilter&& FilterName?.length > 0) {\n      apihiturl += `filterdata=${FilterName}`\n    }\n    if(itemOffset>0){\n      apihiturl += `&lastproject=${itemOffset}`\n    }\n    const result = await fetch(apihiturl, {\n      signal,\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"Token\")}`,\n      },\n    });\n    const apiresponse = await result.json();\n    // console.log(apiresponse);\n    const apicheck = apiresponse?.userid;\n\n\n    setData(apicheck);\n    setCurrentItem(apicheck)\n    // console.log(apiresponse.projectcount)\n    setpageCount(Math.ceil(apiresponse.projectcount/ itemPerPage))\n\n  };\n\n  useEffect(() => {\n    listapi();\n  }, []);\n\n  useEffect(() => {\n    // console.log(data);\n  }, [data]);\n\n\n  useEffect(()=>{\n    const endoffset = itemOffset + itemPerPage\n    // setCurrentItem(data.slice(itemOffset,endoffset))\n    // setpageCount(Math.ceil(data.length/ itemPerPage))\n    // console.log(endoffset)\n    // console.log(\"current\",currentItem)\n    // console.log(\"data\", data.length)\n  },[itemOffset,itemPerPage,data])\n\n  const handlePageClick=(e)=>{\n    const newOffset=(e.selected*itemPerPage)\n    // alert(newOffset)\n    setItemOffset(newOffset)\n    // console.log(newOffset)\n  }\n useEffect(()=>{\n  listapi();\n   \n },[itemOffset])\n \n\n  return (\n    <>\n\n\n      <Sidebar IsSales={true} />\n\n      <div className='set'>\n        <div className=\"container my-3 body p-5\">\n          <div className=\"row \"></div>\n          <div>\n            <Filter tofilterdata={filterapidata} isPage={\"project\"} />\n\n            <table class=\"table\">\n              <thead class=\"thead-dark\">\n                <tr>\n                  {/* <th scope=\"col\">#</th> */}\n                  <th scope=\"col\">Title</th>\n                  <th scope=\"col\">Technology</th>\n                  <th scope=\"col\">Type of project</th>\n                  <th scope=\"col\">Hire Monthly Budget</th>\n                  <th scope=\"col\">Status</th>\n                  {/* <th scope=\"col\">Monthly Budget</th> */}\n\n                  <th scope=\"col\">Edit</th>\n                  <th scope=\"col\">Progress</th>\n                </tr>\n              </thead>\n\n\n              <tbody>\n                {currentItem?.map((e) => {\n                  // console.log(e);\n                  return (\n                    <tr>\n                      <td data-column=\"First Name\">{e.vTitleProject}</td>\n                      <td data-column=\"Last Name\">{e.vTechnology}</td>\n                      <td data-column=\"Job Title\">{e.eTypeOfProject}</td>\n                      <td data-column=\"Job Title\">{e.vHireMonthlyBudget}</td>\n                      {e.eStatus == \"Converted\" ? <td className=\"Converted\" data-column=\"Status\">{e.eStatus}</td> : \"\"}\n                      {e.eStatus == \"InProgress\" ? <td className=\"Inprogress\" data-column=\"Status\">{e.eStatus}</td> : \"\"}\n                      {e.eStatus == \"Cancelled\" ? <td className=\"Cancelled\" data-column=\"Status\">{e.eStatus}</td> : \"\"}\n                      {e.eStatus == \"Rejected\" ? <td className=\"Rejected\" data-column=\"Status\">{e.eStatus}</td> : \"\"}\n                      {e.eStatus == \"OnHold\" ? <td className=\"OnHold\" data-column=\"Status\">{e.eStatus}</td> : \"\"}\n                      {e.eStatus == \"No Response From Client\" ? <td className=\"NoResponse\" data-column=\"Status\">{e.eStatus}</td> : \"\"}\n\n                      {/* <td data-column=\"Status\">{e.fCostOfProject}</td> */}\n                      <Link to={\"/p_edit/\" + `${e.id}`}>\n                        {\" \"}\n                        <td data-column=\"Status\">Edit</td>\n                      </Link>\n                      <td data-column=\"Job Title\">{Math.ceil( e.projectprogress) + \"%\"}</td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n\n            </table>\n            <div className=\"pagination\">\n\n<ReactPaginate\nbreakLabel=\"...\"\nnextLabel=\"next >\"\nonPageChange={handlePageClick}\npageRangeDisplayed={3}\npageCount={pageCount}\npreviousLabel=\"< previous\"\nrenderOnZeroPageCount={null}\nbreakClassName={'page-item'}\nbreakLinkClassName={'page-link'}\ncontainerClassName={'pagination'}\npageClassName={'page-item'}\npageLinkClassName={'page-link'}\npreviousClassName={'page-item'}\npreviousLinkClassName={'page-link'}\nnextClassName={'page-item'}\nnextLinkClassName={'page-link'}\nactiveClassName={'active'}\n\n\n/>\n</div>\n\n          </div>\n        </div>\n      </div>\n\n\n    </>\n  )\n}\n\nexport default Plist","/var/www/html/github/inhouse/src/pages/sales_dashboard/sales_dash.jsx",["431"],[],"import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport \"./sales_dash.css\"\n\n// import \"./sales_dash.css\"\nimport Header from \"../../header/header\";\nimport Sidebar from \"../sidebar/sidebar\";\n\nconst SalesDash =()=>{\n\n  const [data,setData] = useState()\n\n  const dash = async () => {\n    // alert(Leadid)\n    const result = await fetch(\n      `${process.env.REACT_APP_APIURL}/dashboard/`,\n        {\n          method: \"get\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"Token\")}`,\n          },\n        }\n    );\n\n    const response = await result.json()\n    const res = response.Message\n    setData(res)\n    \n  };\n\n  useEffect(()=>{\n    dash()\n  },[])\n\n\nreturn(\n    <>\n    <Sidebar IsSales={true}/>\n<div>\n  <input type=\"radio\" name=\"detailsdisplay\" value={\"monthly\"} />\n<label for=\"html\">Monthly</label><br></br>\n<input type=\"radio\" name=\"detailsdisplay\" value={\"yearly\"} checked/>\n<label for=\"html\">Yearly</label><br></br>\n</div>\n    <div className='set'>\n    <div className=\"row m-3\">\n        <div className=\"col-sm-4\">\n          <div className=\"card  text-white\">\n          <div className=\"card-head shadow-lg bg-primary\">\n            <h3 className=\"text text-center \">Inquiries</h3>\n            </div>\n            <div className=\"card-body cardi\">\n              <table className=\"table text-black table-striped\">\n                <thead className=\"text-center\">\n                  <tr>\n                    <th scope=\"col \">Status</th>\n                    <th scope=\"col\">Total</th>\n                    \n                  </tr>\n                </thead>\n                <tbody className=\"text-center\">\n                  {data?.inquiry?.map((e)=>{\n                    // console.log(\"data\",data)\n                    return(\n\n                    \n                  <tr>\n                    <td>{e.eStatus}</td>\n                    <td>{e.No_of_inquiriesstatus}</td>\n                  </tr>\n                  )\n                })}\n                  \n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-sm-4\">\n          <div className=\"card  text-white\">\n          <div className=\"card-head shadow-lg bg-secondary\">\n          <h3 className=\"text text-center\">Projects</h3>\n            </div>\n            <div className=\"card-body cardi\">\n            <table class=\"table table-striped \">\n                <thead className=\"text-black text-center\">\n                  <tr>\n                    <th scope=\"col\">Status</th>\n                    <th scope=\"col\">Total</th>\n                    \n                  </tr>\n                </thead>\n                <tbody className=\"text-black text-center\">\n\n                {data?.projects?.map((e)=>{\n                    // console.log(\"data\",data)\n                    return(\n\n                    \n                  <tr>\n                    <td>{e.Typeofproject}</td>\n                    <td>{e.No_of_Projects}</td>\n                  </tr>\n                  )\n                })}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n\n        \n        <div className=\"col-sm-4\">\n          <div className=\"card  text-white\">\n          <div className=\"card-head shadow-lg bg-success\">\n          <h3 className=\"text text-center\">Leads</h3>\n            </div>\n            <div className=\"card-body cardi\">\n            <table class=\"table table-striped\">\n                <thead className=\"text-black text-center \">\n                  <tr>\n                    <th scope=\"col\">Status</th>\n                    <th scope=\"col\">Total</th>\n                    \n                  </tr>\n                </thead>\n                <tbody className=\"text-black text-center\">\n                {data?.leads?.map((e)=>{\n                    // console.log(\"data\",data)\n                    return(\n\n                    \n                  <tr>\n                    {/* <td>Current Month</td> */}\n                    <td>{e.Typeofproject}</td>\n                    <td>{e.No_of_Projects}</td>\n                  </tr>\n                  )\n                })}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      \n  </div>\n  <div className=\"row m-3\">\n        <div className=\"col-sm-4\">\n          <div className=\"card  text-white\">\n          <div className=\"card-head shadow-lg text-white bg-dark\">\n            <h3 className=\"text text-center \">Milestones</h3>\n            </div>\n            <div className=\"card-body cardi\">\n              <table className=\"table text-black table-striped\">\n                <thead className=\"text-center\">\n                  <tr>\n                    <th scope=\"col \">Status</th>\n                    <th scope=\"col\">Total</th>\n                    \n                  </tr>\n                </thead>\n                <tbody className=\"text-center\">\n                  {data?.milestones?.map((e)=>{\n                    // console.log(\"data\",data)\n                    return(\n\n                    \n                  <tr>\n                    <td>Current Month</td>\n                    <td>{e.currentmonthmilestone}</td>\n                  </tr>\n                  )\n                })}\n                  \n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n        {/* <div className=\"col-sm-4\">\n          <div className=\"card  text-white\">\n          <div className=\"card-head shadow-lg bg-secondary\">\n          <h3 className=\"text text-center\">Users</h3>\n            </div>\n            <div className=\"card-body cardi\">\n            <table class=\"table table-striped \">\n                <thead className=\"text-black text-center\">\n                  <tr>\n                    <th scope=\"col\">Name</th>\n                    <th scope=\"col\">Role</th>\n                    \n                  </tr>\n                </thead>\n                <tbody className=\"text-black text-center\">\n\n                {data?.users?.map((e)=>{\n                    console.log(\"data\",data)\n                    return(\n\n                    \n                  <tr>\n                    <td>{e.name_of_user}</td>\n                    <td>{e.usertype}</td>\n                  </tr>\n                  )\n                })}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div> */}\n\n        \n        {/* <div className=\"col-sm-4\">\n          <div className=\"card  text-white\">\n          <div className=\"card-head shadow-lg bg-success\">\n          <h3 className=\"text text-center\">Leads</h3>\n            </div>\n            <div className=\"card-body cardi\">\n            <table class=\"table table-striped\">\n                <thead className=\"text-black text-center \">\n                  <tr>\n                    <th scope=\"col\">Status</th>\n                    <th scope=\"col\">Total</th>\n                    \n                  </tr>\n                </thead>\n                <tbody className=\"text-black text-center\">\n                {data?.milestones?.map((e)=>{\n                    console.log(\"data\",data)\n                    return(\n\n                    \n                  <tr>\n                    <td>Current Month</td>\n                    <td>{e.currentmonthmilestone}</td>\n                  </tr>\n                  )\n                })}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div> */}\n      \n  </div>\n  </div>\n\n    \n\n\n    </>\n)\n}\nexport default SalesDash","/var/www/html/github/inhouse/src/pages/create_milestone/c_milestone.jsx",["432","433","434","435","436","437","438","439","440","441"],[],"import React from \"react\";\nimport \"./c_milestone.css\"\nimport Sidebar from \"../sidebar/sidebar\";\nimport { useEffect, useState } from \"react\";\nimport { useParams,useNavigate } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\n\nconst Milestone =()=>{\n\n    const navigate = useNavigate();\n\n    const[modal,setModal] = useState(false)\n    const[created,setCreated] = useState(false)\n  const[message, setMessage] = useState(false)\n    const { projectid, accountholderid } = useParams();\n    const [registrationform, Setregistrationform] = useState({\n      iprojectid: projectid,\n      // iAccountHolderId: localStorage.getItem(\"userid\"),\n      vTitleofMilestone: \"\",\n      dDeadlineDate: \"\",\n      fAmount: \"\",\n      tNotes: \"\",\n      eSttaus: \"\",\n    });\n  \n    const hadlechange = (e) => {\n      let objname = e.target?.name;\n      let value = e.target?.value;\n      Setregistrationform({ ...registrationform, [objname]: value });\n      setCreated(true)\n    };\n  \n  \n    const registrationapicall = async (e) => {\n      // alert(JSON.stringify(registrationform));\n      const data = {\n       \n        ...registrationform,\n      };\n  \n      const responseapi = await fetch(\n        `${process.env.REACT_APP_APIURL}/milestone`,\n  \n        {\n          method: \"post\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"Token\")}`,\n          },\n          body: JSON.stringify(data),\n        }\n      );\n  \n      let check = await responseapi.json();\n      // console.log(check)\n      setCreated(false)\n      \n      if(check.Success == 1)\n      {\n        // setModal(true)\n        setMessage(\"MileStone Created\")\n      }\n      else{\n        // setModal(true)\n        setMessage(check.message)\n      }\n  \n    \n    };\n    useEffect(() => {\n      // console.log(registrationform);\n    }, [registrationform]);\n\n    // /p_edit/:projectid\n    const handleBack=()=>{\n      navigate(\"/mlist/\"+`${projectid}`)\n    }\n\n    const {\n      register,\n      handleSubmit,\n      formState: { errors },\n    } = useForm();\n  \n    return(\n        <>\n\n        <Sidebar IsSales={true}/>\n\n<div>\n<div className=\"set\">\n\n      <div className=\"Milebody\">\n      \n        <div className=\"container my-3 p-5\">\n        <button type=\"submit\" onClick={handleBack}  className=\"mx-auto bg-dark text-white btn btn-outline-dark w-25\">\n            Back\n          </button>\n          <div className=\"row \">\n            <div className=\"col-12 text-center mb-2\">\n              <h1 className=\"title\">MILESTONE</h1>\n             <h5 className=\"mess\"> {message}</h5>\n            </div>\n\n            <div className=\"col-xxl-12 col-xl-12 col-lg-6 col-md-12 col-sm-12 my-3 \">\n              <div className=\"col-6 my-2 px-3 mx-auto\">\n                <label htmlFor=\"\">Title</label>\n                {/* <input type=\"text\" className=\"inputField col-12 mb-3\" /> */}\n                <input\n                {...register('vTitleofMilestone', { required: true })}\n              type=\"text\"\n              className=\"form-control rounded-pill mt-2\"\n              placeholder=\"Title of Milestone\"\n              name=\"vTitleofMilestone\"\n              value={registrationform.vTitleofMilestone}\n              onChange={hadlechange}\n            />\n            {registrationform.vTitleofMilestone==\"\"?errors.vTitleofMilestone && <p className=\"error\">Title is required.</p>:\"\"}\n              </div>\n              <div className=\"col-6 my-2 px-3 mx-auto\">\n                <label htmlFor=\"\">Dead Line Date</label>\n                {/* <input type=\"date\" className=\"txt-area col-12 mb-3\" /> */}\n                <input\n                {...register('dDeadlineDate', { required: true })}\n              type=\"date\"\n              className=\"form-control rounded-pill mt-2\"\n              name=\"dDeadlineDate\"\n              placeholder=\"Deadline Date\"\n              value={registrationform.dDeadlineDate}\n              onChange={hadlechange}\n            />\n             {registrationform.dDeadlineDate==\"\"?errors.dDeadlineDate && <p className=\"error\">This Field is required.</p>:\"\"}\n              </div>\n              <div className=\"col-6 my-2 px-3 mx-auto\">\n                <label htmlFor=\"\">Amount</label>\n                {/* <input type=\"text\" className=\"inputField col-12 mb-3\" /> */}\n                <input\n                {...register('fAmount', { required: true })}\n              type=\"number\"\n              className=\"form-control rounded-pill mt-2\"\n              name=\"fAmount\"\n              placeholder=\"Amount\"\n              value={registrationform.fAmount}\n              onChange={hadlechange}\n            />\n            {registrationform.fAmount==\"\"?errors.fAmount && <p className=\"error\">Amount is required.</p>:\"\"}\n              </div>\n              <div className=\"col-6 my-2 px-3 mx-auto\">\n                <label htmlFor=\"\">Notes</label>\n                {/* <input type=\"text\" className=\"inputField col-12 mb-3\" /> */}\n                <input\n                {...register('tNotes', { required: true })}\n              type=\"text\"\n              className=\"form-control rounded-pill mt-2\"\n              name=\"tNotes\"\n              placeholder=\"Notes\"\n              value={registrationform.tNotes}\n              onChange={hadlechange}\n            />\n            {registrationform.tNotes==\"\"?errors.tNotes && <p className=\"error\">Notes is required.</p>:\"\"}\n              </div>\n              <div className=\"col-6 my-2 px-3 mx-auto\">\n                <label htmlFor=\"\">Status</label>\n                <select\n                {...register('eSttaus', { required: true })}\n              name=\"eSttaus\"\n              className=\"form-control rounded-pill mt-2\"\n              value={registrationform.eSttaus}\n              onChange={hadlechange}\n            >\n              <option value=\"\">Select</option>\n\n              <option value=\"Active\">Active</option>\n              <option value=\"Inactive\">Inactive</option>\n            </select>\n            {registrationform.eSttaus==\"\"?errors.eSttaus && <p className=\"error\">Status is required.</p>:\"\"}\n              </div>\n\n              \n            </div>\n          {created?  <button\n                type=\"submit\"\n                onClick={handleSubmit(registrationapicall)}\n              value=\"Register\"\n                className=\"mx-auto btn btn-outline-dark w-25\"\n                \n              >\n                Submit\n              </button>:\n              \n              <button\n                type=\"submit\"\n                onClick={handleSubmit(registrationapicall)}\n              value=\"Register\"\n                className=\"mx-auto btn btn-outline-dark w-25\"\n                disabled\n              >\n                Submit\n              </button>\n              \n              }\n          </div>\n        </div>\n      </div>\n    </div>\n    </div>\n\n\n        </>\n    )\n\n}\nexport default Milestone","/var/www/html/github/inhouse/src/pages/create_project/c_project.jsx",["442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487"],[],"/var/www/html/github/inhouse/src/pages/inquiry_edit/i_edit.jsx",["488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517"],[],"import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport Sidebar from \"../sidebar/sidebar\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { sourcelist, technologylist } from \"../../constfiles\";\nconst Iedit = () => {\n\n  const [isUpdate, setIsUpdate] = useState(false)\n  const [updated, setUpdated] = useState(false)\n  const [error, setError] = useState({})\n  const navigate = useNavigate();\n  const { projectid } = useParams();\n  const [selectedFile, setSelectedFile] = useState();\n  const [Sourcelistdropdown, setSourcelistdropdown] = useState(sourcelist);\n  const [technologydropdown] = useState(technologylist);\n  const [doc, setDoc] = useState([])\n  // const [updateForm, SetUpdateForm] = useState({});\n  const { inquiryid } = useParams();\n  // alert(inquiryid);\n  const [data, setData] = useState({\n    inquiryid: inquiryid,\n  });\n\n  // alert(inquiryid)\n\n  let handleChange = (e) => {\n    let name = e.target.name;\n    let value = e.target.value;\n    setData({ ...data, [name]: value });\n    setIsUpdate(true)\n  };\n\n\n\n\n  const isvalid = (verificationdata) => {\n    let errors = {};\n    if (\n      verificationdata.eTypeofInquiry == undefined ||\n      verificationdata.eTypeofInquiry == \"\"\n    ) {\n      errors.eTypeofInquiry = \"Field should not be empty\";\n    }\n    if (\n      verificationdata.vTitle == undefined ||\n      verificationdata.vTitle == \"\"\n    ) {\n      errors.vTitle = \"Field should not be empty\";\n    }\n    if (\n      verificationdata.vTechnology == undefined ||\n      verificationdata.vTechnology == \"\"\n    ) {\n      errors.vTechnology = \"Field should not be empty\";\n    }\n    if (\n      verificationdata.vSourceOfInquiry == undefined ||\n      verificationdata.vSourceOfInquiry == \"\"\n    ) {\n      errors.vSourceOfInquiry = \"Field should not be empty\";\n    }\n    if (\n      verificationdata.tDescription == undefined ||\n      verificationdata.tDescription == \"\"\n    ) {\n      errors.tDescription = \"Field should not be empty\";\n    }\n    if (\n      verificationdata.vHireDuration == undefined ||\n      verificationdata.vHireDuration == \"\"\n    ) {\n      errors.vHireDuration = \"Field should not be empty\";\n    }\n    if (\n      verificationdata.vHireMonthlyBudget == undefined ||\n      verificationdata.vHireMonthlyBudget == \"\"\n    ) {\n      errors.vHireMonthlyBudget = \"Field should not be empty\";\n    }\n    if (\n      verificationdata.vExperienceRequired == undefined ||\n      verificationdata.vExperienceRequired == \"\"\n    ) {\n      errors.vExperienceRequired = \"Field should not be empty\";\n    }\n    if (\n      verificationdata.eStatus == undefined ||\n      verificationdata.eStatus == \"\"\n    ) {\n      errors.eStatus = \"Field should not be empty\";\n    }\n\n    return errors;\n  };\n\n  useEffect(() => {\n    if (Object.keys(data).length != 0) {\n      setError(isvalid(data));\n    } else {\n\n      return;\n    }\n  }, [data]);\n\n  const singleapi = async (inquiryid) => {\n    const result = await fetch(\n      `${process.env.REACT_APP_APIURL}/inquiry/${inquiryid}`,\n      {\n        method: \"get\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"Token\")}`,\n        },\n      }\n    );\n    // localStorage.setItem(\"id\" ,inquiryid)\n    const apiresponse = await result.json();\n    const check = apiresponse.inquirylist;\n    console.log(check)\n    setData({ ...data, ...check[0] });\n    setDoc(check)\n    // alert(JSON.stringify(check));\n    // console.log(check);\n  };\n\n\n\n\n\n  useEffect(() => {\n    singleapi(inquiryid);\n\n\n  }, []);\n\n  useEffect(() => {\n\n  }, [data]);\n\n\n\n\n  const inquiryData = (e) => {\n    const formData = new FormData();\n    if (selectedFile != undefined) {\n      for (let i = 0; i < selectedFile.length; i++) {\n        formData.append(\"mediafiles\", selectedFile[i]);\n      }\n    }\n    formData.append(\"inquiryid\", inquiryid);\n    const token = localStorage.getItem(\"Token\");\n\n    formData.append(\"eTypeofInquiry\", data.eTypeofInquiry);\n    formData.append(\"vTitle\", data.vTitle);\n    formData.append(\"vTechnology\", data.vTechnology);\n    formData.append(\"vSourceOfInquiry\", data.vSourceOfInquiry);\n    formData.append(\"tDescription\", data.tDescription);\n    formData.append(\"vHireDuration\", data.vHireDuration);\n    formData.append(\"vHireMonthlyBudget\", data.vHireMonthlyBudget);\n    formData.append(\"vExperienceRequired\", data.vExperienceRequired);\n    // formData.append(\"vendorid\", data.vendorid);\n    formData.append(\"eStatus\", data.eStatus);\n\n    const apicall = () => {\n      // alert(JSON.stringify(formData));\n      const apidata = axios({\n        method: \"put\",\n        url: `${process.env.REACT_APP_APIURL}/inquiry/${inquiryid}`,\n        data: formData,\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"Token\")}`,\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      })\n      // console.log(apidata);\n      setSelectedFile(undefined);\n      const respo = apidata.data;\n      const check = respo?.Message;\n      setUpdated(true)\n      setIsUpdate(false)\n    };\n    try {\n      // console.log(error)\n      if (isUpdate && Object.keys(error).length == 0) {\n        apicall();\n        singleapi(inquiryid);\n      }\n\n\n    } catch (e) {\n\n    }\n    setSelectedFile(null);\n  }\n\n\n  const uploadimage = (e) => {\n    setIsUpdate(true)\n    setSelectedFile(e.target.files);\n  };\n\n\n  const handlenavi = () => {\n    navigate(\"/project/\" + `${inquiryid}`);\n  };\n  const handleLead = () => {\n    navigate(\"/lead/\" + `${inquiryid}`);\n  }\n  useEffect(() => {\n    // console.log(error)\n  }, [error])\n  return (\n    <>\n      <Sidebar IsSales={true} />\n      <div className='set'>\n        <div className=\"container my-3 body p-5\">\n          <div className=\"row \">\n            <div className=\"col-12 text-center mb-2 \">\n              <h1 className=\"title\">INQUIRY</h1>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\" className=\"d-block\">\n                  Type of Inquire\n                </label>\n                <select\n                  className=\"form-control rounded-pill mt-2\"\n                  type=\"text\"\n                  name=\"eTypeofInquiry\"\n                  placeholder=\"Type of Inquiry\"\n                  value={data.eTypeofInquiry}\n                  onChange={handleChange}\n                >\n                  <option value=\"\">Select</option>\n                  <option value=\"Hire\">Hire</option>\n                  <option value=\"Project Basis\">Project Basis</option>\n                  <option value=\"Fix Cost - Less than 2 weeks\">\n                    Fix Cost - Less than 2 weeks\n                  </option>\n                </select>\n                {error.eTypeofInquiry ? <p style={{ color: \"red\" }}>{error.eTypeofInquiry}</p> : \"\"}\n              </div>\n             { data.eTypeofInquiry===\"Hire\"&&<div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\">Type of Hire</label>\n                <select\n                  className=\"form-control rounded-pill mt-2\"\n                  type=\"text\"\n                  name=\"eTypeofHire\"\n                  placeholder=\"Type of Inquiry\"\n                  value={data.eTypeofHire}\n                  onChange={handleChange}\n                >\n                  <option value=\"\">Select</option>\n                      <option value=\"Weekly\">Weekly</option>\n                      <option value=\"Monthly\">Monthly</option>\n                      <option value=\"Hourly\">Hourly</option>\n                </select>\n                {error.vTitle ? <p style={{ color: \"red\" }}>{error.vTitle}</p> : \"\"}\n              </div>}\n\n              <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\">Title</label>\n                <input\n                  className=\"form-control rounded-pill mt-2\"\n                  type=\"text\"\n                  placeholder=\"\"\n                  name=\"vTitle\"\n                  value={data.vTitle}\n                  onChange={handleChange}\n                />\n                {error.vTitle ? <p style={{ color: \"red\" }}>{error.vTitle}</p> : \"\"}\n              </div>\n              <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\" className=\"d-block\">\n                  Technology\n                </label>\n\n                <select name=\"vTechnology\" id=\"\"\n                  className=\"form-control rounded-pill mt-2\"\n                  onChange={handleChange}\n                  value={data.vTechnology}\n                >\n                  <option value=\"\">select</option>\n                  {technologydropdown.map((e) => {\n                    return (\n                      <option value={e}>{e}</option>\n                    )\n                  })}\n                </select>\n                {error.vTechnology ? <p style={{ color: \"red\" }}>{error.vTechnology}</p> : \"\"}\n              </div>\n\n              <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\">Source of Inquiry</label>\n                <select name=\"vSourceOfInquiry\" id=\"\"\n                  className=\"form-control rounded-pill mt-2\"\n                  onChange={handleChange}\n                  value={data.vSourceOfInquiry}\n                >\n                  <option value=\"\">select</option>\n                  {Sourcelistdropdown.map((e) => {\n                    return <option value={e}>{e}</option>\n                  })\n                  }\n                </select>\n                {error.vSourceOfInquiry ? <p style={{ color: \"red\" }}>{error.vSourceOfInquiry}</p> : \"\"}\n              </div>\n              <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\">Description</label>\n                {/* <textarea className=\"inputField col-12 mb-3\" name=\"tDescription\" value={inquiryform.tDescription} onChange={handleChange} placeholder=\"Description\"></textarea> */}\n                <input\n                  type=\"text\"\n                  className=\"form-control rounded-pill mt-2\"\n                  placeholder=\"\"\n                  name=\"tDescription\"\n                  value={data.tDescription}\n                  onChange={handleChange}\n                />\n                {error.tDescription ? <p style={{ color: \"red\" }}>{error.tDescription}</p> : \"\"}\n              </div>\n\n              <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\">Hire Duration</label>\n                {/* <textarea className=\"inputField col-12 mb-3\" name=\"tDescription\" value={inquiryform.tDescription} onChange={handleChange} placeholder=\"Description\"></textarea> */}\n                <input\n                  type=\"text\"\n                  className=\"form-control rounded-pill mt-2\"\n                  placeholder=\"\"\n                  name=\"vHireDuration\"\n                  value={data.vHireDuration}\n                  onChange={handleChange}\n                />\n                {error.vHireDuration ? <p style={{ color: \"red\" }}>{error.vHireDuration}</p> : \"\"}\n              </div>\n              <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\">Hire Monthly Budget</label>\n                {/* <textarea className=\"inputField col-12 mb-3\" name=\"tDescription\" value={inquiryform.tDescription} onChange={handleChange} placeholder=\"Description\"></textarea> */}\n                <input\n                  type=\"text\"\n                  className=\"form-control rounded-pill mt-2\"\n                  placeholder=\"\"\n                  name=\"vHireMonthlyBudget\"\n                  value={data.vHireMonthlyBudget}\n                  onChange={handleChange}\n                />\n                {error.vHireMonthlyBudget ? <p style={{ color: \"red\" }}>{error.vHireMonthlyBudget}</p> : \"\"}\n              </div>\n\n              <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\">Experience Required</label>\n                {/* <textarea className=\"inputField col-12 mb-3\" name=\"tDescription\" value={inquiryform.tDescription} onChange={handleChange} placeholder=\"Description\"></textarea> */}\n                <input\n                  type=\"text\"\n                  className=\"form-control rounded-pill mt-2\"\n                  placeholder=\"\"\n                  name=\"vExperienceRequired\"\n                  value={data.vExperienceRequired}\n                  onChange={handleChange}\n                />\n                {error.vExperienceRequired ? <p style={{ color: \"red\" }}>{error.vExperienceRequired}</p> : \"\"}\n              </div>\n              <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\">Document:</label><br />\n                {/* <textarea className=\"inputField col-12 mb-3\" name=\"tDescription\" value={inquiryform.tDescription} onChange={handleChange} placeholder=\"Description\"></textarea> */}\n                <input\n                  className=\"form-control rounded-pill mt-2\"\n                  type=\"file\"\n                  name=\"mediafiles\"\n                  id=\"upload\"\n                  accept=\"image/*\"\n                  onChange={uploadimage}\n                  multiple\n                />\n\n              </div>\n\n              <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\">Status</label>\n\n                <select\n                  className=\"form-control rounded-pill mt-2\"\n                  type=\"text\"\n                  name=\"eStatus\"\n                  placeholder=\"Type of Project\"\n                  value={data.eStatus}\n                  onChange={handleChange}\n                >\n                  <option value=\"\">Select</option>\n                  <option value=\"Converted\">Converted</option>\n                  <option value=\"InProgress\">InProgress</option>\n                  <option value=\"Cancelled\">Cancelled</option>\n                  <option value=\"Rejected\">Rejected</option>\n                  <option value=\"OnHold\">OnHold</option>\n                  <option value=\"No Response From Client\">No Response From Client</option>\n                </select>\n                {error.eStatus ? <p style={{ color: \"red\" }}>{error.eStatus}</p> : \"\"}\n              </div>\n              <h3 >Documents</h3>\n              <div className=\"col-xxl-12 col-xl-12 col-lg-12 col-md-6 col-sm-6 my-2 d-inline-flex  \">\n                <div className=\"col-6  my-2 px-3\">\n                  <label htmlFor=\"\">Document Title:</label>\n\n                  <br />\n                  <span className=\"inputField col-12 mb-3\">\n                    {data.Documenttitle}\n                  </span>\n                  {/* <br /> */}\n                  {/* <span className=\"text-primary\">Click to Download</span> */}\n\n                </div>\n                <div className=\"col-6  my-2 px-3\">\n                  <label htmlFor=\"\">Document Name:</label>\n                  <span className=\"text-primary m-2\">Click on file to view</span>\n                  {\n                    doc.length > 0 ? doc.map((e) => {\n                      // console.log(e,\"e is here\")\n\n                      // Documentname,Documenttitle\n                      return (\n                        <>\n                          <br />\n                          <a href={`${process.env.REACT_APP_APIURL}/${e.Documentname}`} target=\"_blank\" className=\"inputField col-12 mb-3\"> {e.Documenttitle}</a>\n\n                        </>\n                      )\n                    }) : \"\"\n                  }\n                </div>\n              </div>\n            </div>\n            <h5 style={{ color: \"green\", textAlign: \"center\" }}> {updated ? \"Updated Successfully\" : \"\"}</h5>\n            {isUpdate ? <button type=\"submit\" onClick={inquiryData} className=\"mx-auto btn btn-outline-dark w-25\">\n              Update\n            </button> :\n              <button type=\"submit\" onClick={inquiryData} disabled className=\"mx-auto btn btn-outline-dark w-25\">\n                Update\n              </button>\n\n            }\n            <button type=\"submit\" onClick={handlenavi} className=\"mx-auto  text-white bg-dark btn btn-outline-dark w-25\">\n              Convert into Project\n            </button>\n            <button type=\"submit\" onClick={handleLead} className=\"mx-auto  text-white bg-dark btn btn-outline-dark w-25\">\n              Convert into Lead\n            </button>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Iedit","/var/www/html/github/inhouse/src/pages/lead_list/l_list.jsx",["518","519","520","521","522","523","524","525","526","527","528","529"],[],"import React from \"react\";\nimport Sidebar from \"../sidebar/sidebar\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Filter from \"../filter\";\nimport ReactPaginate from \"react-paginate\";\n \n\n\nconst L_list = ()=>{\n  const [selectedFilter,setSelectedFilter] = useState()\n  const [FilterName, setFilterName] = useState()\n    const [data, setData] = useState([{}]);\n    const [pageCount, setpageCount] = useState(0);\n    const [itemOffset, setItemOffset] = useState(0);\n    const [currentItem, setCurrentItem] = useState(null);\n    let itemPerPage = 10;\n\n\n\n    let controller = new AbortController();\n  const filterapidata=(filterData)=>{\n    setFilterName(filterData.FilterName)\n    setSelectedFilter(filterData.selectedFilter)\n    if(filterData.FilterName!=undefined){\n     controller.abort(\"change filter value\");\n    // controller.abort(\"change filter value\");\n\n   }\n  }\n  useEffect(()=>{\n    // if(FilterName?.length>0&& selectedFilter?.length>0){\n    //   console.log(\"fffff\")\n  \n    // }\n\n   listapi()\n  },[FilterName])\n\n  const listapi = async (passFilterParam) => {\n\n    let {signal}=controller\n    let apihiturl = `${process.env.REACT_APP_APIURL}/lead?`\n    if(selectedFilter?.length>0&&\n      FilterName?.length>0)\n      {\n      \n      apihiturl+=`${selectedFilter}=${FilterName}`\n    }\n    if (!selectedFilter&& FilterName?.length > 0) {\n      apihiturl += `filterdata=${FilterName}`\n    }\n    if(itemOffset>0){\n      apihiturl += `&lastlead=${itemOffset}`\n    }\n    const result = await fetch(apihiturl, {\n      signal,\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"Token\")}`,\n      },  \n    });\n\n    \n    \n    const apiresponse = await result.json();\n   \n    const apicheck = apiresponse?.leadsfound;\n    setData(apicheck);\n    setCurrentItem(apicheck)\n    // console.log(apiresponse.leadscount)\n    setpageCount(Math.ceil(apiresponse.leadscount/ itemPerPage))\n    \n  };\n\n  useEffect(() => {\n    listapi();\n    \n  }, []);\n\n  useEffect(() => {\n    // console.log(\"from currentitem\",currentItem);\n  }, [data]);\n\n\n\n\n  useEffect(()=>{\n    const endoffset = itemOffset + itemPerPage\n    // setCurrentItem(data.slice(itemOffset,endoffset))\n    // setpageCount(Math.ceil(data.length/ itemPerPage))\n    // console.log(endoffset)\n    // console.log(\"current\",currentItem)\n    // console.log(\"data\", data.length)\n  },[itemOffset,itemPerPage,data])\n\n  const handlePageClick=(e)=>{\n    const newOffset=(e.selected*itemPerPage)\n    // alert(newOffset)\n    setItemOffset(newOffset)\n    // console.log(newOffset)\n  }\n useEffect(()=>{\n  listapi();\n   \n },[itemOffset])\n\n\n    return(\n        <>\n\n\n<Sidebar IsSales={true}/>\n\n<div className='set'>\n  <div className=\"container my-3 body p-5\">\n    <div className=\"row \"></div>\n<div>\n  <Filter tofilterdata={filterapidata} isPage={\"lead\"}/>\n  \n  <table class=\"table\">\n<thead class=\"thead-dark\">\n  <tr>\n    {/* <th scope=\"col\">#</th> */}\n    <th scope=\"col\">Title</th>\n    <th scope=\"col\">Technology</th>\n    <th scope=\"col\">Type of Project</th>\n    <th scope=\"col\">Hire Resource</th>\n    <th scope=\"col\">Hire Billing Amount</th>\n    <th scope=\"col\">Hire Duration</th>\n    <th scope=\"col\">Status</th>\n    <th scope=\"col\">Edit</th>\n  </tr>\n</thead>\n\n\n<tbody>\n            {data.length>0&&Object.keys(data[0]).length>0?currentItem?.map((e) => {\n              // console.log(\"from the lead list\",Object.keys(e).length);\n              return (\n                <tr>\n                  <td data-column=\"First Name\">{e.vTitleProject}</td>\n                  <td data-column=\"Last Name\">{e.vTechnology}</td>\n                  <td data-column=\"Job Title\">{e.eTypeOfProject}</td>\n                  <td data-column=\"Job Title\">{e.vHireResource}</td>\n                  <td data-column=\"Twitter\">{e.fHireBillingAmount}</td>\n                  <td data-column=\"Status\">{e.vHireDuration}</td>\n                  {e.eStatus==\"Converted\" ?<td className=\"Converted\" data-column=\"Status\">{e.eStatus}</td>:\"\"}\n                 {e.eStatus==\"InProgress\" ?<td className=\"Inprogress\" data-column=\"Status\">{e.eStatus}</td>:\"\"}\n                 {e.eStatus==\"Cancelled\" ?<td className=\"Cancelled\" data-column=\"Status\">{e.eStatus}</td>:\"\"}\n                 {e.eStatus==\"Rejected\" ?<td className=\"Rejected\" data-column=\"Status\">{e.eStatus}</td>:\"\"}\n                 {e.eStatus==\"OnHold\" ?<td className=\"OnHold\" data-column=\"Status\">{e.eStatus}</td>:\"\"}\n                 {e.eStatus==\"No Response From Client\" ?<td className=\"NoResponse\" data-column=\"Status\">{e.eStatus}</td>:\"\"}\n                 <td data-column=\"Status\">                 \n                  <Link to={\"/l_edit/\" + `${e.id}`}>\n                    {\" \"}\n                   Edit\n                  </Link>\n                  </td>\n                </tr>\n              );\n            })\n          :\"\"}\n          </tbody>\n\n</table>\n<div className=\"pagination\">\n\n<ReactPaginate\nbreakLabel=\"...\"\nnextLabel=\"next >\"\nonPageChange={handlePageClick}\npageRangeDisplayed={3}\npageCount={pageCount}\npreviousLabel=\"< previous\"\nrenderOnZeroPageCount={null}\nbreakClassName={'page-item'}\nbreakLinkClassName={'page-link'}\ncontainerClassName={'pagination'}\npageClassName={'page-item'}\npageLinkClassName={'page-link'}\npreviousClassName={'page-item'}\npreviousLinkClassName={'page-link'}\nnextClassName={'page-item'}\nnextLinkClassName={'page-link'}\nactiveClassName={'active'}\n\n\n/>\n</div>\n\n</div>\n</div>\n</div>\n\n\n        </>\n    )\n\n}\nexport default L_list","/var/www/html/github/inhouse/src/pages/project_edit/p_edit.jsx",["530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584","585","586"],[],"import React, { Component } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport Sidebar from \"../sidebar/sidebar\";\nimport axios from \"axios\";\nimport fileDownload from 'js-file-download'\nimport { Link } from \"react-router-dom\";\nimport { useForm } from 'react-hook-form';\n// import Multiselect from \"multiselect-react-dropdown\";\nimport Select from \"react-select\";\nimport { sourcelist, technologylist } from \"../../constfiles\";\n\n\n\nconst P_edit = () => {\n  const [selectusers, setselectusers] = useState()\n  const [alreadypresent, setAlreadypresent] = useState()\n  const [Sourcelistdropdown, setSourcelistdropdown] = useState(sourcelist);\n  const [technologydropdown] = useState(technologylist);\n  const [dev, setDev] = useState([{\n    \"id\": 0,\n    \"vname\": \"\"\n  }])\n\n  const handleselectusers = () => {\n    setselectusers()\n\n  }\n\n  const { projectid } = useParams();\n  const check = localStorage.setItem(\"projectid\", projectid)\n  const posting = () => {\n    if (selectusers.length != 0) {\n      console.log(\"list ofusers to send\", selectusers)\n      const passingids = selectusers?.map((e) => {\n        console.log(e)\n        return e.value\n      })\n      console.log(passingids)\n      const passdatatocreateam = {\n        iProjectid: projectid,\n        userlist: passingids\n      }\n      axios.post(`${process.env.REACT_APP_APIURL}/projectteam/createteam`, passdatatocreateam, {\n        headers: {\n          'Content-type': 'application/json',\n          'Accept': 'application/json',\n          \"Authorization\": `Bearer ${localStorage.getItem('Token')}`\n        }\n      }).then(() => {\n        console.log(respo => (respo.data))\n\n\n      }).catch(e => {\n        let nameofuseralreadyexites = []\n        const reusedmembers = e.response.data.slice(35)\n        const gettedmember = reusedmembers.split(\",\")\n        let username = gettedmember.map((e) => {\n          selectusers.filter((h) => {\n            if (h.value === e) {\n              nameofuseralreadyexites.push(h.label)\n              return h\n            }\n          })\n        })\n        setAlreadypresent(nameofuseralreadyexites)\n      })\n    }\n  }\n\n\n  let errorMessage = \"\"\n  const [isUpdate, setIsUpdate] = useState(false)\n  const [updated, setUpdated] = useState(false)\n  const [error, setError] = useState({})\n  const [gettedoption, setGettedoption] = useState([{}])\n  const [createTeam, setCreateTeam] = useState(false)\n  const [cancel, setCancel] = useState(false)\n\n  const navigate = useNavigate();\n  const [doc, setDoc] = useState([])\n\n  const [selectedFile, setSelectedFile] = useState();\n  // const [updateForm, SetUpdateForm] = useState({});\n  // const { iProjectId } = useParams();\n\n  const [milestone, setMilestone] = useState({\n    iProjectId: projectid,\n  });\n  // alert(inquiryid);\n  const [data, setData] = useState({\n    // iiInquiryId: inquiryid,\n    iprojectid: projectid,\n    vTechnology: \"\"\n  });\n\n  let handleChange = (e) => {\n    let name = e.target.name;\n    let value = e.target.value;\n    setData({ ...data, [name]: value });\n    setIsUpdate(true)\n    setUpdated(false)\n  };\n\n  const devpost = () => {\n    axios.get(\"http://192.168.5.21:7000/developer\", {\n      headers: {\n        'Content-type': 'application/json',\n        'Accept': 'application/json',\n        \"Authorization\": \"`Bearer ${localStorage.getItem('Token')\"\n      }\n    }).then(respo => (respo.data)).then(res => {\n      setDev(res.developerlist)\n      setIsUpdate(false)\n\n    })\n  }\n\n  useEffect(() => {\n    devpost()\n  }, [])\n  useEffect(() => {\n\n    alreadypresent?.map((e) => {\n      errorMessage += `${e} ,`\n    })\n    console.log(\"Already present\", alreadypresent, errorMessage)\n  }, [alreadypresent])\n  useEffect(() => {\n    let noofdeveloers = []\n    dev.map(e => {\n      noofdeveloers.push({\n        value: e.id,\n        label: e.vname\n      })\n      setGettedoption(noofdeveloers)\n\n    })\n  }, [dev])\n\n  const isvalid = (verificationdata) => {\n    let errors = {};\n\n    // if (\n    //   verificationdata.CompanyName == undefined ||\n    //   verificationdata.CompanyName == \"\"\n    // ) {\n    //   errors.CompanyName = \"Company name is Required\";\n    // } else if (\n    //   !/^([a-zA-Z]+\\s)*[a-zA-Z]+$/.test(verificationdata.CompanyName)\n    // ) {\n    //   errors.CompanyName = \"Company name is not valid \";\n    // }\n    if (\n      verificationdata.eTypeOfProject == undefined ||\n      verificationdata.eTypeOfProject == \"\"\n    ) {\n      errors.eTypeOfProject = \"Field should not be empty\";\n    }\n    if (\n      verificationdata.vTitleProject == undefined ||\n      verificationdata.vTitleProject == \"\"\n    ) {\n      errors.vTitleProject = \"Field should not be empty\";\n    }\n    if (\n      verificationdata.fCostOfProject == undefined ||\n      verificationdata.fCostOfProject == \"\"\n    ) {\n      errors.fCostOfProject = \"Field should not be empty\";\n    }\n    if (\n      verificationdata.vTechnology == undefined ||\n      verificationdata.vTechnology == \"\"\n    ) {\n      errors.vTechnology = \"Field should not be empty\";\n    }\n    if (\n      verificationdata.vHireResource == undefined ||\n      verificationdata.vHireResource == \"\"\n    ) {\n      errors.vHireResource = \"Field should not be empty\";\n    }\n    // if (\n    //   verificationdata.tNotes == undefined ||\n    //   verificationdata.tNotes == \"\"\n    // ) {\n    //   errors.tNotes = \"Field should not be empty\";\n    // }\n    if (\n      verificationdata.vExperienceRequired == undefined ||\n      verificationdata.vExperienceRequired == \"\"\n    ) {\n      errors.vExperienceRequired = \"Field should not be empty\";\n    }\n    if (\n      verificationdata.eStatus == undefined ||\n      verificationdata.eStatus == \"\"\n    ) {\n      errors.eStatus = \"Field should not be empty\";\n    }\n    // if (\n    //   verificationdata.iVendorId == undefined ||\n    //   verificationdata.iVendorId == \"\"\n    // ) {\n    //   errors.iVendorId = \"Field should not be empty\";\n    // }\n    if (\n      verificationdata.dBillingCycleDate == undefined ||\n      verificationdata.dBillingCycleDate == \"\"\n    ) {\n      errors.dBillingCycleDate = \"Field should not be empty\";\n    }\n    if (\n      verificationdata.fHireBillingAmount == undefined ||\n      verificationdata.fHireBillingAmount == \"\"\n    ) {\n      errors.fHireBillingAmount = \"Field should not be empty\";\n    }\n    if (\n      verificationdata.dconvertedDate == undefined ||\n      verificationdata.dconvertedDate == \"\"\n    ) {\n      errors.dconvertedDate = \"Field should not be empty\";\n    }\n    if (\n      verificationdata.vHireDuration == undefined ||\n      verificationdata.vHireDuration == \"\"\n    ) {\n      errors.vHireDuration = \"Field should not be empty\";\n    }\n    if (\n      verificationdata.fProjectCost == undefined ||\n      verificationdata.fProjectCost == \"\"\n    ) {\n      errors.fProjectCost = \"Field should not be empty\";\n    }\n    if (\n      verificationdata.fAtCostResourceToVendor == undefined ||\n      verificationdata.fAtCostResourceToVendor == \"\"\n    ) {\n      errors.fAtCostResourceToVendor = \"Field should not be empty\";\n    }\n    if (\n      verificationdata.vHireMonthlyBudget == undefined ||\n      verificationdata.vHireMonthlyBudget == \"\"\n    ) {\n      errors.vHireMonthlyBudget = \"Field should not be empty\";\n    }\n\n    return errors;\n  };\n\n  useEffect(() => {\n    if (Object.keys(data).length != 0) {\n      setError(isvalid(data));\n    } else {\n      return;\n    }\n  }, [data]);\n\n  // alert(inquiryid);\n\n  const singleapi = async (projectid) => {\n    // alert(\"in call\");\n    const result = await fetch(\n      `${process.env.REACT_APP_APIURL}/projects/${projectid}`,\n      {\n        method: \"get\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"Token\")}`,\n        },\n      }\n    );\n    // localStorage.setItem(\"project id\", projectid);\n    // localStorage.getItem(\"inquiry id\", inquiryid);\n\n    const apiresponse = await result.json();\n    const check = apiresponse.userid;\n    setData({ ...data, ...check[0] });\n    setDoc(check)\n    // console.log(check);\n  };\n  useEffect(() => {\n    singleapi(projectid);\n  }, []);\n\n  useEffect(() => {\n    // console.log(data);\n  }, [data]);\n\n\n\n\n\n\n\n\n\n\n  const inquiryData = (e) => {\n    // e.preventDefault();\n    // alert(JSON.stringify(data))\n    const formData = new FormData();\n    if (selectedFile != undefined) {\n      for (let i = 0; i < selectedFile.length; i++) {\n        formData.append(\"requiredprojectfiles\", selectedFile[i]);\n      }\n    }\n\n    formData.append(\"iprojectid\", projectid);\n    formData.append(\"eTypeOfProject\", data.eTypeOfProject);\n    formData.append(\"vTitleProject\", data.vTitleProject);\n    formData.append(\"fCostOfProject\", data.fCostOfProject);\n    formData.append(\"vTechnology\", data.vTechnology);\n    formData.append(\"vHireResource\", data.vHireResource);\n    formData.append(\"tNotes\", data.tNotes);\n    formData.append(\"iVendorId\", data.iVendorId);\n    formData.append(\"dBillingCycleDate\", data.dBillingCycleDate);\n    formData.append(\"fHireBillingAmount\", data.fHireBillingAmount);\n    formData.append(\"dconvertedDate\", data.dconvertedDate);\n    formData.append(\"fProjectCost\", data.fProjectCost);\n    formData.append(\"vExperienceRequired\", data.vExperienceRequired);\n    formData.append(\"vHireMonthlyBudget\", data.vHireMonthlyBudget);\n    formData.append(\"fAtCostResourceToVendor\", data.fAtCostResourceToVendor);\n    formData.append(\"vHireDuration\", data.vHireDuration);\n    formData.append(\"eStatus\", data.eStatus);\n\n    const apicall = () => {\n      // alert(JSON.stringify(formData));\n      const apidata = axios({\n        method: \"put\",\n        url: `${process.env.REACT_APP_APIURL}/projects/${projectid}`,\n        data: formData,\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"Token\")}`,\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      })\n      // console.log(apidata);\n      setSelectedFile(undefined);\n      const respo = apidata.data;\n      const check = respo?.Message;\n\n      setUpdated(true)\n      setIsUpdate(false)\n    };\n    try {\n      if (isUpdate && Object.keys(error).length == 0) {\n        apicall();\n        posting()\n        singleapi(projectid);\n      }\n\n    } catch (e) {\n      // alert(e)\n      // alert(e)\n    }\n    setSelectedFile(null);\n  }\n\n\n  const uploadimage = (e) => {\n    setIsUpdate(true)\n    // setUpdated(false)\n\n    setSelectedFile(e.target.files);\n    // console.log(e.target.files)\n  };\n\n\n  const handleCreate = () => {\n    setCreateTeam(true)\n    // setIsUpdate(true)\n\n  }\n\n  const handleCancel = () => {\n    setCreateTeam(false)\n    // setIsUpdate(false)\n\n  }\n\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    control,\n  } = useForm();\n\n\n  useEffect(() => {\n    // console.log(error)\n  }, [error])\n  useEffect(() => {\n    setIsUpdate(true)\n    setUpdated(false)\n    setAlreadypresent()\n    console.log(\"from user got\", selectusers)\n  }, [selectusers])\n\n\n\n  return (\n    <>\n\n      <Sidebar IsSales={true} />\n\n      <div className='set'>\n\n        <div className=\"container my-3 body p-5\">\n\n          {/* <button type=\"submit\"  onClick={handleBack} className=\"mx-auto bg-dark text-white btn btn-outline-dark w-25\">\n            Back \n          </button> */}\n\n\n          <div className=\"row \">\n\n\n\n\n\n            <div className=\"col-12 text-center mb-2 \">\n              <h1 className=\"title\">PROJECT</h1>\n            </div>\n\n\n\n            <div>\n              <div className=\"col-xxl-12 col-xl-12 col-lg-6 col-md-12 col-sm-12 my-2 d-inline-flex \">\n                <div className=\"col-6  my-2 px-3\">\n                  <label htmlFor=\"\" className=\"d-block\">\n                    Type of Project\n                  </label>\n\n\n                  {/* <select className=\"formcontrol d-block dropdownWidth mb-3\" name=\"eTypeofInquiry\" value={inquiryform.eTypeofInquiry} onChange={handleChange}>\n                        <option>Select</option>\n                        <option value=\"Hire\">Hire</option>\n                        <option value=\"Project Basis\">Project Basis</option>\n                        <option value=\"Fix Cost - Less than 2 Weeks\">Fix Cost - Less than 2 Weeks</option>\n                    </select> */}\n\n\n\n                  <select\n                    // {...register('eTypeOfProject', { required: true })}\n                    className=\"form-control rounded-pill mt-2\"\n                    type=\"text\"\n                    name=\"eTypeOfProject\"\n                    placeholder=\"Type of Project\"\n                    value={data.eTypeOfProject}\n                    onChange={handleChange}\n                  >\n                    <option value=\"\">Select</option>\n                    <option value=\"Hire\">Hire</option>\n                    <option value=\"Project Basis\">Project Basis</option>\n                    <option value=\"Fix Cost - Less than 2 weeks\">\n                      Fix Cost - Less than 2 weeks\n                    </option>\n                  </select>\n                  {error.eTypeOfProject ? <p style={{ color: \"red\" }}>{error.eTypeOfProject}</p> : \"\"}\n\n                  {/* {data.eTypeOfProject==\"\"||null||undefined?errors.eTypeOfProject && <p className=\"error\">Type is required.</p>:\"\"} */}\n                </div>\n\n                <div className=\"col-6  my-2 px-3\">\n                  <label htmlFor=\"\">Title</label>\n                  {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vTitle\" value={inquiryform.vTitle} onChange={handleChange} placeholder=\"Inquiry Title\" /> */}\n                  <input\n                    // {...register('vTitleProject', { required: true })}\n                    className=\"form-control rounded-pill mt-2\"\n                    type=\"text\"\n                    name=\"vTitleProject\"\n                    placeholder=\"Project Title\"\n                    value={data.vTitleProject}\n                    onChange={handleChange}\n                  />\n                  {error.vTitleProject ? <p style={{ color: \"red\" }}>{error.vTitleProject}</p> : \"\"}\n\n                  {/* {data.vTitleProject==\"\"||null||undefined?errors.vTitleProject && <p className=\"error\">Title is required.</p>:\"\"} */}\n                </div>\n              </div>\n              <div className=\"col-12 my-2 d-inline-flex \">\n                <div className=\"col-6  my-2 px-3\">\n                  <label htmlFor=\"\" className=\"d-block\">\n                    Technology\n                  </label>\n                  {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vTechnology\" value={inquiryform.vTechnology} onChange={handleChange} placeholder=\"Inquiry Technology\" /> */}\n                  {/* <input\n                    // {...register('vTechnology', { required: true })}\n                    type=\"text\"\n                    className=\"form-control rounded-pill mt-2\"\n                    name=\"vTechnology\"\n                    placeholder=\"Technology\"\n                    value={data.vTechnology}\n                    onChange={handleChange}\n                  /> */}\n                  <select name=\"vTechnology\" id=\"\"\n                    // {...register('vTechnology', { required: true })}\n                    className=\"form-control rounded-pill mt-2\"\n                    onChange={handleChange}\n                  // value={data.vTechnology}\n                  >\n                    <option value=\"\">select</option>\n                    {technologydropdown.map((e) => {\n                      // console.log(typeof data.vTechnology,data.vTechnology,data.vTechnology?.toLowerCase()==e.toLowerCase())\n                      return (\n                        <option value={e} selected={data?.vTechnology.toLowerCase() == e.toLowerCase() ? \"selected\" : \"\"}>{e}</option>\n                      )\n                    })}\n                  </select>\n                  {error.vTechnology ? <p style={{ color: \"red\" }}>{error.vTechnology}</p> : \"\"}\n                  {/* {data.vTechnology==\"\"||null||undefined?errors.vTechnology && <p className=\"error\">Technology is required.</p>:\"\"} */}\n                </div>\n\n                <div className=\"col-6  my-2 px-3\">\n                  <label htmlFor=\"\">Hire Resource</label>\n                  {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vSourceOfInquiry\" value={inquiryform.vSourceOfInquiry} onChange={handleChange} placeholder=\"Source of Inquiry\" /> */}\n                  <input\n                    // {...register('vHireResource', { required: true })}\n                    type=\"text\"\n                    className=\"form-control rounded-pill mt-2\"\n                    name=\"vHireResource\"\n                    placeholder=\"Hire Resource\"\n                    value={data.vHireResource}\n                    onChange={handleChange}\n                  />\n                  {error.vHireResource ? <p style={{ color: \"red\" }}>{error.vHireResource}</p> : \"\"}\n                  {/* {data.vHireResource==\"\"||null||undefined?errors.vHireResource && <p className=\"error\">HireResource is required.</p>:\"\"} */}\n                </div>\n              </div>\n              <div className=\"col-xxl-12 col-xl-12 col-lg-12 col-md-6 col-sm-6 my-2 d-inline-flex  \">\n                <div className=\"col-6  my-2 px-3\">\n                  <label htmlFor=\"\">Billing Date</label>\n                  {/* <textarea className=\"inputField col-12 mb-3\" name=\"tDescription\" value={inquiryform.tDescription} onChange={handleChange} placeholder=\"Description\"></textarea> */}\n                  <input\n                    // {...register('dBillingCycleDate', { required: true })}\n                    type=\"date\"\n                    className=\"form-control rounded-pill mt-2\"\n                    name=\"dBillingCycleDate\"\n                    placeholder=\"Billing Date\"\n                    value={new Date(data.dBillingCycleDate).toLocaleDateString(\"en-CA\")}\n                    onChange={handleChange}\n                  />\n                  {error.dBillingCycleDate ? <p style={{ color: \"red\" }}>{error.dBillingCycleDate}</p> : \"\"}\n                  {/* {data.dBillingCycleDate==\"\"||null||undefined?errors.dBillingCycleDate && <p className=\"error\">Billing Cycle Date is required.</p>:\"\"} */}\n                </div>\n\n                <div className=\"col-6  my-2 px-3\">\n                  <label htmlFor=\"\">Billing Amount</label>\n                  {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vHireDuration\" value={inquiryform.vHireDuration} onChange={handleChange} placeholder=\"Hire Duration\" /> */}\n                  <input\n                    // {...register('fHireBillingAmount', { required: true })}\n                    type=\"number\"\n                    className=\"form-control rounded-pill mt-2\"\n                    name=\"fHireBillingAmount\"\n                    placeholder=\"Billing Amount\"\n                    value={data.fHireBillingAmount}\n                    onChange={handleChange}\n                  />\n                  {error.fHireBillingAmount ? <p style={{ color: \"red\" }}>{error.fHireBillingAmount}</p> : \"\"}\n                  {/* {data.fHireBillingAmount==\"\"||null||undefined?errors.fHireBillingAmount && <p className=\"error\">Hire Billing VAmount is required.</p>:\"\"} */}\n                </div>\n\n              </div>\n              <div className=\"col-xxl-12 col-xl-12 col-lg-12 col-md-6 col-sm-6 my-2 d-inline-flex  \">\n                <div className=\"col-6  my-2 px-3\">\n                  <label htmlFor=\"\">Converted Date</label>\n                  {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vHireMonthlyBudget\" value={inquiryform.vHireMonthlyBudget} onChange={handleChange} placeholder=\"Hire Monthly Budget\" /> */}\n                  <input\n                    // {...register('dconvertedDate', { required: true })}\n                    type=\"date\"\n                    className=\"form-control rounded-pill mt-2\"\n                    name=\"dconvertedDate\"\n                    placeholder=\"Converted Date\"\n                    value={new Date(data.dconvertedDate).toLocaleDateString(\"en-CA\")}\n                    onChange={handleChange}\n                  />\n                  {error.dconvertedDate ? <p style={{ color: \"red\" }}>{error.dconvertedDate}</p> : \"\"}\n                  {/* {data.dconvertedDate==\"\"||null||undefined?errors.dconvertedDate && <p className=\"error\">Converted Date is required.</p>:\"\"} */}\n                </div>\n\n                <div className=\"col-6  my-2 px-3\">\n                  <label htmlFor=\"\">Project Cost</label>\n                  {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vExperienceRequired\" value={inquiryform.vExperienceRequired} onChange={handleChange} placeholder=\"Experience Required\" /> */}\n                  <input\n                    // {...register('fProjectCost', { required: true })}\n                    type=\"number\"\n                    className=\"form-control rounded-pill mt-2\"\n                    name=\"fProjectCost\"\n                    placeholder=\"Project Cost\"\n                    value={data.fProjectCost}\n                    onChange={handleChange}\n                  />\n                  {error.fProjectCost ? <p style={{ color: \"red\" }}>{error.fProjectCost}</p> : \"\"}\n                  {/* {data.fProjectCost==\"\"||null||undefined?errors.fProjectCost && <p className=\"error\">Project Cost is required.</p>:\"\"} */}\n                </div>\n\n              </div>\n\n\n\n              <div className=\"col-xxl-12 col-xl-12 col-lg-12 col-md-6 col-sm-6 my-2 d-inline-flex  \">\n                <div className=\"col-6  my-2 px-3\">\n                  <label htmlFor=\"\">Cost of Project</label>\n                  {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vExperienceRequired\" value={inquiryform.vExperienceRequired} onChange={handleChange} placeholder=\"Experience Required\" /> */}\n                  <input\n                    // {...register('fCostOfProject', { required: true })}\n                    type=\"number\"\n                    className=\"form-control rounded-pill mt-2\"\n                    name=\"fCostOfProject\"\n                    placeholder=\"Cost of Project\"\n                    value={data.fCostOfProject}\n                    onChange={handleChange}\n                  />\n                  {error.fCostOfProject ? <p style={{ color: \"red\" }}>{error.fCostOfProject}</p> : \"\"}\n                  {/* {data.fCostOfProject==\"\"||null||undefined?errors.fCostOfProject && <p className=\"error\">Cost Of Project is required.</p>:\"\"} */}\n                </div>\n\n                <div className=\"col-6  my-2 px-3\">\n                  <label htmlFor=\"\">Monthly Budget</label>\n                  <input\n                    // {...register('vHireMonthlyBudget', { required: true })}\n                    type=\"number\"\n                    className=\"form-control rounded-pill mt-2\"\n                    name=\"vHireMonthlyBudget\"\n                    placeholder=\"Monthly budget\"\n                    value={data.vHireMonthlyBudget}\n                    onChange={handleChange}\n                  />\n                  {error.vHireMonthlyBudget ? <p style={{ color: \"red\" }}>{error.vHireMonthlyBudget}</p> : \"\"}\n                  {/* {data.vHireMonthlyBudget==\"\"||null||undefined?errors.vHireMonthlyBudget && <p className=\"error\">Hire Monthly Budget is required.</p>:\"\"} */}\n                  {/* <label htmlFor=\"\">Notes</label>\n                <input\n              type=\"text\"\n              className=\"inputField col-12 mb-3\"\n              name=\"tNotes\"\n              placeholder=\"Notes\"\n              value={data.tNotes}\n              onChange={handleChange}\n            /> */}\n                </div>\n\n              </div>\n\n\n\n\n\n\n              <div className=\"col-xxl-12 col-xl-12 col-lg-12 col-md-6 col-sm-6 my-2 d-inline-flex  \">\n                <div className=\"col-6  my-2 px-3\">\n                  <label htmlFor=\"\">Experienced Required</label>\n                  {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vExperienceRequired\" value={inquiryform.vExperienceRequired} onChange={handleChange} placeholder=\"Experience Required\" /> */}\n                  <input\n                    // {...register('vExperienceRequired', { required: true })}\n                    type=\"text\"\n                    className=\"form-control rounded-pill mt-2\"\n                    name=\"vExperienceRequired\"\n                    placeholder=\"Experienced Required\"\n                    value={data.vExperienceRequired}\n                    onChange={handleChange}\n                  />\n                  {error.vExperienceRequired ? <p style={{ color: \"red\" }}>{error.vExperienceRequired}</p> : \"\"}\n                  {/* {data.vExperienceRequired==\"\"||null||undefined?errors.vExperienceRequired && <p className=\"error\">Experience Required is required.</p>:\"\"} */}\n                </div>\n                <div className=\"col-6  my-2 px-3\">\n                  <label htmlFor=\"\">Cost of Resource</label>\n                  {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vExperienceRequired\" value={inquiryform.vExperienceRequired} onChange={handleChange} placeholder=\"Experience Required\" /> */}\n                  <input\n                    // {...register('fAtCostResourceToVendor', { required: true })}\n                    type=\"number\"\n                    className=\"form-control rounded-pill mt-2\"\n                    name=\"fAtCostResourceToVendor\"\n                    placeholder=\"Cost of Resource\"\n                    value={data.fAtCostResourceToVendor}\n                    onChange={handleChange}\n                  />\n                  {error.fAtCostResourceToVendor ? <p style={{ color: \"red\" }}>{error.fAtCostResourceToVendor}</p> : \"\"}\n\n                  {/* {data.fAtCostResourceToVendor==\"\"||null||undefined?errors.fAtCostResourceToVendor && <p className=\"error\">Cost Resource To Vendor Required is required.</p>:\"\"} */}\n                </div>\n\n              </div>\n\n\n              <div className=\"col-xxl-12 col-xl-12 col-lg-12 col-md-6 col-sm-6 my-2 d-inline-flex  \">\n                <div className=\"col-6  my-2 px-3\">\n                  <label htmlFor=\"\">Project Status</label>\n                  {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vExperienceRequired\" value={inquiryform.vExperienceRequired} onChange={handleChange} placeholder=\"Experience Required\" /> */}\n                  <select\n                    // {...register('eProjectStatus', { required: true })}\n                    className=\"form-control rounded-pill mt-2\"\n                    type=\"text\"\n                    name=\"eProjectStatus\"\n                    placeholder=\"Type of Project\"\n                    value={data.eProjectStatus}\n                    onChange={handleChange}\n                    disabled\n                  >\n                    <option value=\"\">Select</option>\n                    <option value=\"Inquiry\">Inquiry</option>\n                    <option value=\"Lead\">Lead</option>\n                    <option value=\"Project\">Project</option>\n\n                  </select>\n                  {error.eProjectStatus ? <p style={{ color: \"red\" }}>{error.eProjectStatus}</p> : \"\"}\n                  {/* {data.eProjectStatus==\"\"||null||undefined?errors.eProjectStatus && <p className=\"error\">Project Status is required.</p>:\"\"} */}\n                </div>\n                <div className=\"col-6  my-2 px-3\">\n                  <label htmlFor=\"\">Status</label>\n                  {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vExperienceRequired\" value={inquiryform.vExperienceRequired} onChange={handleChange} placeholder=\"Experience Required\" /> */}\n                  <select\n                    // {...register('eStatus', { required: true })}\n                    className=\"form-control rounded-pill mt-2\"\n                    type=\"text\"\n                    name=\"eStatus\"\n                    placeholder=\"Type of Project\"\n                    value={data.eStatus}\n                    onChange={handleChange}\n                  >\n                    <option value=\"\">Select</option>\n                    <option value=\"Converted\">Converted</option>\n                    <option value=\"InProgress\">InProgress</option>\n                    <option value=\"Cancelled\">Cancelled</option>\n                    <option value=\"Rejected\">Rejected</option>\n                    <option value=\"OnHold\">OnHold</option>\n                    <option value=\"No Response From Client\">No Response From Client</option>\n\n\n                  </select>\n                  {error.eStatus ? <p style={{ color: \"red\" }}>{error.eStatus}</p> : \"\"}\n                  {/* {data.eStatus==\"\"||null||undefined?errors.eStatus && <p className=\"error\">Status Required is required.</p>:\"\"} */}\n                </div>\n\n\n\n              </div>\n\n\n\n\n\n              <div className=\"col-xxl-12 col-xl-12 col-lg-12 col-md-6 col-sm-6 my-2 d-inline-flex  \">\n                <div className=\"col-6  my-2 px-3\">\n                  <label htmlFor=\"\">Hire Duration</label>\n                  <input\n                    //  {...register('vHireDuration', { required: true })}\n                    type=\"text\"\n                    className=\"form-control rounded-pill mt-2\"\n                    name=\"vHireDuration\"\n                    placeholder=\"Hire Duration\"\n                    value={data.vHireDuration}\n                    onChange={handleChange}\n                  />\n                  {error.vHireDuration ? <p style={{ color: \"red\" }}>{error.vHireDuration}</p> : \"\"}\n                  {/* {data.vHireDuration==\"\"||null||undefined?errors.vHireDuration && <p className=\"error\">Hire Duration Required is required.</p>:\"\"} */}\n                </div>\n\n                <div className=\"col-6  my-2 px-3\">\n                  <label htmlFor=\"\">Document:</label><br />\n                  <input\n                    type=\"file\"\n                    className=\"form-control rounded-pill mt-2\"\n                    name=\"requiredprojectfiles\"\n                    id=\"upload\"\n                    accept=\"image/*\"\n                    onChange={uploadimage}\n                    multiple\n                  />\n\n\n                </div>\n\n\n\n\n\n              </div>\n              <div className=\"col-xxl-12 col-xl-12 col-lg-12 col-md-6 col-sm-6 my-2 d-inline-flex  \">\n\n                <div className=\"col-6  my-2 px-3\">\n                  {!createTeam ? <button type=\"submit\" onClick={handleCreate} style={{ marginTop: \"30px\" }} className=\"mx-auto  btn btn-outline-dark w-50\">\n                    Add Team Member\n                  </button> :\n                    <button type=\"submit\" onClick={handleCancel} style={{ marginTop: \"30px\" }} className=\"mx-auto  btn btn-outline-dark w-50\">\n                      cancel\n                    </button>\n                  }\n\n                </div>\n\n\n\n\n                {createTeam && <div className=\"col-6  my-2  px-3\">\n                  <label htmlFor=\"\" className=\"form-label select-label\">Create a Team</label>\n\n                  <Select\n                    defaultValue={selectusers}\n                    isMulti\n                    options={gettedoption}\n                    onChange={setselectusers}\n                  />{\n                    console.log(\"from the html\", errorMessage)\n                  }\n                  {alreadypresent?.length > 0 &&\n\n                    <>\n                      <p style={{ color: \"red\" }}>{JSON.stringify(alreadypresent + \" is already added , Please remove it first to add new members\")}</p>\n                    </>\n                  }\n                  {/* {!alreadypresent?.length<0&&\n                   \n                   <>\n                  <p style={{color:\"green\"}}>Added</p>\n                   </>\n                  } */}\n\n                </div>}\n\n\n\n\n              </div>\n\n\n\n\n              <h3>Documents</h3>\n\n              <div className=\"col-xxl-12 col-xl-12 col-lg-12 col-md-6 col-sm-6 my-2 d-inline-flex  \">\n                <div className=\"col-6  my-2 px-3\">\n                  <label htmlFor=\"\">Document Title:</label>\n\n                  <br />\n                  <span className=\"inputField col-12 mb-3\">\n                    {data.Documenttitle}\n                  </span>\n                  {/* <br /> */}\n                  {/* <span className=\"text-primary\">Click to Download</span> */}\n\n                </div>\n\n                <div className=\"col-6  my-2 px-3\">\n                  <label htmlFor=\"\">Document Name:</label>\n                  <span className=\"text-primary m-2\">Click on file to view</span>\n\n                  {\n                    doc.map((e) => {\n                      // console.log(e, \"e is here\")\n\n                      // Documentname,Documenttitle\n                      return (\n\n                        <>\n\n                          <br />\n\n                          <a href={`${process.env.REACT_APP_APIURL}/${e.Documentname}`} target=\"_blank\" className=\"inputField col-12 mb-3\" rel=\"noreferrer\"> {e.Documenttitle}</a>\n\n                        </>\n                      )\n                    })\n                  }\n\n                </div>\n\n\n\n\n\n              </div>\n              {/* <button onClick={() => handleClickD(`${process.env.REACT_APP_APIURL}/project/${projectid}`,'sample')}>\n        Download the File</button> */}\n\n\n\n\n\n            </div>\n            <h5 style={{ color: \"green\", textAlign: \"center\" }}> {updated ? \"Updated Successfully\" : \"\"}</h5>\n            {isUpdate ? <button type=\"submit\" onClick={() => {\n              inquiryData()\n            }} className=\"mx-auto btn btn-outline-dark w-25\">\n              Update\n            </button> :\n              <button type=\"submit\" disabled onClick={inquiryData} className=\"mx-auto btn btn-outline-dark w-25\">\n                Update\n              </button>\n            }\n            {/* <Link to={\"/cmodule\"} className=\"mx-auto bg-dark text-white btn btn-outline-dark w-25\">\n            Modules\n          </Link> */}\n            {/* <Link to={\"/milestone/\"+`${projectid}`} className=\"mx-auto bg-dark text-white btn btn-outline-dark w-25\">\n            Create Milestone\n          </Link> */}\n            {/* <Link to={\"/mlist/\"+`${projectid}`} className=\"mx-auto bg-dark text-white btn btn-outline-dark w-25\">\n            Modules\n          </Link> */}\n            <Link to={\"/mlist/\" + `${projectid}`} className=\"mx-auto bg-dark text-white btn btn-outline-dark w-25\">\n              MileStones / Modules\n            </Link>\n\n          </div>\n        </div>\n      </div>\n    </>\n  )\n\n\n}\nexport default P_edit","/var/www/html/github/inhouse/src/pages/create_lead/c_lead.jsx",["587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621","622","623","624","625","626"],[],"// import React from \"react\";\n// import Sidebar from \"../sidebar/sidebar\";\n// import axios from \"axios\";\n// import { useEffect,useState } from \"react\";\n// import { useNavigate, useParams } from \"react-router-dom\";\n// import { useForm } from 'react-hook-form';\n// import { sourcelist,technologylist } from \"../../constfiles\";\n\n// const Lead =()=>{\n\n//   const navigate=  useNavigate()\n//   const[modal,setModal] = useState(false)\n//   const[message, setMessage] = useState(false)\n//   const [Sourcelistdropdown,setSourcelistdropdown] = useState(sourcelist);\n//   const [technologydropdown] = useState(technologylist);\n//     const { inquiryid } = useParams();\n//     const [selectedFile, setSelectedFile] = useState();\n//     const [registrationform, Setregistrationform] = useState({\n//       iiInquiryId: localStorage.getItem(\"id\"),\n//       iAccountHolderId: localStorage.getItem(\"userid\"),\n  \n//       // vTitle: \"\",\n//       // vTechnology: \"\",\n//       // vSourceOfInquiry: \"\",\n//       // iAccountHolderId: 0,\n//       // eTypeofInquiry: \"\",\n//       // tDescription: \"\",\n//       // vInquiryFromClientName: \"\",\n//       // vCountryName: \"\",\n//       // vClientEmail: \"\",\n//       // vClientSkpe: \"\",\n//       // vClientMobile: \"\",\n//       // fBudget: 0,\n//       // mediafiles: \"\",\n//     });\n//     const singleapi = async () => {\n//       // alert(Leadid)\n//       const result = await fetch(\n//         `${process.env.REACT_APP_APIURL}/inquiry/${inquiryid}`,\n//         {\n//           method: \"get\",\n//           headers: {\n//             \"Content-Type\": \"application/json\",\n//             Authorization: `Bearer ${localStorage.getItem(\"Token\")}`,\n//           },\n//         }\n//       );\n  \n//       // localStorage.setItem(\"lead id\", Leadid)\n//       const apiresponse = await result.json();\n//       const check = apiresponse.inquirylist;\n//       Setregistrationform({ ...registrationform, ...check[0] });\n//       // setDoc(check)\n  \n//     };\n//     useEffect(() => {\n//       singleapi(inquiryid);\n//     }, []);\n//     useEffect(() => {\n//     }, [registrationform]);\n\n\n\n  \n//     const handelsubmit = (e) => {\n  \n//       // alert(JSON.stringify(selectedFile));\n//       // console.log(selectedFile);\n//       // alert(\"in handle submit\");\n//       const formData = new FormData();\n//       if (selectedFile != undefined) {\n        \n//         for (let i = 0; i < selectedFile.length; i++) {\n//           formData.append(\"requiredprojectfiles\", selectedFile[i]);\n//         }}\n//         formData.append(\"iiInquiryId\", inquiryid);\n//         formData.append(\"eTypeOfProject\", registrationform.eTypeOfProject);\n//         formData.append(\"vTitleProject\", registrationform.vTitleProject);\n//         formData.append(\"fCostOfProject\", registrationform.fCostOfProject);\n//         formData.append(\"vTechnology\", registrationform.vTechnology);\n//         formData.append(\"vHireResource\", registrationform.vHireResource);\n//         // formData.append(\"iVendorId\", registrationform.iVendorId);\n//         formData.append(\"dBillingCycleDate\", registrationform.dBillingCycleDate);\n//         formData.append(\"fHireBillingAmount\", registrationform.fHireBillingAmount);\n//         formData.append(\"dconvertedDate\", registrationform.dconvertedDate);\n//         formData.append(\"fProjectCost\", registrationform.fProjectCost);\n//         formData.append(\"iAccountHolderId\", registrationform.iAccountHolderId);\n//         formData.append(\"tNotes\", registrationform.tNotes);\n//         formData.append(\"vHireDuration\", registrationform.vHireDuration);\n//         formData.append(\"vHireMonthlyBudget\", registrationform.vHireMonthlyBudget);\n//         formData.append(\"vExperienceRequired\", registrationform.vExperienceRequired);\n//         formData.append(\"fAtCostResourceToVendor\", registrationform.fAtCostResourceToVendor);\n//         formData.append(\"eProjectStatus\", registrationform.eProjectStatus);\n//         formData.append(\"eStatus\", registrationform.eStatus);\n  \n//         const token = localStorage.getItem(\"Token\");\n  \n//         // for (var value of formData.values()) {\n//         //   console.log(value);\n//         // }\n  \n//         const imageupdateapicall = async () => {\n//           // alert(\"called image api\");\n//           let callingurl = `${process.env.REACT_APP_APIURL}/lead`;\n//           // console.log(callingurl);\n//           const returneddetail = await axios({\n//             method: \"post\",\n//             url: callingurl,\n//             data: formData,\n//             headers: {\n//               Authorization: `Bearer ${localStorage.getItem(\"Token\")}`,\n//               \"Content-Type\": \"multipart/form-data\",\n//             },\n//           });\n//           // console.log(returneddetail);\n//           setSelectedFile(undefined);\n//           const respo = returneddetail.data;\n//           const check = respo?.Message;\n//           // alert(\"check\", JSON.stringify(check));\n\n//           if(returneddetail.status == 200)\n//           {\n//             setModal(true)\n//             setMessage(\"Converted into Lead\")\n//           }\n//           else{\n//             setModal(true)\n//             setMessage(\"Something Went Wrong\")\n//           }\n//         };\n//         try {\n//           imageupdateapicall();\n//         } catch (e) {\n//           // alert(e)\n//         }\n//         setSelectedFile(null);\n      \n//     };\n//     // useEffect(() => {\n//     //   console.log(selectedFile);\n//     // }, [selectedFile]);\n//     const uploadimage = (e) => {\n//       // if (e.target.files[0].size <= 1000000 * 2) {\n  \n//       setSelectedFile(e.target.files);\n//       // console.log(e.target.files);\n//     };\n  \n//     const hadlechange = (e) => {\n//       let objname = e.target?.name;\n//       let value = e.target?.value;\n//       Setregistrationform({ ...registrationform, [objname]: value });\n//     };\n  \n//     // useEffect(() => {}, [registrationform]);\n\n//     const handleBack=()=>{\n//       navigate(\"/i_edit/\" + `${inquiryid}`)\n//     }\n\n//     const {\n//       register,\n//       handleSubmit,\n//       formState: { errors },\n//     } = useForm();\n\n\n//     const handleClose=()=>{\n//       setModal(false)\n//       navigate(\"/lead_list\")\n//     }\n\n//     const handleToInquiries=()=>{\n//       setModal(false)\n//       navigate(\"/inquiry_list\")\n//     }\n\n//     return(\n//         <>\n\n// <Sidebar IsSales={true}/> \n\n// <div className='set'>\n\n//       <div className=\"container my-3 body p-5\">\n        \n//         <button type=\"submit\"  onClick={handleBack} className=\"mx-auto bg-dark text-white btn btn-outline-dark w-25\">\n//             Back to Inquiry\n//           </button>\n        \n      \n//         <div className=\"row \">\n\n\n       \n\n\n//         <div className=\"col-12 text-center mb-2 \">\n//             <h1 className=\"title\">Lead</h1>\n//           </div>\n\n          \n\n//           <div>\n//             <div className=\"col-xxl-12 col-xl-12 col-lg-6 col-md-12 col-sm-12 my-2 d-inline-flex \">\n//               <div className=\"col-6  my-2 px-3\">\n//                 <label htmlFor=\"\" className=\"d-block\">\n//                   Type of Project\n//                 </label>\n               \n\n//                 {/* <select className=\"formcontrol d-block dropdownWidth mb-3\" name=\"eTypeofInquiry\" value={inquiryform.eTypeofInquiry} onChange={handleChange}>\n//                         <option>Select</option>\n//                         <option value=\"Hire\">Hire</option>\n//                         <option value=\"Project Basis\">Project Basis</option>\n//                         <option value=\"Fix Cost - Less than 2 Weeks\">Fix Cost - Less than 2 Weeks</option>\n//                     </select> */}\n\n\n\n//                     <select\n//                     {...register('eTypeOfProject', { required: true })}\n//                     className=\"form-control rounded-pill mt-2\"\n//               type=\"text\"\n//               name=\"eTypeOfProject\"\n//               placeholder=\"Type of Project\"\n//               value={registrationform.eTypeofInquiry?registrationform.eTypeofInquiry:registrationform.eTypeOfProject}\n//               onChange={hadlechange}\n//             >\n//               <option value=\"\">Select</option>\n//               <option value=\"Hire\">Hire</option>\n//               <option value=\"Project Basis\">Project Basis</option>\n//               <option value=\"Fix Cost - Less than 2 weeks\">\n//                 Fix Cost - Less than 2 weeks\n//               </option>\n//             </select>\n//             {registrationform.eTypeOfProject==\"\"||null?errors.eTypeOfProject && <p className=\"error\">Select anyone</p>:\"\"}\n//               </div>\n\n//               <div className=\"col-6  my-2 px-3\">\n//                 <label htmlFor=\"\">Title</label>\n//                 {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vTitle\" value={inquiryform.vTitle} onChange={handleChange} placeholder=\"Inquiry Title\" /> */}\n//                 <input\n//                 {...register('vTitleProject', { required: true })}\n//                 className=\"form-control rounded-pill mt-2\"\n//               type=\"text\"\n//               name=\"vTitleProject\"\n//               placeholder=\"Project Title\"\n//               value={registrationform.vTitle?registrationform.vTitle:registrationform.vTitleProject}\n//               onChange={hadlechange}\n//             />\n//             {registrationform.vTitleProject==\"\"||null?errors.vTitleProject && <p className=\"error\">Title is required</p>:\"\"}\n//               </div>\n//             </div>\n//             <div className=\"col-12 my-2 d-inline-flex \">\n//               <div className=\"col-6  my-2 px-3\">\n//                 <label htmlFor=\"\" className=\"d-block\">\n//                   Technology\n//                 </label>\n//                 {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vTechnology\" value={inquiryform.vTechnology} onChange={handleChange} placeholder=\"Inquiry Technology\" /> */}\n//                 {/* <input\n//                 {...register('vTechnology', { required: true })}\n//               type=\"text\"\n//               className=\"form-control rounded-pill mt-2\"\n//               name=\"vTechnology\"\n//               placeholder=\"Technology\"\n//               value={registrationform.vTechnology}\n//               onChange={hadlechange}\n//             /> */}\n//              <select name=\"vTechnology\" id=\"\"\n//                 {...register('vTechnology', { required: true })}\n//                 className=\"form-control rounded-pill mt-2\" \n//                 onChange={hadlechange}\n//                 value={registrationform.vTechnology}\n//                 >\n//                   <option value=\"\">select</option>\n//                   {technologydropdown.map((e)=>{\n//                     return(\n//                       <option value={e}>{e}</option>\n//                     )\n//                   })}\n//                 </select>\n//             {registrationform.vTechnology==\"\"||null?errors.vTechnology && <p className=\"error\">Technology is required</p>:\"\"}\n//               </div>\n\n//               <div className=\"col-6  my-2 px-3\">\n//                 <label htmlFor=\"\">Hire Resource</label>\n//                 {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vSourceOfInquiry\" value={inquiryform.vSourceOfInquiry} onChange={handleChange} placeholder=\"Source of Inquiry\" /> */}\n//                 <input\n//                 {...register('vHireResource', { required: true })}\n//               type=\"text\"\n//               className=\"form-control rounded-pill mt-2\"\n//               name=\"vHireResource\"\n//               placeholder=\"Hire Resource\"\n//               value={registrationform.vHireResource}\n//               onChange={hadlechange}\n//             />\n//             {errors.vHireResource && <p className=\"error\">Hire Resource is required</p>}\n//               </div>\n//             </div>\n//             <div className=\"col-xxl-12 col-xl-12 col-lg-12 col-md-6 col-sm-6 my-2 d-inline-flex  \">\n//               <div className=\"col-6  my-2 px-3\">\n//                 <label htmlFor=\"\">Billing Date</label>\n//                 {/* <textarea className=\"inputField col-12 mb-3\" name=\"tDescription\" value={inquiryform.tDescription} onChange={handleChange} placeholder=\"Description\"></textarea> */}\n//                 <input\n//                 {...register('dBillingCycleDate', { required: true })}\n//               type=\"date\"\n//               className=\"form-control rounded-pill mt-2\"\n//               name=\"dBillingCycleDate\"\n//               placeholder=\"Billing Date\"\n//               value={registrationform.dBillingCycleDate}\n//               onChange={hadlechange}\n//             />\n//             {errors.dBillingCycleDate && <p className=\"error\">Billing Date is required</p>}\n//               </div>\n\n//               <div className=\"col-6  my-2 px-3\">\n//                 <label htmlFor=\"\">Billing Amount</label>\n//                 {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vHireDuration\" value={inquiryform.vHireDuration} onChange={handleChange} placeholder=\"Hire Duration\" /> */}\n//                 <input\n//                 {...register('fHireBillingAmount', { required: true })}\n//               type=\"number\"\n//               className=\"form-control rounded-pill mt-2\"\n//               name=\"fHireBillingAmount\"\n//               placeholder=\"Billing Amount\"\n//               value={registrationform.fHireBillingAmount}\n//               onChange={hadlechange}\n//             />\n//             {errors.fHireBillingAmount && <p className=\"error\">Billing Amount is required</p>}\n//               </div>\n//             </div>\n//             <div className=\"col-xxl-12 col-xl-12 col-lg-12 col-md-6 col-sm-6 my-2 d-inline-flex  \">\n//               <div className=\"col-6  my-2 px-3\">\n//                 <label htmlFor=\"\">Converted Date</label>\n//                 {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vHireMonthlyBudget\" value={inquiryform.vHireMonthlyBudget} onChange={handleChange} placeholder=\"Hire Monthly Budget\" /> */}\n//                 <input\n//                 {...register('dconvertedDate', { required: true })}\n//               type=\"date\"\n//               className=\"form-control rounded-pill mt-2\"\n//               name=\"dconvertedDate\"\n//               placeholder=\"Converted Date\"\n//               value={registrationform.dconvertedDate}\n//               onChange={hadlechange}\n//             />\n//              {errors.dconvertedDate && <p className=\"error\">Converted Date is required </p>}\n//               </div>\n\n//               <div className=\"col-6  my-2 px-3\">\n//                 <label htmlFor=\"\">Project Cost</label>\n//                 {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vExperienceRequired\" value={inquiryform.vExperienceRequired} onChange={handleChange} placeholder=\"Experience Required\" /> */}\n//                 <input\n//                 {...register('fProjectCost', { required: true })}\n//               type=\"number\"\n//               className=\"form-control rounded-pill mt-2\"\n//               name=\"fProjectCost\"\n//               placeholder=\"Project Cost\"\n//               value={registrationform.fProjectCost}\n//               onChange={hadlechange}\n//             />\n//             {errors.fProjectCost && <p className=\"error\">Project cost is required</p>}\n//               </div>\n//             </div>\n\n\n\n//             <div className=\"col-xxl-12 col-xl-12 col-lg-12 col-md-6 col-sm-6 my-2 d-inline-flex  \">\n//             <div className=\"col-6  my-2 px-3\">\n//                 <label htmlFor=\"\">Cost of Project</label>\n//                 {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vExperienceRequired\" value={inquiryform.vExperienceRequired} onChange={handleChange} placeholder=\"Experience Required\" /> */}\n//                 <input\n//                 {...register('fCostOfProject', { required: true })}\n//               type=\"number\"\n//               className=\"form-control rounded-pill mt-2\"\n//               name=\"fCostOfProject\"\n//               placeholder=\"Cost of Project\"\n//               value={registrationform.fCostOfProject}\n//               onChange={hadlechange}\n//             />\n//             {errors.fCostOfProject && <p className=\"error\">Cost Of Project is required</p>}\n//               </div>\n\n//               <div className=\"col-6  my-2 px-3\">\n//                 <label htmlFor=\"\">Notes</label>\n//                 {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vExperienceRequired\" value={inquiryform.vExperienceRequired} onChange={handleChange} placeholder=\"Experience Required\" /> */}\n//                 <input\n//                 {...register('tNotes', { required: true })}\n//               type=\"text\"\n//               className=\"form-control rounded-pill mt-2\"\n//               name=\"tNotes\"\n//               placeholder=\"Notes\"\n//               value={registrationform.tNotes}\n//               onChange={hadlechange}\n//             />\n//             {errors.tNotes && <p className=\"error\">Notes is required</p>}\n//               </div>\n//             </div>\n\n\n\n//             <div className=\"col-xxl-12 col-xl-12 col-lg-12 col-md-6 col-sm-6 my-2 d-inline-flex  \">\n           \n//             <div className=\"col-6  my-2 px-3\">\n//             <label htmlFor=\"\">Hire Duration</label>\n//                 <input\n//                 {...register('vHireDuration', { required: true })}\n//               type=\"text\"\n//               className=\"form-control rounded-pill mt-2\"\n//               name=\"vHireDuration\"\n//               placeholder=\"Hire Duration\"\n//               value={registrationform.vHireDuration}\n//               onChange={hadlechange}\n//             />\n//             {registrationform.vHireDuration==\"\"||null?errors.vHireDuration && <p className=\"error\">Hire Duration is required</p>:\"\"}\n               \n//               </div>\n           \n//             {/* <div className=\"col-6  my-2 px-3\">\n//                 <label htmlFor=\"\">Vendor id</label>\n//                 <input\n//                  {...register('iVendorId', { required: true })}\n//               type=\"number\"\n//               className=\"form-control rounded-pill mt-2\"\n//               name=\"iVendorId\"\n//               placeholder=\"Vendor id\"\n//               value={registrationform.iVendorId}\n//               onChange={hadlechange}\n//             />\n//             {errors.iVendorId && <p className=\"error\">VendorId is required</p>}\n//               </div> */}\n//               <div className=\"col-6  my-2 px-3\">\n//                 <label htmlFor=\"\">Monthly Budget</label>\n//                 {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vExperienceRequired\" value={inquiryform.vExperienceRequired} onChange={handleChange} placeholder=\"Experience Required\" /> */}\n//                 <input\n//                  {...register('vHireMonthlyBudget', { required: true })}\n//               type=\"number\"\n//               className=\"form-control rounded-pill mt-2\"\n//               name=\"vHireMonthlyBudget\"\n//               placeholder=\"Monthly budget\"\n//               value={registrationform.vHireMonthlyBudget}\n//               onChange={hadlechange}\n//             />\n//              {registrationform.vHireMonthlyBudget==\"\"||null?errors.vHireMonthlyBudget && <p className=\"error\">Monthly budget is required</p>:\"\"}\n//               </div>\n\n             \n//             </div>\n\n\n//             <div className=\"col-xxl-12 col-xl-12 col-lg-12 col-md-6 col-sm-6 my-2 d-inline-flex  \">\n//             <div className=\"col-6  my-2 px-3\">\n//                 <label htmlFor=\"\">Experienced Required</label>\n//                 {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vExperienceRequired\" value={inquiryform.vExperienceRequired} onChange={handleChange} placeholder=\"Experience Required\" /> */}\n//                 <input\n//                  {...register('vExperienceRequired', { required: true })}\n//               type=\"text\"\n//               className=\"form-control rounded-pill mt-2\"\n//               name=\"vExperienceRequired\"\n//               placeholder=\"Experience Required\"\n//               value={registrationform.vExperienceRequired}\n//               onChange={hadlechange}\n//             />\n//             {registrationform.vExperienceRequired==\"\"||null?errors.vExperienceRequired && <p className=\"error\">This Field is required</p>:\"\"}\n//               </div>\n//               <div className=\"col-6  my-2 px-3\">\n//                 <label htmlFor=\"\">Cost of Resource</label>\n//                 {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vExperienceRequired\" value={inquiryform.vExperienceRequired} onChange={handleChange} placeholder=\"Experience Required\" /> */}\n//                 <input\n//                 {...register('fAtCostResourceToVendor', { required: true })}\n//               type=\"number\"\n//               className=\"form-control rounded-pill mt-2\"\n//               name=\"fAtCostResourceToVendor\"\n//               placeholder=\"Cost of Resource\"\n//               value={registrationform.fAtCostResourceToVendor}\n//               onChange={hadlechange}\n//             />\n//             {errors.fAtCostResourceToVendor && <p className=\"error\">Cost Of Resource is required</p>}\n//               </div>\n\n             \n//             </div>\n\n\n//             <div className=\"col-xxl-12 col-xl-12 col-lg-12 col-md-6 col-sm-6 my-2 d-inline-flex  \">\n           \n//               <div className=\"col-6  my-2 px-3\">\n//                 <label htmlFor=\"\">Status</label>\n//                 {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vExperienceRequired\" value={inquiryform.vExperienceRequired} onChange={handleChange} placeholder=\"Experience Required\" /> */}\n//                 <select\n//                  {...register('eStatus', { required: true })}\n//                     className=\"form-control rounded-pill mt-2\"\n//               type=\"text\"\n//               name=\"eStatus\"\n//               placeholder=\"Status\"\n//               value={registrationform.eStatus}\n//               onChange={hadlechange}\n//             >\n//               <option value=\"\">Select</option>\n//               <option value=\"Converted\">Converted</option>\n//               <option value=\"InProgress\">InProgress</option>\n//               <option value=\"Cancelled\">Cancelled</option>\n//               <option value=\"Rejected\">Rejected</option>\n//               <option value=\"OnHold\">OnHold</option>\n//               <option value=\"No Response From Client\">No Response From Client</option>\n              \n              \n//             </select>\n//             {registrationform.eStatus==\"\"||null?errors.eStatus && <p className=\"error\">Status is required</p>:\"\"}\n//               </div>\n\n             \n//             </div>\n\n\n\n//             <div className=\"col-xxl-12 col-xl-12 col-lg-12 col-md-6 col-sm-6 my-2 d-inline-flex  \">\n//             <div className=\"col-6  my-2 px-3\">\n//             <label htmlFor=\"\">Documents</label>\n//                 {/* <input type=\"file\" className=\" col-12 mb-3\" /> */}\n//                 {/* <input type=\"file\" name=\"mediafiles\" value={inquiryform.mediafiles} onChange={handleimage} className=\" col-12 mb-3\" multiple/> */}\n//                 <input\n//               type=\"file\"\n//               className=\"form-control rounded-pill mt-2\"\n//               name=\"requiredprojectfiles\"\n//               id=\"upload\"\n//               accept=\"image/*\"\n//               onChange={uploadimage}\n//               multiple\n//             />\n              \n//               </div>\n//               <div className=\"col-6  my-2 \">\n//               <div className=\"col-6  my-2  px-3\">\n              \n//               </div>\n//             </div>\n\n             \n//             </div>\n\n\n           \n\n\n\n\n\n          \n\n          \n         \n//           </div>\n\n//           <button type=\"submit\"  onClick={handleSubmit(handelsubmit)} className=\"mx-auto btn btn-outline-dark w-25\">\n//             Submit\n//           </button>\n\n//             </div>\n//             {modal?\n//         <>\n  \n \n//   <div className='modal_'>\n//         <div className='modalBody'>\n          \n//         {message}\n\n//           <div className=\"modal-button\">\n//             {/* <button className=\"modal-btn\">Ok</button> */}\n//             <button className=\"modal-btn\" onClick={handleToInquiries}>Go to Inquiries</button>\n//             <button className=\"modal-btn\" onClick={handleClose}>Check it</button>\n//           </div>\n//         </div>\n    \n//     </div>\n//         </>\n\n//         :\"\"}\n//             </div>\n//             </div>\n//         </>\n//     )\n// }\n\n// export default Lead\n\nimport React from \"react\";\nimport Sidebar from \"../sidebar/sidebar\";\nimport axios from \"axios\";\nimport { useEffect,useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useForm } from 'react-hook-form';\nimport { sourcelist,technologylist } from \"../../constfiles\";\n\nconst Lead =()=>{\n\n  const navigate=  useNavigate()\n  const [error, setError] = useState({})\n  const[modal,setModal] = useState(false)\n  const[message, setMessage] = useState(false)\n  const [Sourcelistdropdown,setSourcelistdropdown] = useState(sourcelist);\n  const [technologydropdown] = useState(technologylist);\n    const { inquiryid } = useParams();\n    const [selectedFile, setSelectedFile] = useState();\n    const [registrationform, Setregistrationform] = useState({\n      iiInquiryId: localStorage.getItem(\"id\"),\n      iAccountHolderId: localStorage.getItem(\"userid\"),\n  \n      // vTitle: \"\",\n      // vTechnology: \"\",\n      // vSourceOfInquiry: \"\",\n      // iAccountHolderId: 0,\n      // eTypeofInquiry: \"\",\n      // tDescription: \"\",\n      // vInquiryFromClientName: \"\",\n      // vCountryName: \"\",\n      // vClientEmail: \"\",\n      // vClientSkpe: \"\",\n      // vClientMobile: \"\",\n      // fBudget: 0,\n      // mediafiles: \"\",\n    });\n\n\n    const isvalid = (verificationdata) => {\n      let errors = {};\n  \n      // if (\n      //   verificationdata.CompanyName == undefined ||\n      //   verificationdata.CompanyName == \"\"\n      // ) {\n      //   errors.CompanyName = \"Company name is Required\";\n      // } else if (\n      //   !/^([a-zA-Z]+\\s)*[a-zA-Z]+$/.test(verificationdata.CompanyName)\n      // ) {\n      //   errors.CompanyName = \"Company name is not valid \";\n      // }\n      if (\n        verificationdata.eTypeOfProject == undefined ||\n        verificationdata.eTypeOfProject == \"\"\n      ) {\n        errors.eTypeOfProject = \"Field should not be empty\";\n      }\n      if (\n        verificationdata.vTitleProject == undefined ||\n        verificationdata.vTitleProject == \"\"\n      ) {\n        errors.vTitleProject = \"Field should not be empty\";\n      }\n      if (\n        verificationdata.fCostOfProject == undefined ||\n        verificationdata.fCostOfProject == \"\"\n      ) {\n        errors.fCostOfProject = \"Field should not be empty\";\n      }\n      if (\n        verificationdata.vTechnology == undefined ||\n        verificationdata.vTechnology == \"\"\n      ) {\n        errors.vTechnology = \"Field should not be empty\";\n      }\n      if (\n        verificationdata.vHireResource == undefined ||\n        verificationdata.vHireResource == \"\"\n      ) {\n        errors.vHireResource = \"Field should not be empty\";\n      }\n      // if (\n      //   verificationdata.tNotes == undefined ||\n      //   verificationdata.tNotes == \"\"\n      // ) {\n      //   errors.tNotes = \"Field should not be empty\";\n      // }\n      if (\n        verificationdata.vExperienceRequired == undefined ||\n        verificationdata.vExperienceRequired == \"\"\n      ) {\n        errors.vExperienceRequired = \"Field should not be empty\";\n      }\n      if (\n        verificationdata.eStatus == undefined ||\n        verificationdata.eStatus == \"\"\n      ) {\n        errors.eStatus = \"Field should not be empty\";\n      }\n      // if (\n      //   verificationdata.iVendorId == undefined ||\n      //   verificationdata.iVendorId == \"\"\n      // ) {\n      //   errors.iVendorId = \"Field should not be empty\";\n      // }\n      if (\n        verificationdata.dBillingCycleDate == undefined ||\n        verificationdata.dBillingCycleDate == \"\"\n      ) {\n        errors.dBillingCycleDate = \"Field should not be empty\";\n      }\n      if (\n        verificationdata.fHireBillingAmount == undefined ||\n        verificationdata.fHireBillingAmount == \"\"\n      ) {\n        errors.fHireBillingAmount = \"Field should not be empty\";\n      }\n      if (\n        verificationdata.dconvertedDate == undefined ||\n        verificationdata.dconvertedDate == \"\"\n      ) {\n        errors.dconvertedDate = \"Field should not be empty\";\n      }\n      if (\n        verificationdata.vHireDuration == undefined ||\n        verificationdata.vHireDuration == \"\"\n      ) {\n        errors.vHireDuration = \"Field should not be empty\";\n      }\n      if (\n        verificationdata.fProjectCost == undefined ||\n        verificationdata.fProjectCost == \"\"\n      ) {\n        errors.fProjectCost = \"Field should not be empty\";\n      }\n      if (\n        verificationdata.fAtCostResourceToVendor == undefined ||\n        verificationdata.fAtCostResourceToVendor == \"\"\n      ) {\n        errors.fAtCostResourceToVendor = \"Field should not be empty\";\n      }\n      if (\n        verificationdata.vHireMonthlyBudget == undefined ||\n        verificationdata.vHireMonthlyBudget == \"\"\n      ) {\n        errors.vHireMonthlyBudget = \"Field should not be empty\";\n      }\n  \n      return errors;\n    };\n\n\n    useEffect(() => {\n      if (Object.keys(registrationform).length != 0) {\n        setError(isvalid(registrationform));\n      } else {\n        return;\n      }\n    }, [registrationform]);\n\n\n    const singleapi = async () => {\n      // alert(Leadid)\n      const result = await fetch(\n        `${process.env.REACT_APP_APIURL}/inquiry/${inquiryid}`,\n        {\n          method: \"get\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"Token\")}`,\n          },\n        }\n      );\n  \n      // localStorage.setItem(\"lead id\", Leadid)\n      const apiresponse = await result.json();\n      const check = apiresponse.inquirylist;\n      try{\n        const updatestateobj={\n          vTitleProject:check[0].vTitle,\n          vTechnology:check[0].vTechnology,\n          vHireDuration:check[0].vHireDuration,\n          vHireMonthlyBudget:check[0].vHireMonthlyBudget,\n          vExperienceRequired:check[0].vExperienceRequired,\n          eStatus:check[0].eStatus,\n          eTypeOfProject:check[0].eTypeofInquiry\n        }\n        Setregistrationform({ ...registrationform, ...check[0],...updatestateobj });\n      }\n      catch(e){\n        console.log(e)\n      }\n      // Setregistrationform({ ...registrationform, ...check[0] });\n      // setDoc(check)\n  \n    };\n    useEffect(() => {\n      singleapi(inquiryid);\n    }, []);\n    useEffect(() => {\n    }, [registrationform]);\n\n\n\n  \n    const handelsubmit = (e) => {\n  \n      // alert(JSON.stringify(selectedFile));\n      // console.log(selectedFile);\n      // alert(\"in handle submit\");\n      const formData = new FormData();\n      if (selectedFile != undefined) {\n        \n        for (let i = 0; i < selectedFile.length; i++) {\n          formData.append(\"requiredprojectfiles\", selectedFile[i]);\n        }}\n        formData.append(\"iiInquiryId\", inquiryid);\n        formData.append(\"eTypeOfProject\", registrationform.eTypeOfProject);\n        formData.append(\"vTitleProject\", registrationform.vTitleProject);\n        formData.append(\"fCostOfProject\", registrationform.fCostOfProject);\n        formData.append(\"vTechnology\", registrationform.vTechnology);\n        formData.append(\"vHireResource\", registrationform.vHireResource);\n        // formData.append(\"iVendorId\", registrationform.iVendorId);\n        formData.append(\"dBillingCycleDate\", registrationform.dBillingCycleDate);\n        formData.append(\"fHireBillingAmount\", registrationform.fHireBillingAmount);\n        formData.append(\"dconvertedDate\", registrationform.dconvertedDate);\n        formData.append(\"fProjectCost\", registrationform.fProjectCost);\n        formData.append(\"iAccountHolderId\", registrationform.iAccountHolderId);\n        formData.append(\"tNotes\", registrationform.tNotes);\n        formData.append(\"vHireDuration\", registrationform.vHireDuration);\n        formData.append(\"vHireMonthlyBudget\", registrationform.vHireMonthlyBudget);\n        formData.append(\"vExperienceRequired\", registrationform.vExperienceRequired);\n        formData.append(\"fAtCostResourceToVendor\", registrationform.fAtCostResourceToVendor);\n        formData.append(\"eProjectStatus\", registrationform.eProjectStatus);\n        formData.append(\"eStatus\", registrationform.eStatus);\n  \n        const token = localStorage.getItem(\"Token\");\n  \n        // for (var value of formData.values()) {\n        //   console.log(value);\n        // }\n  \n        const imageupdateapicall = async () => {\n          // alert(\"called image api\");\n          let callingurl = `${process.env.REACT_APP_APIURL}/lead`;\n          // console.log(callingurl);\n          const returneddetail = await axios({\n            method: \"post\",\n            url: callingurl,\n            data: formData,\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem(\"Token\")}`,\n              \"Content-Type\": \"multipart/form-data\",\n            },\n          });\n          // console.log(returneddetail);\n          setSelectedFile(undefined);\n          const respo = returneddetail.data;\n          const check = respo?.Message;\n          // alert(\"check\", JSON.stringify(check));\n\n          if(returneddetail.status == 200)\n          {\n            setModal(true)\n            setMessage(\"Converted into Lead\")\n          }\n          else{\n            setModal(true)\n            setMessage(\"Something Went Wrong\")\n          }\n        };\n        try {\n          if (Object.keys(error).length == 0) {\n          imageupdateapicall();\n          }\n        } catch (e) {\n          // alert(e)\n        }\n        setSelectedFile(null);\n      \n    };\n    // useEffect(() => {\n    //   console.log(selectedFile);\n    // }, [selectedFile]);\n    const uploadimage = (e) => {\n      // if (e.target.files[0].size <= 1000000 * 2) {\n  \n      setSelectedFile(e.target.files);\n      // console.log(e.target.files);\n    };\n  \n    const hadlechange = (e) => {\n      let objname = e.target?.name;\n      let value = e.target?.value;\n      Setregistrationform({ ...registrationform, [objname]: value });\n    };\n  \n    // useEffect(() => {}, [registrationform]);\n\n    const handleBack=()=>{\n      navigate(\"/i_edit/\" + `${inquiryid}`)\n    }\n\n    const {\n      register,\n      handleSubmit,\n      formState: { errors },\n    } = useForm();\n\n\n    const handleClose=()=>{\n      setModal(false)\n      navigate(\"/lead_list\")\n    }\n\n    const handleToInquiries=()=>{\n      setModal(false)\n      navigate(\"/inquiry_list\")\n    }\n\n    return(\n        <>\n\n<Sidebar IsSales={true}/> \n\n<div className='set'>\n\n      <div className=\"container my-3 body p-5\">\n        \n        <button type=\"submit\"  onClick={handleBack} className=\"mx-auto bg-dark text-white btn btn-outline-dark w-25\">\n            Back to Inquiry\n          </button>\n        \n      \n        <div className=\"row \">\n\n\n       \n\n\n        <div className=\"col-12 text-center mb-2 \">\n            <h1 className=\"title\">Lead</h1>\n          </div>\n\n          \n\n          <div>\n            <div className=\"col-xxl-12 col-xl-12 col-lg-6 col-md-12 col-sm-12 my-2 d-inline-flex \">\n              <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\" className=\"d-block\">\n                  Type of Project\n                </label>\n               \n\n                {/* <select className=\"formcontrol d-block dropdownWidth mb-3\" name=\"eTypeofInquiry\" value={inquiryform.eTypeofInquiry} onChange={handleChange}>\n                        <option>Select</option>\n                        <option value=\"Hire\">Hire</option>\n                        <option value=\"Project Basis\">Project Basis</option>\n                        <option value=\"Fix Cost - Less than 2 Weeks\">Fix Cost - Less than 2 Weeks</option>\n                    </select> */}\n\n\n\n                    <select\n                    // {...register('eTypeOfProject', { required: true })}\n                    className=\"form-control rounded-pill mt-2\"\n              type=\"text\"\n              name=\"eTypeOfProject\"\n              placeholder=\"Type of Project\"\n              value={registrationform.eTypeOfProject}              \n              onChange={hadlechange}\n            >\n              <option value=\"\">Select</option>\n              <option value=\"Hire\">Hire</option>\n              <option value=\"Project Basis\">Project Basis</option>\n              <option value=\"Fix Cost - Less than 2 weeks\">\n                Fix Cost - Less than 2 weeks\n              </option>\n            </select>\n            {error.eTypeOfProject ? <p style={{ color: \"red\" }}>{error.eTypeOfProject}</p> : \"\"}\n              </div>\n\n              <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\">Title</label>\n                {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vTitle\" value={inquiryform.vTitle} onChange={handleChange} placeholder=\"Inquiry Title\" /> */}\n                <input\n                // {...register('vTitleProject', { required: true })}\n                className=\"form-control rounded-pill mt-2\"\n              type=\"text\"\n              name=\"vTitleProject\"\n              placeholder=\"Project Title\"\n              value={registrationform.vTitle?registrationform.vTitle:registrationform.vTitleProject}\n              onChange={hadlechange}\n            />\n            {error.vTitleProject ? <p style={{ color: \"red\" }}>{error.vTitleProject}</p> : \"\"}\n              </div>\n            </div>\n            <div className=\"col-12 my-2 d-inline-flex \">\n              <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\" className=\"d-block\">\n                  Technology\n                </label>\n                {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vTechnology\" value={inquiryform.vTechnology} onChange={handleChange} placeholder=\"Inquiry Technology\" /> */}\n                {/* <input\n                {...register('vTechnology', { required: true })}\n              type=\"text\"\n              className=\"form-control rounded-pill mt-2\"\n              name=\"vTechnology\"\n              placeholder=\"Technology\"\n              value={registrationform.vTechnology}\n              onChange={hadlechange}\n            /> */}\n             <select name=\"vTechnology\" id=\"\"\n                // {...register('vTechnology', { required: true })}\n                className=\"form-control rounded-pill mt-2\" \n                onChange={hadlechange}\n                value={registrationform.vTechnology}\n                >\n                  <option value=\"\">select</option>\n                  {technologydropdown.map((e)=>{\n                    return(\n                      <option value={e}>{e}</option>\n                    )\n                  })}\n                </select>\n                {error.vTechnology ? <p style={{ color: \"red\" }}>{error.vTechnology}</p> : \"\"}\n              </div>\n\n              <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\">Hire Resource</label>\n                {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vSourceOfInquiry\" value={inquiryform.vSourceOfInquiry} onChange={handleChange} placeholder=\"Source of Inquiry\" /> */}\n                <input\n                // {...register('vHireResource', { required: true })}\n              type=\"text\"\n              className=\"form-control rounded-pill mt-2\"\n              name=\"vHireResource\"\n              placeholder=\"Hire Resource\"\n              value={registrationform.vHireResource}\n              onChange={hadlechange}\n            />\n            {error.vHireResource ? <p style={{ color: \"red\" }}>{error.vHireResource}</p> : \"\"}\n              </div>\n            </div>\n            <div className=\"col-xxl-12 col-xl-12 col-lg-12 col-md-6 col-sm-6 my-2 d-inline-flex  \">\n              <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\">Billing Date</label>\n                {/* <textarea className=\"inputField col-12 mb-3\" name=\"tDescription\" value={inquiryform.tDescription} onChange={handleChange} placeholder=\"Description\"></textarea> */}\n                <input\n                // {...register('dBillingCycleDate', { required: true })}\n              type=\"date\"\n              className=\"form-control rounded-pill mt-2\"\n              name=\"dBillingCycleDate\"\n              placeholder=\"Billing Date\"\n              value={registrationform.dBillingCycleDate}\n              onChange={hadlechange}\n            />\n            {error.dBillingCycleDate ? <p style={{ color: \"red\" }}>{error.dBillingCycleDate}</p> : \"\"}\n              </div>\n\n              <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\">Billing Amount</label>\n                {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vHireDuration\" value={inquiryform.vHireDuration} onChange={handleChange} placeholder=\"Hire Duration\" /> */}\n                <input\n                // {...register('fHireBillingAmount', { required: true })}\n              type=\"number\"\n              className=\"form-control rounded-pill mt-2\"\n              name=\"fHireBillingAmount\"\n              placeholder=\"Billing Amount\"\n              value={registrationform.fHireBillingAmount}\n              onChange={hadlechange}\n            />\n            {error.fHireBillingAmount ? <p style={{ color: \"red\" }}>{error.fHireBillingAmount}</p> : \"\"}\n              </div>\n            </div>\n            <div className=\"col-xxl-12 col-xl-12 col-lg-12 col-md-6 col-sm-6 my-2 d-inline-flex  \">\n              <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\">Converted Date</label>\n                {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vHireMonthlyBudget\" value={inquiryform.vHireMonthlyBudget} onChange={handleChange} placeholder=\"Hire Monthly Budget\" /> */}\n                <input\n                // {...register('dconvertedDate', { required: true })}\n              type=\"date\"\n              className=\"form-control rounded-pill mt-2\"\n              name=\"dconvertedDate\"\n              placeholder=\"Converted Date\"\n              value={registrationform.dconvertedDate}\n              onChange={hadlechange}\n            />\n            {error.dconvertedDate ? <p style={{ color: \"red\" }}>{error.dconvertedDate}</p> : \"\"}\n              </div>\n\n              <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\">Project Cost</label>\n                {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vExperienceRequired\" value={inquiryform.vExperienceRequired} onChange={handleChange} placeholder=\"Experience Required\" /> */}\n                <input\n                // {...register('fProjectCost', { required: true })}\n              type=\"number\"\n              className=\"form-control rounded-pill mt-2\"\n              name=\"fProjectCost\"\n              placeholder=\"Project Cost\"\n              value={registrationform.fProjectCost}\n              onChange={hadlechange}\n            />\n            {error.fProjectCost ? <p style={{ color: \"red\" }}>{error.fProjectCost}</p> : \"\"}\n              </div>\n            </div>\n\n\n\n            <div className=\"col-xxl-12 col-xl-12 col-lg-12 col-md-6 col-sm-6 my-2 d-inline-flex  \">\n            <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\">Cost of Project</label>\n                {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vExperienceRequired\" value={inquiryform.vExperienceRequired} onChange={handleChange} placeholder=\"Experience Required\" /> */}\n                <input\n                // {...register('fCostOfProject', { required: true })}\n              type=\"number\"\n              className=\"form-control rounded-pill mt-2\"\n              name=\"fCostOfProject\"\n              placeholder=\"Cost of Project\"\n              value={registrationform.fCostOfProject}\n              onChange={hadlechange}\n            />\n            {error.fCostOfProject ? <p style={{ color: \"red\" }}>{error.fCostOfProject}</p> : \"\"}\n              </div>\n\n              <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\">Notes</label>\n                {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vExperienceRequired\" value={inquiryform.vExperienceRequired} onChange={handleChange} placeholder=\"Experience Required\" /> */}\n                <input\n                // {...register('tNotes', { required: true })}\n              type=\"text\"\n              className=\"form-control rounded-pill mt-2\"\n              name=\"tNotes\"\n              placeholder=\"Notes\"\n              value={registrationform.tNotes}\n              onChange={hadlechange}\n            />\n            {error.tNotes ? <p style={{ color: \"red\" }}>{error.tNotes}</p> : \"\"}\n              </div>\n            </div>\n\n\n\n            <div className=\"col-xxl-12 col-xl-12 col-lg-12 col-md-6 col-sm-6 my-2 d-inline-flex  \">\n           \n            <div className=\"col-6  my-2 px-3\">\n            <label htmlFor=\"\">Hire Duration</label>\n                <input\n                // {...register('vHireDuration', { required: true })}\n              type=\"text\"\n              className=\"form-control rounded-pill mt-2\"\n              name=\"vHireDuration\"\n              placeholder=\"Hire Duration\"\n              value={registrationform.vHireDuration}\n              onChange={hadlechange}\n            />\n            {error.vHireDuration ? <p style={{ color: \"red\" }}>{error.vHireDuration}</p> : \"\"}\n               \n              </div>\n           \n            {/* <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\">Vendor id</label>\n                <input\n                 {...register('iVendorId', { required: true })}\n              type=\"number\"\n              className=\"form-control rounded-pill mt-2\"\n              name=\"iVendorId\"\n              placeholder=\"Vendor id\"\n              value={registrationform.iVendorId}\n              onChange={hadlechange}\n            />\n            {errors.iVendorId && <p className=\"error\">VendorId is required</p>}\n              </div> */}\n              <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\">Monthly Budget</label>\n                {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vExperienceRequired\" value={inquiryform.vExperienceRequired} onChange={handleChange} placeholder=\"Experience Required\" /> */}\n                <input\n                //  {...register('vHireMonthlyBudget', { required: true })}\n              type=\"number\"\n              className=\"form-control rounded-pill mt-2\"\n              name=\"vHireMonthlyBudget\"\n              placeholder=\"Monthly budget\"\n              value={registrationform.vHireMonthlyBudget}\n              onChange={hadlechange}\n            />\n            {error.vHireMonthlyBudget ? <p style={{ color: \"red\" }}>{error.vHireMonthlyBudget}</p> : \"\"}\n              </div>\n\n             \n            </div>\n\n\n            <div className=\"col-xxl-12 col-xl-12 col-lg-12 col-md-6 col-sm-6 my-2 d-inline-flex  \">\n            <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\">Experienced Required</label>\n                {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vExperienceRequired\" value={inquiryform.vExperienceRequired} onChange={handleChange} placeholder=\"Experience Required\" /> */}\n                <input\n                //  {...register('vExperienceRequired', { required: true })}\n              type=\"text\"\n              className=\"form-control rounded-pill mt-2\"\n              name=\"vExperienceRequired\"\n              placeholder=\"Experience Required\"\n              value={registrationform.vExperienceRequired}\n              onChange={hadlechange}\n            />\n            {error.vExperienceRequired ? <p style={{ color: \"red\" }}>{error.vExperienceRequired}</p> : \"\"}\n              </div>\n              <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\">Cost of Resource</label>\n                {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vExperienceRequired\" value={inquiryform.vExperienceRequired} onChange={handleChange} placeholder=\"Experience Required\" /> */}\n                <input\n                // {...register('fAtCostResourceToVendor', { required: true })}\n              type=\"number\"\n              className=\"form-control rounded-pill mt-2\"\n              name=\"fAtCostResourceToVendor\"\n              placeholder=\"Cost of Resource\"\n              value={registrationform.fAtCostResourceToVendor}\n              onChange={hadlechange}\n            />\n            {error.fAtCostResourceToVendor ? <p style={{ color: \"red\" }}>{error.fAtCostResourceToVendor}</p> : \"\"}\n              </div>\n\n             \n            </div>\n\n\n            <div className=\"col-xxl-12 col-xl-12 col-lg-12 col-md-6 col-sm-6 my-2 d-inline-flex  \">\n           \n              <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\">Status</label>\n                {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vExperienceRequired\" value={inquiryform.vExperienceRequired} onChange={handleChange} placeholder=\"Experience Required\" /> */}\n                <select\n                //  {...register('eStatus', { required: true })}\n                    className=\"form-control rounded-pill mt-2\"\n              type=\"text\"\n              name=\"eStatus\"\n              placeholder=\"Status\"\n              value={registrationform.eStatus}\n              onChange={hadlechange}\n            >\n              <option value=\"\">Select</option>\n              <option value=\"Converted\">Converted</option>\n              <option value=\"InProgress\">InProgress</option>\n              <option value=\"Cancelled\">Cancelled</option>\n              <option value=\"Rejected\">Rejected</option>\n              <option value=\"OnHold\">OnHold</option>\n              <option value=\"No Response From Client\">No Response From Client</option>\n              \n              \n            </select>\n            {error.eStatus ? <p style={{ color: \"red\" }}>{error.eStatus}</p> : \"\"}\n              </div>\n\n             \n            </div>\n\n\n\n            <div className=\"col-xxl-12 col-xl-12 col-lg-12 col-md-6 col-sm-6 my-2 d-inline-flex  \">\n            <div className=\"col-6  my-2 px-3\">\n            <label htmlFor=\"\">Documents</label>\n                {/* <input type=\"file\" className=\" col-12 mb-3\" /> */}\n                {/* <input type=\"file\" name=\"mediafiles\" value={inquiryform.mediafiles} onChange={handleimage} className=\" col-12 mb-3\" multiple/> */}\n                <input\n              type=\"file\"\n              className=\"form-control rounded-pill mt-2\"\n              name=\"requiredprojectfiles\"\n              id=\"upload\"\n              accept=\"image/*\"\n              onChange={uploadimage}\n              multiple\n            />\n              \n              </div>\n              <div className=\"col-6  my-2 \">\n              <div className=\"col-6  my-2  px-3\">\n              \n              </div>\n            </div>\n\n             \n            </div>\n\n\n           \n\n\n\n\n\n          \n\n          \n         \n          </div>\n\n          <button type=\"submit\"  onClick={handleSubmit(handelsubmit)} className=\"mx-auto btn btn-outline-dark w-25\">\n            Submit\n          </button>\n\n            </div>\n            {modal?\n        <>\n  \n \n  <div className='modal_'>\n        <div className='modalBody'>\n          \n        {message}\n\n          <div className=\"modal-button\">\n            {/* <button className=\"modal-btn\">Ok</button> */}\n            <button className=\"modal-btn\" onClick={handleToInquiries}>Go to Inquiries</button>\n            <button className=\"modal-btn\" onClick={handleClose}>Check it</button>\n          </div>\n        </div>\n    \n    </div>\n        </>\n\n        :\"\"}\n            </div>\n            </div>\n        </>\n    )\n}\n\nexport default Lead","/var/www/html/github/inhouse/src/pages/admin_dash/admin_dash.jsx",["627","628"],[],"import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport \"./admin_dash.css\"\nimport Sidebar from \"../sidebar/sidebar\";\nimport Header from \"../../header/header\";\n\nconst AdminDash =()=>{\n\n  const [data,setData] = useState()\n  const [monthly,setMonthly]=useState(false)\n  const [year,setYear]=useState(false)\n\n  const dash = async () => {\n    const result = await fetch(\n      `${process.env.REACT_APP_APIURL}/dashboard/?${monthly?`month=${monthly}&`:\"\"}${year?`year=${year}&`:\"\"}`,\n        {\n          method: \"get\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"Token\")}`,\n          },\n        }\n    );\n\n    const response = await result.json()\n    console.log(response);\n    const res = response.Message\n    setData(res)\n    \n  };\n\n  useEffect(()=>{\n    dash()\n  },[monthly,year])\n\n  var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\nreturn(\n    <>\n    {/* <Header /> */}\n    <Sidebar  IsAdmin={true}/>\n{/* <div>\n<input type=\"radio\" name=\"detailsdisplay\" value={\"monthly\"} onClick={()=>setMonthly(true)} checked ={monthly?\"checked\":\"\"} />\n<label for=\"html\">Monthly</label><br></br>\n<input type=\"radio\" name=\"detailsdisplay\" value={\"yearly\"} onClick={()=>setMonthly(false)} checked ={!monthly?\"checked\":\"\"}\n// disabled = {(this.state.disabled)? \"disabled\" : \"\"}\n/>\n<label for=\"html\">Yearly</label><br></br>\n</div> */}\n    <div className='set'>\n      <div className=\"text-end p-1\">\n        <select name=\"\" id=\"\" className=\"px-5 py-2 mx-1 rounded-pill\"\n        onChange={(e)=>setMonthly(e.target.value)}\n        >\n          <option value=\"\" >Months</option>\n          {months?.map((e)=>{\n            return(\n              <option value={e} >{e}</option>\n\n            )\n          })}\n        </select>\n        <input type=\"number\" onChange={(e)=>setYear(e.target.value)}  \n         onInput={(e) => {\n          if (e.target.value.length > e.target.maxLength)\n          e.target.value = e.target.value.slice(0,e.target.maxLength);}}\n          maxlength = {4}\n          placeholder=\"2021\"\n\n        className=\"foryear px-2 py-2 mx-1 border-1 rounded-pill\" />\n      </div>\n    <div className=\"row m-3\">\n        <div className=\"col-sm-4\">\n          <div className=\"card  text-white\">\n          <div className=\"card-head shadow-lg bg-primary\">\n            <h3 className=\"text text-center \">Inquiries</h3>\n            </div>\n            <div className=\"card-body cardi\">\n              <table className=\"table text-black table-striped\">\n                <thead className=\"text-center\">\n                  <tr>\n                    <th scope=\"col \">Status</th>\n                    <th scope=\"col\">Total</th>\n                    \n                  </tr>\n                </thead>\n                <tbody className=\"text-center\">\n                  {data?.inquiry?.map((e)=>{\n                    // console.log(\"data\",data)\n                    return(\n\n                    \n                  <tr>\n                    <td>{e.eStatus}</td>\n                    <td>{e.No_of_inquiriesstatus}</td>\n                  </tr>\n                  )\n                })}\n                  \n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-sm-4\">\n          <div className=\"card  text-white\">\n          <div className=\"card-head shadow-lg bg-secondary\">\n          <h3 className=\"text text-center\">Projects</h3>\n            </div>\n            <div className=\"card-body cardi\">\n            <table class=\"table table-striped \">\n                <thead className=\"text-black text-center\">\n                  <tr>\n                    <th scope=\"col\">Status</th>\n                    <th scope=\"col\">Total</th>\n                    \n                  </tr>\n                </thead>\n                <tbody className=\"text-black text-center\">\n\n                {data?.projects?.map((e)=>{\n                    // console.log(\"data\",data)\n                    return(\n\n                    \n                  <tr>\n                    <td>{e.Typeofproject}</td>\n                    <td>{e.No_of_Projects}</td>\n                  </tr>\n                  )\n                })}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n\n        \n        <div className=\"col-sm-4\">\n          <div className=\"card  text-white\">\n          <div className=\"card-head shadow-lg bg-success\">\n          <h3 className=\"text text-center\">Leads</h3>\n            </div>\n            <div className=\"card-body cardi\">\n            <table class=\"table table-striped\">\n                <thead className=\"text-black text-center \">\n                  <tr>\n                    <th scope=\"col\">Status</th>\n                    <th scope=\"col\">Total</th>\n                    \n                  </tr>\n                </thead>\n                <tbody className=\"text-black text-center\">\n                {data?.leads?.map((e)=>{\n                    // console.log(\"data\",data)\n                    return(\n\n                    \n                      <tr>\n                      <td>{e.Typeofproject}</td>\n                      <td>{e.No_of_Projects}</td>\n                    </tr>\n                  )\n                })}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      \n  </div>\n\n  <div className=\"row m-3\">\n        <div className=\"col-sm-4\">\n          <div className=\"card  text-white\">\n          <div className=\"card-head shadow-lg text-white bg-dark\">\n            <h3 className=\"text text-center \">Milestones</h3>\n            </div>\n            <div className=\"card-body cardi\">\n              <table className=\"table text-black table-striped\">\n                <thead className=\"text-center\">\n                  <tr>\n                    <th scope=\"col \">Status</th>\n                    <th scope=\"col\">Total</th>\n                    \n                  </tr>\n                </thead>\n                <tbody className=\"text-center\">\n                  {data?.milestones?.map((e)=>{\n                    // console.log(\"data\",data)\n                    return(\n\n                    \n                  <tr>\n                    <td>Current Month</td>\n                    <td>{e.currentmonthmilestone}</td>\n                  </tr>\n                  )\n                })}\n                  \n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-sm-4\">\n          <div className=\"card  text-white\">\n          <div className=\"card-head shadow-lg bg-primary\">\n          <h3 className=\"text text-center\">Users</h3>\n            </div>\n            <div className=\"card-body cardi\">\n            <table class=\"table table-striped \">\n                <thead className=\"text-black text-center\">\n                  <tr>\n                    <th scope=\"col\">Name</th>\n                    <th scope=\"col\">Role</th>\n                    \n                  </tr>\n                </thead>\n                <tbody className=\"text-black text-center\">\n\n                {data?.users?.map((e)=>{\n                    // console.log(\"data\",data)\n                    return(\n\n                    \n                  <tr>\n                    <td>{e.name_of_user}</td>\n                    <td>{e.usertype}</td>\n                  </tr>\n                  )\n                })}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n\n\n        <div className=\"col-sm-4\">\n          <div className=\"card  text-white\">\n          <div className=\"card-head shadow-lg bg-secondary\">\n          <h3 className=\"text text-center\">On-Bentch</h3>\n            </div>\n            <div className=\"card-body cardi\">\n            <table class=\"table table-striped \">\n                <thead className=\"text-black text-center\">\n                  <tr>\n                    <th scope=\"col\">Name</th>\n                    <th scope=\"col\">Salary</th>\n                    \n                  </tr>\n                </thead>\n                <tbody className=\"text-black text-center\">\n\n                {data?.onbenchlist?.map((e)=>{\n                    // console.log(\"data\",data)\n                    return(\n\n                    \n                  <tr>\n                    <td>{e.vname}</td>\n                    <td>{e.isalary}</td>\n                  </tr>\n                  )\n                })}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n\n\n        \n        {/* <div className=\"col-sm-4\">\n          <div className=\"card  text-white\">\n          <div className=\"card-head shadow-lg bg-success\">\n          <h3 className=\"text text-center\">Leads</h3>\n            </div>\n            <div className=\"card-body cardi\">\n            <table class=\"table table-striped\">\n                <thead className=\"text-black text-center \">\n                  <tr>\n                    <th scope=\"col\">Status</th>\n                    <th scope=\"col\">Total</th>\n                    \n                  </tr>\n                </thead>\n                <tbody className=\"text-black text-center\">\n                {data?.milestones?.map((e)=>{\n                    console.log(\"data\",data)\n                    return(\n\n                    \n                  <tr>\n                    <td>Current Month</td>\n                    <td>{e.currentmonthmilestone}</td>\n                  </tr>\n                  )\n                })}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div> */}\n      \n  </div>\n  </div>\n\n    \n\n\n    </>\n)\n}\nexport default AdminDash","/var/www/html/github/inhouse/src/pages/lead_edit/l_edit.jsx",["629","630","631","632","633","634","635","636","637","638","639","640","641","642","643","644","645","646","647","648","649","650","651","652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667","668","669","670","671","672","673","674","675"],[],"import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport Sidebar from \"../sidebar/sidebar\";\nimport axios from \"axios\";\nimport fileDownload from 'js-file-download'\nimport { Link } from \"react-router-dom\";\nimport { useForm } from 'react-hook-form';\nimport { sourcelist,technologylist } from \"../../constfiles\";\n\n\nconst L_edit = () => {\n  // const[error,setError] = useState()\n  const [isUpdate, setIsUpdate] = useState(false)\n  const [updated, setUpdated] = useState(false)\n  const [Sourcelistdropdown,setSourcelistdropdown] = useState(sourcelist);\n  const [technologydropdown] = useState(technologylist);\n  const navigate = useNavigate();\n  const [doc, setDoc] = useState([])\n\n\n\n  const [error, setError] = useState({})\n  const [selectedFile, setSelectedFile] = useState();\n  // const [updateForm, SetUpdateForm] = useState({});\n  const { projectid, Leadid, inquiryid } = useParams();\n  // alert(Leadid)\n  // const { iProjectId } = useParams();\n\n  // const [milestone, setMilestone] = useState({\n  //   iProjectId: projectid,\n  // });\n  // alert(inquiryid);\n  const [data, setData] = useState({\n    iLeadid: Leadid,\n    vTechnology:\"\"\n  });\n\n  let handleChange = (e) => {\n    let name = e.target.name;\n    let value = e.target.value;\n    setData({ ...data, [name]: value });\n    setIsUpdate(true)\n  };\n\n\n\n  const isvalid = (verificationdata) => {\n    let errors = {};\n\n    // if (\n    //   verificationdata.CompanyName == undefined ||\n    //   verificationdata.CompanyName == \"\"\n    // ) {\n    //   errors.CompanyName = \"Company name is Required\";\n    // } else if (\n    //   !/^([a-zA-Z]+\\s)*[a-zA-Z]+$/.test(verificationdata.CompanyName)\n    // ) {\n    //   errors.CompanyName = \"Company name is not valid \";\n    // }\n    if (\n      verificationdata.eTypeOfProject == undefined ||\n      verificationdata.eTypeOfProject == \"\"\n    ) {\n      errors.eTypeOfProject = \"Field should not be empty\";\n    }\n    if (\n      verificationdata.vTitleProject == undefined ||\n      verificationdata.vTitleProject == \"\"\n    ) {\n      errors.vTitleProject = \"Field should not be empty\";\n    }\n    if (\n      verificationdata.fCostOfProject == undefined ||\n      verificationdata.fCostOfProject == \"\"\n    ) {\n      errors.fCostOfProject = \"Field should not be empty\";\n    }\n    if (\n      verificationdata.vTechnology == undefined ||\n      verificationdata.vTechnology == \"\"\n    ) {\n      errors.vTechnology = \"Field should not be empty\";\n    }\n    if (\n      verificationdata.vHireResource == undefined ||\n      verificationdata.vHireResource == \"\"\n    ) {\n      errors.vHireResource = \"Field should not be empty\";\n    }\n    // if (\n    //   verificationdata.tNotes == undefined ||\n    //   verificationdata.tNotes == \"\"\n    // ) {\n    //   errors.tNotes = \"Field should not be empty\";\n    // }\n    if (\n      verificationdata.vExperienceRequired == undefined ||\n      verificationdata.vExperienceRequired == \"\"\n    ) {\n      errors.vExperienceRequired = \"Field should not be empty\";\n    }\n    if (\n      verificationdata.eStatus == undefined ||\n      verificationdata.eStatus == \"\"\n    ) {\n      errors.eStatus = \"Field should not be empty\";\n    }\n    // if (\n    //   verificationdata.iVendorId == undefined ||\n    //   verificationdata.iVendorId == \"\"\n    // ) {\n    //   errors.iVendorId = \"Field should not be empty\";\n    // }\n    if (\n      verificationdata.dBillingCycleDate == undefined ||\n      verificationdata.dBillingCycleDate == \"\"\n    ) {\n      errors.dBillingCycleDate = \"Field should not be empty\";\n    }\n    if (\n      verificationdata.fHireBillingAmount == undefined ||\n      verificationdata.fHireBillingAmount == \"\"\n    ) {\n      errors.fHireBillingAmount = \"Field should not be empty\";\n    }\n    if (\n      verificationdata.dconvertedDate == undefined ||\n      verificationdata.dconvertedDate == \"\"\n    ) {\n      errors.dconvertedDate = \"Field should not be empty\";\n    }\n    if (\n      verificationdata.vHireDuration == undefined ||\n      verificationdata.vHireDuration == \"\"\n    ) {\n      errors.vHireDuration = \"Field should not be empty\";\n    }\n    if (\n      verificationdata.fProjectCost == undefined ||\n      verificationdata.fProjectCost == \"\"\n    ) {\n      errors.fProjectCost = \"Field should not be empty\";\n    }\n    if (\n      verificationdata.fAtCostResourceToVendor == undefined ||\n      verificationdata.fAtCostResourceToVendor == \"\"\n    ) {\n      errors.fAtCostResourceToVendor = \"Field should not be empty\";\n    }\n    if (\n      verificationdata.vHireMonthlyBudget == undefined ||\n      verificationdata.vHireMonthlyBudget == \"\"\n    ) {\n      errors.vHireMonthlyBudget = \"Field should not be empty\";\n    }\n\n    return errors;\n  };\n\n  useEffect(() => {\n    if (Object.keys(data).length != 0) {\n      setError(isvalid(data));\n    } else {\n      return;\n    }\n  }, [data]);\n\n  // alert(inquiryid);\n\n  const singleapi = async (Leadid) => {\n    // alert(Leadid)\n    const result = await fetch(\n      `${process.env.REACT_APP_APIURL}/lead/${Leadid}`,\n      {\n        method: \"get\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"Token\")}`,\n        },\n      }\n    );\n\n    localStorage.setItem(\"lead id\", Leadid)\n    const apiresponse = await result.json();\n    const check = apiresponse.leadsfound;\n    setData({ ...data, ...check[0] });\n    setDoc(check)\n\n  };\n  useEffect(() => {\n    singleapi(Leadid);\n  }, []);\n  useEffect(() => {\n  }, [data]);\n\n\n\n  const leadpost = (e) => {\n    // e.preventDefault();\n    // alert(JSON.stringify(data))\n    const formData = new FormData();\n    if (selectedFile != undefined) {\n      for (let i = 0; i < selectedFile.length; i++) {\n        formData.append(\"requiredprojectfiles\", selectedFile[i]);\n      }\n    }\n\n    formData.append(\"iLeadid\", Leadid);\n\n    formData.append(\"eTypeOfProject\", data.eTypeOfProject);\n    formData.append(\"vTitleProject\", data.vTitleProject);\n    formData.append(\"fCostOfProject\", data.fCostOfProject);\n    formData.append(\"vTechnology\", data.vTechnology);\n    formData.append(\"vHireResource\", data.vHireResource);\n    formData.append(\"tNotes\", data.tNotes);\n    formData.append(\"iVendorId\", data.iVendorId);\n    formData.append(\"dBillingCycleDate\", data.dBillingCycleDate);\n    formData.append(\"fHireBillingAmount\", data.fHireBillingAmount);\n    formData.append(\"dconvertedDate\", data.dconvertedDate);\n    formData.append(\"fProjectCost\", data.fProjectCost);\n    formData.append(\"vExperienceRequired\", data.vExperienceRequired);\n    formData.append(\"vHireMonthlyBudget\", data.vHireMonthlyBudget);\n    formData.append(\"fAtCostResourceToVendor\", data.fAtCostResourceToVendor);\n    formData.append(\"vHireDuration\", data.vHireDuration);\n    formData.append(\"eStatus\", data.eStatus);\n    const apicall = () => {\n      // alert(Leadid)\n      // alert(JSON.stringify(formData));\n      const apidata = axios({\n        method: \"put\",\n        url: `${process.env.REACT_APP_APIURL}/lead/${Leadid}`,\n        data: formData,\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"Token\")}`,\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      })\n      // console.log(apidata);\n      setSelectedFile(undefined);\n      const respo = apidata.data;\n      const check = respo?.Message;\n      setUpdated(true)\n      setIsUpdate(false)\n    };\n    try {\n      if(isUpdate && Object.keys(error).length==0){\n        apicall();\n        singleapi(Leadid);\n      }\n      \n    } catch (e) {\n      // alert(e)\n      // alert(e)\n    }\n    setSelectedFile(null);\n  }\n\n\n  const uploadimage = (e) => {\n    setIsUpdate(true)\n\n    setSelectedFile(e.target.files);\n    // console.log(e.target.files)\n  };\n\n\n\n\n  const handleConvert = () => {\n    navigate(\"/lead_project/\" + `${Leadid}`)\n  }\n\n\n\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    control,\n    watch,\n  } = useForm();\n\n\n  useEffect(() => {\n    // console.log(error)\n  }, [error])\n\n  return (\n    <>\n\n\n      <Sidebar IsSales={true} />\n\n      <div className='set'>\n\n        <div className=\"container my-3 body p-5\">\n\n\n\n          <div className=\"row \">\n\n\n\n\n\n            <div className=\"col-12 text-center mb-2 \">\n              <h1 className=\"title\">Lead</h1>\n            </div>\n\n\n\n            <div>\n              <div className=\"col-xxl-12 col-xl-12 col-lg-6 col-md-12 col-sm-12 my-2 d-inline-flex \">\n                <div className=\"col-6  my-2 px-3\">\n                  <label htmlFor=\"\" className=\"d-block\">\n                    Type of Project\n                  </label>\n                  <select\n                    // {...register('eTypeOfProject', { required: true })}\n                    className=\"form-control rounded-pill mt-2\"\n                    type=\"text\"\n                    name=\"eTypeOfProject\"\n                    placeholder=\"Type of Project\"\n                    value={data.eTypeOfProject}\n                    onChange={handleChange}\n                  // defaultValue={data.eTypeOfProject}\n                  >\n                    <option value=\"\">Select</option>\n                    <option value=\"Hire\">Hire</option>\n                    <option value=\"Project Basis\">Project Basis</option>\n                    <option value=\"Fix Cost - Less than 2 weeks\">\n                      Fix Cost - Less than 2 weeks\n                    </option>\n                  </select>\n                  {error.eTypeOfProject ? <p style={{ color: \"red\" }}>{error.eTypeOfProject}</p> : \"\"}\n                  {/* {errors.eTypeOfProject && <p className=\"error\">Field is required</p>} */}\n                </div>\n\n                <div className=\"col-6  my-2 px-3\">\n                  <label htmlFor=\"\">Title</label>\n                  {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vTitle\" value={inquiryform.vTitle} onChange={handleChange} placeholder=\"Inquiry Title\" /> */}\n                  <input\n                    // {...register('vTitleProject', { required: true })}\n                    className=\"form-control rounded-pill mt-2\"\n                    type=\"text\"\n                    name=\"vTitleProject\"\n                    placeholder=\"Project Title\"\n                    value={data.vTitleProject}\n                    onChange={handleChange}\n                  />\n                  {error.vTitleProject ? <p style={{ color: \"red\" }}>{error.vTitleProject}</p> : \"\"}\n                  {/* {errors.vTitleProject && <p className=\"error\">{errors.vTitleProject.message}</p>} */}\n                </div>\n              </div>\n              <div className=\"col-12 my-2 d-inline-flex \">\n                <div className=\"col-6  my-2 px-3\">\n                  <label htmlFor=\"\" className=\"d-block\">\n                    Technology\n                  </label>\n                  {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vTechnology\" value={inquiryform.vTechnology} onChange={handleChange} placeholder=\"Inquiry Technology\" /> */}\n                  {/* <input\n                    // {...register('vTechnology', { required: true })}\n                    type=\"text\"\n                    className=\"form-control rounded-pill mt-2\"\n                    name=\"vTechnology\"\n                    placeholder=\"Technology\"\n                    value={data.vTechnology}\n                    onChange={handleChange}\n                  /> */}\n                    <select name=\"vTechnology\" id=\"\"\n                // {...register('vTechnology', { required: true })}\n                className=\"form-control rounded-pill mt-2\" \n                onChange={handleChange}\n                // value={data.vTechnology}\n                >\n                  <option value=\"\">select</option>\n                  {technologydropdown.map((e)=>{\n                    return(\n                      <option value={e} selected={data?.vTechnology.toLowerCase()==e.toLowerCase()?\"selected\":\"\"}>{e}</option>\n                    )\n                  })}\n                </select>\n                  {error.vTechnology?<p style={{color:\"red\"}}>{error.vTechnology}</p>:\"\"}\n                  {/* {errors.vTechnology && <p className=\"error\">Technology is required.</p>} */}\n                </div>\n\n\n                <div className=\"col-6  my-2 px-3\">\n                  <label htmlFor=\"\">Hire Resource</label>\n                  {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vSourceOfInquiry\" value={inquiryform.vSourceOfInquiry} onChange={handleChange} placeholder=\"Source of Inquiry\" /> */}\n                  <input\n                    // {...register('vHireResource', { required: true })}\n                    type=\"text\"\n                    className=\"form-control rounded-pill mt-2\"\n                    name=\"vHireResource\"\n                    placeholder=\"Hire Resource\"\n                    value={data.vHireResource}\n                    onChange={handleChange}\n\n\n                  />\n                  {error.vHireResource?<p style={{color:\"red\"}}>{error.vHireResource}</p>:\"\"}\n                  {/* {errors.vHireResource && <p className=\"error\">Hire Resource is required.</p>} */}\n                </div>\n              </div>\n              <div className=\"col-xxl-12 col-xl-12 col-lg-12 col-md-6 col-sm-6 my-2 d-inline-flex  \">\n                <div className=\"col-6  my-2 px-3\">\n                  <label htmlFor=\"\">Billing Date</label>\n                  {/* <textarea className=\"inputField col-12 mb-3\" name=\"tDescription\" value={inquiryform.tDescription} onChange={handleChange} placeholder=\"Description\"></textarea> */}\n                  <input\n                    //  {...register('dBillingCycleDate', { required: true })}\n                    type=\"date\"\n                    className=\"form-control rounded-pill mt-2\"\n                    name=\"dBillingCycleDate\"\n                    placeholder=\"Billing Date\"\n                    value={new Date(data.dBillingCycleDate).toLocaleDateString(\"en-CA\")}\n                    onChange={handleChange}\n                  />\n                  {error.dBillingCycleDate?<p style={{color:\"red\"}}>{error.dBillingCycleDate}</p>:\"\"}\n                  {/* {errors.dBillingCycleDate && <p className=\"error\">Billing Cycle Date is required.</p>} */}\n                </div>\n\n                <div className=\"col-6  my-2 px-3\">\n                  <label htmlFor=\"\">Billing Amount</label>\n                  {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vHireDuration\" value={inquiryform.vHireDuration} onChange={handleChange} placeholder=\"Hire Duration\" /> */}\n                  <input\n                    //  {...register('fHireBillingAmount', { required: true })}\n                    type=\"number\"\n                    className=\"form-control rounded-pill mt-2\"\n                    name=\"fHireBillingAmount\"\n                    placeholder=\"Billing Amount\"\n                    value={data.fHireBillingAmount}\n                    onChange={handleChange}\n                  />\n                  {error.fHireBillingAmount?<p style={{color:\"red\"}}>{error.fHireBillingAmount}</p>:\"\"}\n                  {/* {errors.fHireBillingAmount && <p className=\"error\">Billing Amount is required.</p>} */}\n                </div>\n              </div>\n              <div className=\"col-xxl-12 col-xl-12 col-lg-12 col-md-6 col-sm-6 my-2 d-inline-flex  \">\n                <div className=\"col-6  my-2 px-3\">\n                  <label htmlFor=\"\">Converted Date</label>\n                  {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vHireMonthlyBudget\" value={inquiryform.vHireMonthlyBudget} onChange={handleChange} placeholder=\"Hire Monthly Budget\" /> */}\n                  <input\n                    //  {...register('dconvertedDate', { required: true })}\n                    type=\"date\"\n                    className=\"form-control rounded-pill mt-2\"\n                    name=\"dconvertedDate\"\n                    placeholder=\"Converted Date\"\n                    value={new Date(data.dconvertedDate).toLocaleDateString(\"en-CA\")}\n                    onChange={handleChange}\n                  />\n                  {error.dconvertedDate?<p style={{color:\"red\"}}>{error.dconvertedDate}</p>:\"\"}\n                  {/* {errors.dconvertedDate && <p className=\"error\">Converted Date is required.</p>} */}\n                </div>\n\n                <div className=\"col-6  my-2 px-3\">\n                  <label htmlFor=\"\">Project Cost</label>\n                  {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vExperienceRequired\" value={inquiryform.vExperienceRequired} onChange={handleChange} placeholder=\"Experience Required\" /> */}\n                  <input\n                    //  {...register('fProjectCost', { required: true })}\n                    type=\"number\"\n                    className=\"form-control rounded-pill mt-2\"\n                    name=\"fProjectCost\"\n                    placeholder=\"Project Cost\"\n                    value={data.fProjectCost}\n                    onChange={handleChange}\n                  />\n                  {error.fProjectCost?<p style={{color:\"red\"}}>{error.fProjectCost}</p>:\"\"}\n                  {/* {errors.fProjectCost && <p className=\"error\">Project Cost is required.</p>} */}\n                </div>\n              </div>\n\n\n\n              <div className=\"col-xxl-12 col-xl-12 col-lg-12 col-md-6 col-sm-6 my-2 d-inline-flex  \">\n                <div className=\"col-6  my-2 px-3\">\n                  <label htmlFor=\"\">Cost of Project</label>\n                  {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vExperienceRequired\" value={inquiryform.vExperienceRequired} onChange={handleChange} placeholder=\"Experience Required\" /> */}\n                  <input\n                    //  {...register('fCostOfProject', { required: true })}\n                    type=\"number\"\n                    className=\"form-control rounded-pill mt-2\"\n                    name=\"fCostOfProject\"\n                    placeholder=\"Cost of Project\"\n                    value={data.fCostOfProject}\n                    onChange={handleChange}\n                  />\n                  {error.fCostOfProject?<p style={{color:\"red\"}}>{error.fCostOfProject}</p>:\"\"}\n                  {/* {errors.fCostOfProject && <p className=\"error\">Cost Of Project is required.</p>} */}\n                </div>\n\n                <div className=\"col-6  my-2 px-3\">\n                  <label htmlFor=\"\">Monthly Budget</label>\n                  <input\n                    //  {...register('vHireMonthlyBudget', { required: true })}\n                    type=\"number\"\n                    className=\"form-control rounded-pill mt-2\"\n                    name=\"vHireMonthlyBudget\"\n                    placeholder=\"Monthly budget\"\n                    value={data.vHireMonthlyBudget}\n                    onChange={handleChange}\n                  />\n                  {error.vHireMonthlyBudget?<p style={{color:\"red\"}}>{error.vHireMonthlyBudget}</p>:\"\"}\n                  {/* {errors.vHireMonthlyBudget && <p className=\"error\">Hire Monthly Budget is required.</p>} */}\n                  {/* <label htmlFor=\"\">Notes</label>\n                <input\n              type=\"text\"\n              className=\"inputField col-12 mb-3\"\n              name=\"tNotes\"\n              placeholder=\"Notes\"\n              value={data.tNotes}\n              onChange={handleChange}\n            /> */}\n                </div>\n              </div>\n\n\n\n\n\n\n              <div className=\"col-xxl-12 col-xl-12 col-lg-12 col-md-6 col-sm-6 my-2 d-inline-flex  \">\n                <div className=\"col-6  my-2 px-3\">\n                  <label htmlFor=\"\">Experienced Required</label>\n                  {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vExperienceRequired\" value={inquiryform.vExperienceRequired} onChange={handleChange} placeholder=\"Experience Required\" /> */}\n                  <input\n                    //  {...register('vExperienceRequired', { required: true })}\n                    type=\"text\"\n                    className=\"form-control rounded-pill mt-2\"\n                    name=\"vExperienceRequired\"\n                    placeholder=\"Experienced Required\"\n                    value={data.vExperienceRequired}\n                    onChange={handleChange}\n                  />\n                  {error.vExperienceRequired?<p style={{color:\"red\"}}>{error.vExperienceRequired}</p>:\"\"}\n                  {/* {errors.vExperienceRequired && <p className=\"error\">Experience Required is required.</p>} */}\n                </div>\n                <div className=\"col-6  my-2 px-3\">\n                  <label htmlFor=\"\">Cost of Resource</label>\n                  {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vExperienceRequired\" value={inquiryform.vExperienceRequired} onChange={handleChange} placeholder=\"Experience Required\" /> */}\n                  <input\n                    //  {...register('fAtCostResourceToVendor', { required: true })}\n                    type=\"number\"\n                    className=\"form-control rounded-pill mt-2\"\n                    name=\"fAtCostResourceToVendor\"\n                    placeholder=\"Cost of Resource\"\n                    value={data.fAtCostResourceToVendor}\n                    onChange={handleChange}\n                  />\n                  {error.fAtCostResourceToVendor?<p style={{color:\"red\"}}>{error.fAtCostResourceToVendor}</p>:\"\"}\n                  {/* {errors.fAtCostResourceToVendor && <p className=\"error\">Cost Resource To Vendor Required is required.</p>} */}\n                </div>\n\n\n              </div>\n\n\n              <div className=\"col-xxl-12 col-xl-12 col-lg-12 col-md-6 col-sm-6 my-2 d-inline-flex  \">\n                <div className=\"col-6  my-2 px-3\">\n                  <label htmlFor=\"\">Hire Duration</label>\n                  <input\n                    //  {...register('vHireDuration', { required: true })}\n                    type=\"text\"\n                    className=\"form-control rounded-pill mt-2\"\n                    name=\"vHireDuration\"\n                    placeholder=\"Hire Duration\"\n                    value={data.vHireDuration}\n                    onChange={handleChange}\n                  />\n                  {error.vHireDuration?<p style={{color:\"red\"}}>{error.vHireDuration}</p>:\"\"}\n                  {/* {errors.vHireDuration && <p className=\"error\">Cost of Project Required is required.</p>} */}\n                  {/* <label htmlFor=\"\">Project Status</label>\n                <select\n                    className=\"formcontrol d-block dropdownWidth mb-3\"\n              type=\"text\"\n              name=\"eProjectStatus\"\n              placeholder=\"Type of Project\"\n              value={data.eProjectStatus}\n              onChange={handleChange}\n            >\n              <option value=\"\">Select</option>\n              <option value=\"Inquiry\">Inquiry</option>\n              <option value=\"Lead\">Lead</option>\n              <option value=\"Project\">Project</option>\n             \n            </select> */}\n                </div>\n                <div className=\"col-6  my-2 px-3\">\n                  <label htmlFor=\"\">Status</label>\n                  {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vExperienceRequired\" value={inquiryform.vExperienceRequired} onChange={handleChange} placeholder=\"Experience Required\" /> */}\n                  <select\n                    // {...register('eStatus', { required: true })}\n                    className=\"form-control rounded-pill mt-2\"\n                    type=\"text\"\n                    name=\"eStatus\"\n                    placeholder=\"Type of Project\"\n                    value={data.eStatus}\n                    onChange={handleChange}\n                  >\n                    <option value=\"\">Select</option>\n                    <option value=\"Converted\">Converted</option>\n                    <option value=\"InProgress\">InProgress</option>\n                    <option value=\"Cancelled\">Cancelled</option>\n                    <option value=\"Rejected\">Rejected</option>\n                    <option value=\"OnHold\">OnHold</option>\n                    <option value=\"No Response From Client\">No Response From Client</option>\n\n\n                  </select>\n                  {error.eStatus?<p style={{color:\"red\"}}>{error.eStatus}</p>:\"\"}\n                  {/* {errors.eStatus && <p className=\"error\">Status Required is required.</p>} */}\n                </div>\n\n\n              </div>\n\n\n\n\n\n              <div className=\"col-xxl-12 col-xl-12 col-lg-12 col-md-6 col-sm-6 my-2 d-inline-flex  \">\n                <div className=\"col-6  my-2 px-3\">\n                  {/* <label htmlFor=\"\">Notes</label>\n                <input\n              type=\"text\"\n              className=\"inputField col-12 mb-3\"\n              name=\"tNotes\"\n              placeholder=\"Notes\"\n              value={data.tNotes}\n              onChange={handleChange}\n            /> */}\n                  <label htmlFor=\"\">Document:</label><br />\n                  <input\n                    // {...register('requiredprojectfiles', { required: true })}\n                    type=\"file\"\n                    className=\"form-control rounded-pill mt-2\"\n                    name=\"requiredprojectfiles\"\n                    id=\"upload\"\n                    accept=\"image/*\"\n                    onChange={uploadimage}\n                    multiple\n                  />\n                  {/* {errors.requiredprojectfiles && <p className=\"error\">Project files Required is required.</p>} */}\n                </div>\n\n                <div className=\"col-6  my-2 px-3\">\n\n\n\n                </div>\n\n\n\n\n\n\n              </div>\n              <div className=\"col-xxl-12 col-xl-12 col-lg-12 col-md-6 col-sm-6 my-2 d-inline-flex  \">\n\n                {/* <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\">Vendor id</label>\n                <input\n              type=\"number\"\n              className=\"inputField col-12 mb-3\"\n              name=\"iVendorId\"\n              placeholder=\"Cost of Project\"\n              value={data.iVendorId}\n              onChange={handleChange}\n            />\n              </div> */}\n\n                {/* \n              <div className=\"col-6  my-2  px-3\">\n                <label htmlFor=\"\">Documents</label>\n                <input\n              type=\"file\"\n              className=\" col-12 mb-3\"\n              name=\"requiredprojectfiles\"\n              id=\"upload\"\n              accept=\"image/*\"\n              onChange={uploadimage}\n              multiple\n            />\n              </div> */}\n\n\n              </div>\n\n\n\n\n              <h3>Documents</h3>\n\n              <div className=\"col-xxl-12 col-xl-12 col-lg-12 col-md-6 col-sm-6 my-2 d-inline-flex  \">\n                <div className=\"col-6  my-2 px-3\">\n                  <label htmlFor=\"\">Document Title:</label>\n\n                  <br />\n                  <span className=\"inputField col-12 mb-3\">\n                    {data.vDocumentTitle}\n                  </span>\n                  {/* <br /> */}\n                  {/* <span className=\"text-primary\">Click to Download</span> */}\n\n                </div>\n\n                <div className=\"col-6  my-2 px-3\">\n                  <label htmlFor=\"\">Document Name:</label>\n                  <span className=\"text-primary m-2\">Click on file to view</span>\n\n                  {\n                    doc.map((e) => {\n                      // console.log(e, \"e is here\")\n\n                      // Documentname,Documenttitle\n                      return (\n\n                        <>\n\n                          <br />\n\n                          <a href={`${process.env.REACT_APP_APIURL}/${e.vdocumentName}`} target=\"_blank\" className=\"inputField col-12 mb-3\"> {e.vDocumentTitle}</a>\n\n                        </>\n                      )\n                    })\n                  }\n\n                </div>\n\n\n\n\n\n              </div>\n              {/* <button onClick={() => handleClickD(`${process.env.REACT_APP_APIURL}/project/${projectid}`,'sample')}>\n        Download the File</button> */}\n\n\n\n\n\n            </div>\n            <h5 style={{ color: \"green\", textAlign: \"center\" }}> {updated ? \"Updated Successfully\" : \"\"}</h5>\n            {isUpdate ? <button type=\"submit\" onClick={leadpost} className=\"mx-auto btn btn-outline-dark w-25\">\n              Update\n            </button> :\n              <button type=\"submit\" onClick={leadpost} disabled className=\"mx-auto btn btn-outline-dark w-25\">\n                Update\n              </button>\n            }\n            <button type=\"submit\" onClick={handleConvert} className=\"mx-auto bg-dark text-white btn btn-outline-dark w-25\">\n              Convert it to Project\n            </button>\n            {/* <Link to={\"/milestone/\"+`${projectid}`} className=\"mx-auto btn btn-outline-dark w-25\">\n            Create Milestone\n          </Link> */}\n\n          </div>\n        </div>\n      </div>\n    </>\n  )\n\n\n}\nexport default L_edit","/var/www/html/github/inhouse/src/pages/lead-project/l_project.jsx",["676","677","678","679","680","681","682","683","684","685","686","687","688","689","690","691","692","693","694","695","696","697","698","699","700","701","702","703","704","705","706","707","708","709","710","711","712","713","714","715","716","717","718","719","720","721"],[],"import React from \"react\";\nimport { useEffect,useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport Sidebar from \"../sidebar/sidebar\";\nimport axios from \"axios\";\nimport fileDownload from 'js-file-download'\nimport { Link } from \"react-router-dom\";\nimport { useForm } from 'react-hook-form';\n\n\n\nconst L_project =() =>{\n\n\n \n\n  const [error, setError] = useState({})\n\n  const[isUpdate,setIsUpdate] = useState(false)\n\n  const[converted, setconverted]= useState(false)\n\n\n\n \n\n    const navigate = useNavigate();\n    const [doc,setDoc] = useState([])\n\n  const [selectedFile, setSelectedFile] = useState();\n  // const [updateForm, SetUpdateForm] = useState({});\n  const { projectid,Leadid,inquiryid } = useParams();\n  // alert(Leadid)\n  // const { iProjectId } = useParams();\n\n  // const [milestone, setMilestone] = useState({\n  //   iProjectId: projectid,\n  // });\n  // alert(inquiryid);\n  const [data, setData] = useState({\n    iLeadid: Leadid,\n    iiInquiryId: localStorage.getItem\n  });\n\n  let handleChange = (e) => {\n    let name = e.target.name;\n    let value = e.target.value;\n    setData({ ...data, [name]: value });\n    // setIsUpdate(true)\n  };\n\n\n\n\n  const isvalid = (verificationdata) => {\n    let errors = {};\n\n    // if (\n    //   verificationdata.CompanyName == undefined ||\n    //   verificationdata.CompanyName == \"\"\n    // ) {\n    //   errors.CompanyName = \"Company name is Required\";\n    // } else if (\n    //   !/^([a-zA-Z]+\\s)*[a-zA-Z]+$/.test(verificationdata.CompanyName)\n    // ) {\n    //   errors.CompanyName = \"Company name is not valid \";\n    // }\n    if (\n      verificationdata.eTypeOfProject == undefined ||\n      verificationdata.eTypeOfProject == \"\"\n    ) {\n      errors.eTypeOfProject = \"Field should not be empty\";\n    }\n    if (\n      verificationdata.vTitleProject == undefined ||\n      verificationdata.vTitleProject == \"\"\n    ) {\n      errors.vTitleProject = \"Field should not be empty\";\n    }\n    if (\n      verificationdata.fCostOfProject == undefined ||\n      verificationdata.fCostOfProject == \"\"\n    ) {\n      errors.fCostOfProject = \"Field should not be empty\";\n    }\n    if (\n      verificationdata.vTechnology == undefined ||\n      verificationdata.vTechnology == \"\"\n    ) {\n      errors.vTechnology = \"Field should not be empty\";\n    }\n    if (\n      verificationdata.vHireResource == undefined ||\n      verificationdata.vHireResource == \"\"\n    ) {\n      errors.vHireResource = \"Field should not be empty\";\n    }\n    // if (\n    //   verificationdata.tNotes == undefined ||\n    //   verificationdata.tNotes == \"\"\n    // ) {\n    //   errors.tNotes = \"Field should not be empty\";\n    // }\n    if (\n      verificationdata.vExperienceRequired == undefined ||\n      verificationdata.vExperienceRequired == \"\"\n    ) {\n      errors.vExperienceRequired = \"Field should not be empty\";\n    }\n    if (\n      verificationdata.eStatus == undefined ||\n      verificationdata.eStatus == \"\"\n    ) {\n      errors.eStatus = \"Field should not be empty\";\n    }\n    if (\n      verificationdata.iVendorId == undefined ||\n      verificationdata.iVendorId == \"\"\n    ) {\n      errors.iVendorId = \"Field should not be empty\";\n    }\n    if (\n      verificationdata.dBillingCycleDate == undefined ||\n      verificationdata.dBillingCycleDate == \"\"\n    ) {\n      errors.dBillingCycleDate = \"Field should not be empty\";\n    }\n    if (\n      verificationdata.fHireBillingAmount == undefined ||\n      verificationdata.fHireBillingAmount == \"\"\n    ) {\n      errors.fHireBillingAmount = \"Field should not be empty\";\n    }\n    if (\n      verificationdata.dconvertedDate == undefined ||\n      verificationdata.dconvertedDate == \"\"\n    ) {\n      errors.dconvertedDate = \"Field should not be empty\";\n    }\n    if (\n      verificationdata.vHireDuration == undefined ||\n      verificationdata.vHireDuration == \"\"\n    ) {\n      errors.vHireDuration = \"Field should not be empty\";\n    }\n    if (\n      verificationdata.fProjectCost == undefined ||\n      verificationdata.fProjectCost == \"\"\n    ) {\n      errors.fProjectCost = \"Field should not be empty\";\n    }\n    if (\n      verificationdata.fAtCostResourceToVendor == undefined ||\n      verificationdata.fAtCostResourceToVendor == \"\"\n    ) {\n      errors.fAtCostResourceToVendor = \"Field should not be empty\";\n    }\n    if (\n      verificationdata.vHireMonthlyBudget == undefined ||\n      verificationdata.vHireMonthlyBudget == \"\"\n    ) {\n      errors.vHireMonthlyBudget = \"Field should not be empty\";\n    }\n\n    return errors;\n  };\n\n  useEffect(() => {\n    if (Object.keys(data).length != 0) {\n      setError(isvalid(data));\n    } else {\n      return;\n    }\n  }, [data]);\n\n  // alert(inquiryid);\n\n  const singleapi = async (Leadid) => {\n    // alert(Leadid)\n    const result = await fetch(\n      `${process.env.REACT_APP_APIURL}/lead/${Leadid}`,\n        {\n          method: \"get\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"Token\")}`,\n          },\n        }\n    );\n\n    localStorage.setItem(\"lead id\",Leadid)\n    const apiresponse = await result.json();\n    const check = apiresponse.leadsfound;\n    setData({ ...data, ...check[0] });\n    setDoc(check)\n    \n  };\n  useEffect(() => {\n    singleapi(Leadid);\n  }, []);\n  useEffect(() => {\n  }, [data]);\n  \n\n\n\n\n \n  const handelsubmit = (e) => {\n    e.preventDefault();\n\n    // alert(JSON.stringify(selectedFile));\n    // console.log(selectedFile);\n    // alert(\"in handle submit\");\n    const formData = new FormData();\n    if (selectedFile != undefined) {\n      \n      for (let i = 0; i < selectedFile.length; i++) {\n        formData.append(\"requiredprojectfiles\", selectedFile[i]);\n      }\n    }\n       formData.append(\"iLeadid\", Leadid);\n      formData.append(\"eTypeOfProject\", data.eTypeOfProject);\n      formData.append(\"vTitleProject\", data.vTitleProject);\n      formData.append(\"fCostOfProject\", data.fCostOfProject);\n      formData.append(\"vTechnology\", data.vTechnology);\n      formData.append(\"vHireResource\", data.vHireResource);\n      formData.append(\"iVendorId\", data.iVendorId);\n      formData.append(\"dBillingCycleDate\", data.dBillingCycleDate);\n      formData.append(\"fHireBillingAmount\", data.fHireBillingAmount);\n      formData.append(\"dconvertedDate\", data.dconvertedDate);\n      formData.append(\"fProjectCost\", data.fProjectCost);\n      formData.append(\"tNotes\", data.tNotes);\n      formData.append(\"vHireDuration\", data.vHireDuration);\n      formData.append(\"vHireMonthlyBudget\", data.vHireMonthlyBudget);\n      formData.append(\"vExperienceRequired\", data.vExperienceRequired);\n      formData.append(\"fAtCostResourceToVendor\", data.fAtCostResourceToVendor);\n      formData.append(\"eProjectStatus\", data.eProjectStatus);\n      formData.append(\"eStatus\", data.eStatus);\n\n      const token = localStorage.getItem(\"Token\");\n\n\n      const imageupdateapicall = async () => {\n        // alert(\"called image api\");\n        let callingurl = `${process.env.REACT_APP_APIURL}/projects`;\n        // console.log(callingurl);\n        const returneddetail = await axios({\n          method: \"post\",\n          url: callingurl,\n          data: formData,\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"Token\")}`,\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        });\n        // console.log(returneddetail);\n        setSelectedFile(undefined);\n        const respo = returneddetail.data;\n        const check = respo?.Message;\n        // alert(\"check\", JSON.stringify(check));\n\n       \n        setconverted(true)\n        setIsUpdate(false)\n      };\n      try {\n       \n          imageupdateapicall();\n       \n        \n      } catch (e) {\n        // alert(e)\n      }\n      setSelectedFile(null);\n    \n  };\n  const uploadimage = (e) => {\n    setSelectedFile(e.target.files);\n    // console.log(e.target.files);\n  };\n \n\n \n      \n      \n    \n\n \n\nconst handleBack=()=>{\n\n  if(converted){  \n\n    navigate(\"/lead_list\");\n  }\n  else{\n\n    navigate(\"/l_edit/\" + `${Leadid}`)\n  }\n}\n\nconst {\n  register,\n  handleSubmit,\n  formState: { errors },\n  setValue,\n  // setError,\n  control,\n} = useForm();\n\nuseEffect(()=>{\n  // console.log(error)\n      },[error])\n\n\n      if(converted){\n        window.onpopstate = () => {\n          navigate(\"/lead_list\");\n        }\n        \n      }\n      else{\n          \n      }\n\n      // const handleClose=()=>{\n      //   setModal(false)\n        \n      // }\n\n\n  \n\n    return(\n        <>\n\n\n<Sidebar IsSales={true}/> \n\n<div className='set'>\n\n      <div className=\"container my-3 body p-5\">\n      <button type=\"submit\" onClick={handleBack}  className=\"mx-auto bg-dark text-white btn btn-outline-dark w-25\">\n            Back\n          </button>\n        \n        \n      \n        <div className=\"row \">\n\n\n       \n\n       \n        <div className=\"col-12 text-center mb-2 \">\n            <h1 className=\"title\">Project</h1>\n          </div>\n\n          \n          <div>\n            <div className=\"col-xxl-12 col-xl-12 col-lg-6 col-md-12 col-sm-12 my-2 d-inline-flex \">\n              <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\" className=\"d-block\">\n                  Type of Project\n                </label>\n                    <select\n                    // {...register('eTypeOfProject', { required: true })}\n                    className=\"form-control rounded-pill mt-2\"\n              type=\"text\"\n              name=\"eTypeOfProject\"\n              placeholder=\"Type of Project\"\n              value={data.eTypeOfProject}\n              onChange={handleChange}\n              disabled\n            >\n              <option value=\"\">Select</option>\n              <option value=\"Hire\">Hire</option>\n              <option value=\"Project Basis\">Project Basis</option>\n              <option value=\"Fix Cost - Less than 2 weeks\">\n                Fix Cost - Less than 2 weeks\n              </option>\n            </select>\n            {data.eTypeOfProject===\"\"?errors.eTypeOfProject && <p className=\"error\">Type Of Project is required.</p>:\"\"}\n              </div>\n\n              <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\">Title</label>\n                {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vTitle\" value={inquiryform.vTitle} onChange={handleChange} placeholder=\"Inquiry Title\" /> */}\n                <input\n                  {...register('vTitleProject', { required: true })}\n                className=\"form-control rounded-pill mt-2\"\n              type=\"text\"\n              name=\"vTitleProject\"\n              placeholder=\"Project Title\"\n              value={data.vTitleProject}\n              onChange={handleChange}\n              disabled\n            />\n             {data.vTitleProject===\"\"?errors.vTitleProject && <p className=\"error\">Title Project is required.</p>:\"\"}\n              </div>\n            </div>\n            <div className=\"col-12 my-2 d-inline-flex \">\n              <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\" className=\"d-block\">\n                  Technology\n                </label>\n                {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vTechnology\" value={inquiryform.vTechnology} onChange={handleChange} placeholder=\"Inquiry Technology\" /> */}\n                <input\n                {...register('vTechnology', { required: true })}\n              type=\"text\"\n              className=\"form-control rounded-pill mt-2\"\n              name=\"vTechnology\"\n              placeholder=\"Technology\"\n              value={data.vTechnology}\n              onChange={handleChange}\n              disabled\n            />{data.vTechnology===\"\"?errors.vTechnology && <p className=\"error\">Technology is required.</p>:\"\"}\n              </div>\n\n\n              <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\">Hire Resource</label>\n                {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vSourceOfInquiry\" value={inquiryform.vSourceOfInquiry} onChange={handleChange} placeholder=\"Source of Inquiry\" /> */}\n                <input\n                  {...register('vHireResource', { required: true })}\n              type=\"text\"\n              className=\"form-control rounded-pill mt-2\"\n              name=\"vHireResource\"\n              placeholder=\"Hire Resource\"\n              value={data.vHireResource}\n              onChange={handleChange}\n              disabled\n              \n              />\n              {/* {data.vHireResource==\"\"?errors.vHireResource && <p className=\"error\">Hire Resource is required.</p>:\"\"} */}\n              </div>\n            </div>\n            <div className=\"col-xxl-12 col-xl-12 col-lg-12 col-md-6 col-sm-6 my-2 d-inline-flex  \">\n              <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\">Billing Date</label>\n                {/* <textarea className=\"inputField col-12 mb-3\" name=\"tDescription\" value={inquiryform.tDescription} onChange={handleChange} placeholder=\"Description\"></textarea> */}\n                <input\n                //  {...register('dBillingCycleDate', { required: true })}\n              type=\"date\"\n              className=\"form-control rounded-pill mt-2\"\n              name=\"dBillingCycleDate\"\n              placeholder=\"Billing Date\"\n              value={new Date(data.dBillingCycleDate).toLocaleDateString(\"en-CA\")}\n              onChange={handleChange}\n              disabled\n            />\n            {/* {data.dBillingCycleDate==\"\"?errors.dBillingCycleDate && <p className=\"error\">Billing Cycle Date is required.</p>:\"\"} */}\n              </div>\n\n              <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\">Billing Amount</label>\n                {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vHireDuration\" value={inquiryform.vHireDuration} onChange={handleChange} placeholder=\"Hire Duration\" /> */}\n                <input\n                //  {...register('fHireBillingAmount', { required: true })}\n              type=\"number\"\n              className=\"form-control rounded-pill mt-2\"\n              name=\"fHireBillingAmount\"\n              placeholder=\"Billing Amount\"\n              value={data.fHireBillingAmount}\n              onChange={handleChange}\n              disabled\n              />\n              {/* {data.fHireBillingAmount==\"\"?errors.fHireBillingAmount && <p className=\"error\">Billing Amount is required.</p>:\"\"} */}\n              </div>\n            </div>\n            <div className=\"col-xxl-12 col-xl-12 col-lg-12 col-md-6 col-sm-6 my-2 d-inline-flex  \">\n              <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\">Converted Date</label>\n                {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vHireMonthlyBudget\" value={inquiryform.vHireMonthlyBudget} onChange={handleChange} placeholder=\"Hire Monthly Budget\" /> */}\n                <input\n                //  {...register('dconvertedDate', { required: true })}\n              type=\"date\"\n              className=\"form-control rounded-pill mt-2\"\n              name=\"dconvertedDate\"\n              placeholder=\"Converted Date\"\n              value={new Date(data.dconvertedDate).toLocaleDateString(\"en-CA\")}\n              onChange={handleChange}\n              disabled\n            />\n            {/* {data.dconvertedDate==\"\"?errors.dconvertedDate && <p className=\"error\">Converted Date is required.</p>:\"\"} */}\n              </div>\n\n              <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\">Project Cost</label>\n                {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vExperienceRequired\" value={inquiryform.vExperienceRequired} onChange={handleChange} placeholder=\"Experience Required\" /> */}\n                <input\n                //  {...register('fProjectCost', { required: true })}\n              type=\"number\"\n              className=\"form-control rounded-pill mt-2\"\n              name=\"fProjectCost\"\n              placeholder=\"Project Cost\"\n              value={data.fProjectCost}\n              onChange={handleChange}\n              disabled\n            />\n            {/* {data.fProjectCost==\"\"?errors.fProjectCost && <p className=\"error\">Project Cost is required.</p>:\"\"} */}\n              </div>\n            </div>\n\n\n\n            <div className=\"col-xxl-12 col-xl-12 col-lg-12 col-md-6 col-sm-6 my-2 d-inline-flex  \">\n            <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\">Cost of Project</label>\n                {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vExperienceRequired\" value={inquiryform.vExperienceRequired} onChange={handleChange} placeholder=\"Experience Required\" /> */}\n                <input\n                //  {...register('fCostOfProject', { required: true })}\n              type=\"number\"\n              className=\"form-control rounded-pill mt-2\"\n              name=\"fCostOfProject\"\n              placeholder=\"Cost of Project\"\n              value={data.fCostOfProject}\n              onChange={handleChange}\n              disabled\n            />\n            {/* {data.fCostOfProject==\"\"?errors.fCostOfProject && <p className=\"error\">Cost Of Project is required.</p>:\"\"} */}\n              </div>\n\n              <div className=\"col-6  my-2 px-3\">\n              <label htmlFor=\"\">Monthly Budget</label>\n                <input\n                //  {...register('vHireMonthlyBudget', { required: true })}\n              type=\"number\"\n              className=\"form-control rounded-pill mt-2\"\n              name=\"vHireMonthlyBudget\"\n              placeholder=\"Cost of Project\"\n              value={data.vHireMonthlyBudget}\n              onChange={handleChange}\n              disabled\n            />\n            {/* {data.vHireMonthlyBudget==\"\"?errors.vHireMonthlyBudget && <p className=\"error\">Hire Monthly Budget is required.</p>:\"\"} */}\n                {/* <label htmlFor=\"\">Notes</label>\n                <input\n              type=\"text\"\n              className=\"inputField col-12 mb-3\"\n              name=\"tNotes\"\n              placeholder=\"Notes\"\n              value={data.tNotes}\n              onChange={handleChange}\n            /> */}\n              </div>\n            </div>\n\n\n\n           \n\n\n            <div className=\"col-xxl-12 col-xl-12 col-lg-12 col-md-6 col-sm-6 my-2 d-inline-flex  \">\n            <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\">Experienced Required</label>\n                {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vExperienceRequired\" value={inquiryform.vExperienceRequired} onChange={handleChange} placeholder=\"Experience Required\" /> */}\n                <input\n                //  {...register('vExperienceRequired', { required: true })}\n              type=\"text\"\n              className=\"form-control rounded-pill mt-2\"\n              name=\"vExperienceRequired\"\n              placeholder=\"Cost of Project\"\n              value={data.vExperienceRequired}\n              onChange={handleChange}\n              disabled\n            />\n            {/* {data.vExperienceRequired==\"\"?errors.vExperienceRequired && <p className=\"error\">Experience Required is required.</p>:\"\"} */}\n              </div>\n              <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\">Cost of Resource</label>\n                {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vExperienceRequired\" value={inquiryform.vExperienceRequired} onChange={handleChange} placeholder=\"Experience Required\" /> */}\n                <input\n                //  {...register('fAtCostResourceToVendor', { required: true })}\n              type=\"number\"\n              className=\"form-control rounded-pill mt-2\"\n              name=\"fAtCostResourceToVendor\"\n              placeholder=\"Cost of Project\"\n              value={data.fAtCostResourceToVendor}\n              onChange={handleChange}\n              disabled\n            />\n            {/* {data.fAtCostResourceToVendor==\"\"?errors.fAtCostResourceToVendor && <p className=\"error\">Cost Resource To Vendor Required is required.</p>:\"\"} */}\n              </div>\n\n             \n            </div>\n\n\n            <div className=\"col-xxl-12 col-xl-12 col-lg-12 col-md-6 col-sm-6 my-2 d-inline-flex  \">\n            <div className=\"col-6  my-2 px-3\">\n            <label htmlFor=\"\">Hire Duration</label>\n                <input\n                //  {...register('vHireDuration', { required: true })}\n              type=\"text\"\n              className=\"form-control rounded-pill mt-2\"\n              name=\"vHireDuration\"\n              placeholder=\"Cost of Project\"\n              value={data.vHireDuration}\n              onChange={handleChange}\n              disabled\n            />\n            {/* {data.vHireDuration==\"\"?errors.vHireDuration && <p className=\"error\">Cost of Project Required is required.</p>:\"\"} */}\n                {/* <label htmlFor=\"\">Project Status</label>\n                <select\n                    className=\"formcontrol d-block dropdownWidth mb-3\"\n              type=\"text\"\n              name=\"eProjectStatus\"\n              placeholder=\"Type of Project\"\n              value={data.eProjectStatus}\n              onChange={handleChange}\n            >\n              <option value=\"\">Select</option>\n              <option value=\"Inquiry\">Inquiry</option>\n              <option value=\"Lead\">Lead</option>\n              <option value=\"Project\">Project</option>\n             \n            </select> */}\n              </div>\n              <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\">Status</label>\n                {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vExperienceRequired\" value={inquiryform.vExperienceRequired} onChange={handleChange} placeholder=\"Experience Required\" /> */}\n                <select\n                // {...register('eStatus', { required: true })}\n                    className=\"form-control rounded-pill mt-2\"\n              type=\"text\"\n              name=\"eStatus\"\n              placeholder=\"Type of Project\"\n              value={data.eStatus}\n              onChange={handleChange}\n              disabled\n            >\n              <option value=\"\">Select</option>\n              <option value=\"Converted\">Converted</option>\n              <option value=\"InProgress\">InProgress</option>\n              <option value=\"Cancelled\">Cancelled</option>\n              <option value=\"Rejected\">Rejected</option>\n              <option value=\"OnHold\">OnHold</option>\n              <option value=\"No Response From Client\">No Response From Client</option>\n              \n              \n            </select>\n            {/* {data.eStatus==\"\"?errors.eStatus && <p className=\"error\">Status Required is required.</p>:\"\"} */}\n              </div>\n\n             \n            </div>\n\n            \n\n\n\n            <div className=\"col-xxl-12 col-xl-12 col-lg-12 col-md-6 col-sm-6 my-2 d-inline-flex  \">\n            {/* <div className=\"col-6  my-2 px-3\">\n          \n             <label htmlFor=\"\">Document:</label><br />\n                <input\n            type=\"file\"\n            className=\"form-control rounded-pill mt-2\"\n            name=\"requiredprojectfiles\"\n            id=\"upload\"\n            accept=\"image/*\"\n             onChange={uploadimage}\n            multiple\n            disabled\n          />\n              </div> */}\n              \n              <div className=\"col-6  my-2 px-3\">\n             \n\n             \n              </div>\n              \n\n             \n\n             \n             \n            </div>\n            <div className=\"col-xxl-12 col-xl-12 col-lg-12 col-md-6 col-sm-6 my-2 d-inline-flex  \">\n          \n            {/* <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\">Vendor id</label>\n                <input\n              type=\"number\"\n              className=\"inputField col-12 mb-3\"\n              name=\"iVendorId\"\n              placeholder=\"Cost of Project\"\n              value={data.iVendorId}\n              onChange={handleChange}\n            />\n              </div> */}\n           \n{/* \n              <div className=\"col-6  my-2  px-3\">\n                <label htmlFor=\"\">Documents</label>\n                <input\n              type=\"file\"\n              className=\" col-12 mb-3\"\n              name=\"requiredprojectfiles\"\n              id=\"upload\"\n              accept=\"image/*\"\n              onChange={uploadimage}\n              multiple\n            />\n              </div> */}\n\n             \n            </div>\n           \n\n\n\n            <h3>Documents</h3>\n           \n            <div className=\"col-xxl-12 col-xl-12 col-lg-12 col-md-6 col-sm-6 my-2 d-inline-flex  \">\n              <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\">Document Title:</label>\n\n                <br />\n                 <span  className=\"inputField col-12 mb-3\">\n                {data.vDocumentTitle}\n              </span>\n              {/* <br /> */}\n               {/* <span className=\"text-primary\">Click to Download</span> */}\n               \n              </div>\n\n              <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\">Document Name:</label>\n                <span className=\"text-primary m-2\">Click on file to view</span>\n\n                {\n  doc.map((e)=>{\n// console.log(e,\"e is here\")\n\n// Documentname,Documenttitle\nreturn (\n  \n  <>\n   \n <br />\n \n  <a href={`${process.env.REACT_APP_APIURL}/${e.vdocumentName}`} target=\"_blank\" className=\"inputField col-12 mb-3\"> {e.vDocumentTitle}</a>\n  \n  </>\n)\n  })\n}\n\n              </div>\n\n\n          \n\n\n        </div> \n            {/* <button onClick={() => handleClickD(`${process.env.REACT_APP_APIURL}/project/${projectid}`,'sample')}>\n        Download the File</button> */}\n\n          \n\n          \n         \n          </div>\n\n          {/* <button type=\"submit\" onClick={inquiryData}  className=\"mx-auto btn btn-outline-dark w-25\">\n            Update\n          </button> */}\n           <h5 style={{ color: \"green\", textAlign: \"center\" }}> {converted ? \"Converted Successfully\" : \"\"}</h5>\n         {converted? <button type=\"submit\" disabled  onClick={handelsubmit} className=\"mx-auto bg-dark text-white btn btn-outline-dark w-25\">\n            Convert \n          </button>:\n          <button type=\"submit\"  onClick={handelsubmit} className=\"mx-auto bg-dark text-white btn btn-outline-dark w-25\">\n            Convert \n          </button>\n        }\n\n          {/* <Link to={\"/milestone/\"+`${projectid}`} className=\"mx-auto btn btn-outline-dark w-25\">\n            Create Milestone\n          </Link> */}\n\n            </div>\n            {/* {modal?\n        <>\n  \n \n  <div className='modal_'>\n        <div className='modalBody'>\n          \n        {message}\n\n          <div className=\"modal-button\">\n            <button className=\"modal-btn\"  onClick={handleClose}>Ok</button>\n          </div>\n        </div>\n    \n    </div>\n        </>\n\n        :\"\"} */}\n            </div>\n            </div>\n        </>\n    )\n\n\n}\nexport default L_project","/var/www/html/github/inhouse/src/pages/c_module/c_module.jsx",["722","723","724"],[],"import React from \"react\";\nimport { useState,useEffect } from \"react\";\nimport { Navigate, useNavigate, useParams } from \"react-router-dom\";\nimport Sidebar from \"../sidebar/sidebar\";\nimport { useForm } from 'react-hook-form';\n\n\nconst CModule=()=>{\nconst navigate = useNavigate()\n  const{milestoneid,projectid} = useParams()\n  const[created,setCreated] = useState(false)\n  // alert(milestoneid)\n  const[message, setMessage] = useState(false)\n\n    const [data,setData] = useState({\n      imilestone_id:milestoneid\n    })\n   \n\n\n\n\n   \n    \n      const hadlechange = (e) => {\n        let objname = e.target?.name;\n        let value = e.target?.value;\n        setData({ ...data, [objname]: value });\n        setCreated(true)\n      };\n    \n    \n      const modulecall = async (e) => {\n       \n    \n        const responseapi = await fetch(\n          `${process.env.REACT_APP_APIURL}/module`,\n    \n          {\n            method: \"post\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${localStorage.getItem(\"Token\")}`,\n            },\n            body: JSON.stringify(data),\n          }\n        );\n    \n        let check = await responseapi.json();\n        // console.log(check)\n        setCreated(false)\n        if(check.Success == 1)\n        {\n          // setModal(true)\n          setMessage(\"Module Created\")\n        }\n        else{\n          // setModal(true)\n          setMessage(check.message)\n        }    \n      \n      };\n      useEffect(() => {\n      }, [data]);\n  \n     \n// const handleBack=()=>{\n//   onClick={() => navigate(-1)}\n// }\n\nconst {\n  register,\n  handleSubmit,\n  formState: { errors },\n} = useForm();\n\n    return(\n        <>\n\n\n<Sidebar IsSales={true}/>\n\n<div>\n<div className=\"set\">\n\n      <div className=\"Milebody\">\n      \n        <div className=\"container my-3 p-5\">\n        <button type=\"submit\" onClick={() => navigate(-1)}  className=\"mx-auto bg-dark text-white btn btn-outline-dark w-25\">\n            Back\n          </button>\n          <div className=\"row \">\n            <div className=\"col-12 text-center mb-2\">\n              <h1 className=\"title\">Module</h1>\n              <h5 className=\"mess\"> {message}</h5>\n            </div>\n\n            <div className=\"col-xxl-12 col-xl-12 col-lg-6 col-md-12 col-sm-12 my-3 \">\n            <div className=\"col-6 my-2 px-3 mx-auto\">\n                {/* <label htmlFor=\"\">Milestone</label> */}\n               {/* <select name=\"\" id=\"\" className=\"form-control rounded-pill mt-2\">\n                <option value=\"\">Select</option>\n               </select> */}\n              </div>\n            \n              <div className=\"col-6 my-2 px-3 mx-auto\">\n                <label htmlFor=\"\">Module Name</label>\n                {/* <input type=\"text\" className=\"inputField col-12 mb-3\" /> */}\n                <input\n                {...register('module_name', { required: true })}\n              type=\"text\"\n              className=\"form-control rounded-pill mt-2\"\n              placeholder=\"module name\"\n              name=\"module_name\"\n              value={data.module_name}\n              onChange={hadlechange}\n            />\n            {errors.module_name && <p className=\"error\">Module Name is required.</p>}\n              </div>\n              <div className=\"col-6 my-2 px-3 mx-auto\">\n                <label htmlFor=\"\">Estimated Time</label>\n                {/* <input type=\"date\" className=\"txt-area col-12 mb-3\" /> */}\n                <input\n                {...register('estimated_time', { required: true })}\n              type=\"text\"\n              className=\"form-control rounded-pill mt-2\"\n              name=\"estimated_time\"\n              placeholder=\"time\"\n              value={data.estimated_time}\n              onChange={hadlechange}\n            />\n            {errors.estimated_time && <p className=\"error\">Estimated Time is required.</p>}\n              </div>\n             \n            \n              \n\n              \n            </div>\n         {created?   <button\n                type=\"submit\"\n                onClick={handleSubmit(modulecall)}\n              value=\"Register\"\n                className=\"mx-auto btn btn-outline-dark w-25\"\n              >\n                Submit\n              </button>:\n               <button\n               type=\"submit\"\n               onClick={handleSubmit(modulecall)}\n             value=\"Register\"\n               className=\"mx-auto btn btn-outline-dark w-25\"\n               disabled\n             >\n               Submit\n             </button>\n              \n              }\n          </div>\n        </div>\n      </div>\n    </div>\n    </div>\n\n\n        \n        </>\n    )\n\n}\nexport default CModule","/var/www/html/github/inhouse/src/pages/milestones/m_list.jsx",["725","726","727","728","729","730","731"],[],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport Sidebar from \"../sidebar/sidebar\";\nimport { Link } from \"react-router-dom\";\nimport \"./m_list.css\"\nconst M_List=()=>{\n\n    const navigate = useNavigate()\n\n    const {projectid} = useParams()\n// localStorage.setItem(\"iprojectid\")\n    const [data,setData] = useState([{\n        // iProjectId:projectid\n    }])\n\n\n    const listapi = async () => {\n        // alert(projectid)\n        const result = await fetch(`${process.env.REACT_APP_APIURL}/milestone/${projectid}`, {\n          method: \"get\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"Token\")}`,\n          },\n        });\n    \n       \n        \n        const apiresponse = await result.json();\n       \n        const apicheck = apiresponse?.Message;\n        \n      \n        setData(apicheck);\n        \n      };\n    \n      useEffect(() => {\n        listapi();\n        \n      }, []);\n    \n      useEffect(() => {\n        // console.log(data[0].projecttitle)\n        // console.log(data);\n      }, [data]);\n\n      const handleBack=()=>{\n        navigate(\"/p_edit/\"+`${projectid}`)\n      }\n\n     \n\n    return(\n        <>\n\n\n\n\n<Sidebar IsSales={true}/>\n\n<div className='set'>\n  <div className=\"container my-3 body p-5\">\n  <h1 className=\"logo text-center\">Milestones ({data[0]?.projecttitle})</h1>\n    \n  <button type=\"submit\" onClick={handleBack}  className=\"my-2 bg-dark text-white btn btn-outline-dark w-25\">\n            Back to Project\n          </button>\n    \n          <Link to={\"/milestone/\"+`${projectid}`} className=\"mx-auto bg-dark text-white btn btn-outline-dark w-25 toright\">\n            Create Milestone\n          </Link>\n         \n        \n    <div className=\"row \"></div>\n<div><table class=\"table\">\n<thead class=\"thead-dark\">\n  <tr>\n    {/* <th scope=\"col\">#</th> */}\n    <th scope=\"col\">Title</th>\n    <th scope=\"col\">Created on</th>\n    <th scope=\"col\">Last Date</th>\n    <th scope=\"col\">Amount</th>\n    <th scope=\"col\">Notes</th>\n    <th scope=\"col\">Status</th>\n    <th scope=\"col\">Edit</th>\n    <th scope=\"col\">Modules</th>\n    <th scope=\"col\">Progress</th>\n  </tr>\n</thead>\n\n\n<tbody>\n            {data.length>0?data.map((e) => {\n              console.log(e);\n              return (\n                <tr>\n                  {/* {new Date(data.dDeadlineDate).toLocaleDateString(\"en-CA\")} */}\n                  <td data-column=\"First Name\">{e.vTitleofMilestone}</td>\n                  <td data-column=\"Last Name\">{new Date(e.dCreateddate).toLocaleDateString(\"en-ca\")}</td>\n                  <td data-column=\"Last Name\">{new Date(e.dDeadlineDate).toLocaleDateString(\"en-CA\")}</td>\n                  <td data-column=\"Job Title\">{e.fAmount}</td>\n                  <td data-column=\"Twitter\">{e.tNotes}</td>\n                  {e.eStatus==\"Active\" ? <td className=\"Active\" data-column=\"Twitter\">{e.eStatus}</td>:\"\"}\n                  {e.eStatus==\"Inactive\" ? <td className=\"Inactive\" data-column=\"Twitter\">{e.eStatus}</td>:\"\"}\n                 {/* {e.eStatus==\"Converted\" ?<td className=\"Converted\" data-column=\"Status\">{e.eStatus}</td>:\"\"}\n                 {e.eStatus==\"InProgress\" ?<td className=\"Inprogress\" data-column=\"Status\">{e.eStatus}</td>:\"\"}\n                 {e.eStatus==\"Cancelled\" ?<td className=\"Cancelled\" data-column=\"Status\">{e.eStatus}</td>:\"\"}\n                 {e.eStatus==\"Rejected\" ?<td className=\"Rejected\" data-column=\"Status\">{e.eStatus}</td>:\"\"}\n                 {e.eStatus==\"OnHold\" ?<td className=\"OnHold\" data-column=\"Status\">{e.eStatus}</td>:\"\"}\n                 {e.eStatus==\"No Response From Client\" ?<td className=\"NoResponse\" data-column=\"Status\">{e.eStatus}</td>:\"\"} */}\n                  {/* <Link to={\"/medit/\" + `${e.id}`}> */}\n                  <td data-column=\"Status\">\n                  <Link to={\"/medit/\" +projectid+\"/\"+ `${e.id}`}>\n                    {\" \"}\n                   <button className=\"btn\">Edit</button>\n                  </Link>\n                  </td>\n                  <td data-column=\"Status\">\n                  <Link to={\"/modlist/\" + `${e.id}`}>\n                    {\" \"}\n                   <button className=\"btn\">Modules</button>\n                  </Link>\n                  </td>\n                  <td data-column=\"Twitter\">{Math.ceil( e.suceesrate) + \"%\"}</td>\n                </tr>\n              );\n            }):\"\"}\n          </tbody>\n\n</table>\n\n</div>\n</div>\n</div>\n        </>\n    )\n\n}\nexport default M_List","/var/www/html/github/inhouse/src/pages/modules/mod_list.jsx",["732","733","734","735","736"],[],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport Sidebar from \"../sidebar/sidebar\";\nimport { Link } from \"react-router-dom\";\nimport \"./mod_list.css\"\nconst Mod_List=()=>{\n\n    const navigate = useNavigate()\n\n    const {milestoneid,moduleid} = useParams()\n\n    const [data,setData] = useState([{\n    }])\n\n\n    const listapi = async () => {\n        const result = await fetch(`${process.env.REACT_APP_APIURL}/module/${milestoneid}`, {\n          method: \"get\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"Token\")}`,\n          },\n        });\n    \n       \n        \n        const apiresponse = await result.json();\n       \n        const apicheck = apiresponse?.milestoneslist;\n      console.log(apicheck)\n        setData(apicheck);\n        \n      };\n    \n      useEffect(() => {\n        listapi();\n        \n      }, []);\n    \n      useEffect(() => {\n        // console.log(data);\n        // console.log(data[0])\n      }, [data]);\n\n    //   const handleBack=()=>{\n    //     navigate(\"/p_edit/\"+`${projectid}`)\n    //   }\n\n    return(\n        <>\n\n\n\n\n<Sidebar IsSales={true}/>\n\n<div className='set'>\n  <div className=\"container my-3 body p-5\">\n  <h1 className=\"logo text-center\">Modules ({data[0].project_title})</h1>\n  <div className=\"d-flex justify-content-between\">\n  <button type=\"submit\" onClick={() => navigate(-1)}  className=\" bg-dark text-white btn btn-outline-dark w-25\">\n            Go Back\n          </button>\n          <Link to={\"/cmodule/\"+`${milestoneid}`} className=\" bg-dark text-white btn btn-outline-dark w-25\">\n            Create Module\n          </Link> \n          </div>\n  {/* <button type=\"submit\" onClick={handleBack}  className=\"my-2 bg-dark text-white btn btn-outline-dark w-25\">\n            Back to Project\n          </button> */}\n    \n          \n         \n        \n    <div className=\"row \"></div>\n<div><table class=\"table\">\n<thead class=\"thead-dark\">\n  <tr>\n    {/* <th scope=\"col\">#</th> */}\n    <th scope=\"col\">Id</th>\n    <th scope=\"col\">Name</th>\n    <th scope=\"col\">Estimated Time</th>\n    <th scope=\"col\">Priority</th>\n    {/* <th scope=\"col\">Last Date</th>\n    <th scope=\"col\">Amount</th>\n    <th scope=\"col\">Notes</th>*/}\n    <th scope=\"col\">Status</th>\n    <th scope=\"col\">Edit</th> \n    <th scope=\"col\">Task</th> \n    <th scope=\"col\">Progress</th>\n  </tr>\n</thead>\n\n\n<tbody>\n            {data?.map((e,index) => {\n              // console.log(e);\n              return (\n                <tr>\n                  <td data-column=\"First Name\">{index+1}</td>\n                  <td data-column=\"Last Name\">{e.module_name}</td>\n                  <td data-column=\"Last Name\">{e.estimated_time}</td>\n                  <td data-column=\"Last Name\">{e.priority}</td>\n                  <td data-column=\"Last Name\">{e.estatus}</td>\n                  {/* <td data-column=\"Last Name\">{e.dDeadlineDate}</td>\n                  <td data-column=\"Job Title\">{e.fAmount}</td>\n                  <td data-column=\"Twitter\">{e.tNotes}</td>\n                  {e.eSttaus==\"Active\" ? <td className=\"Active\" data-column=\"Twitter\">{e.eSttaus}</td>:\"\"}\n                  {e.eSttaus==\"Inactive\" ? <td className=\"Inactive\" data-column=\"Twitter\">{e.eSttaus}</td>:\"\"} */}\n                  <td data-column=\"Status\">\n                  <Link to={\"/modedit/\" + `${e.moduleid}`}>\n                    {\" \"}\n                     <button className=\"btn\">Edit</button>\n                  </Link>\n                  </td>\n                  <td>\n                  <Link to={\"/task_list/\" + `${e.moduleid}`}>\n                  <button className=\"btn\">Tasks</button>\n                  </Link>\n                  </td>\n                  <td data-column=\"Last Name\">{Math.ceil( e.succespercent) + \"%\"}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n\n</table>\n\n</div>\n</div>\n</div>\n        </>\n    )\n\n}\nexport default Mod_List","/var/www/html/github/inhouse/src/pages/task_list/tasklist.jsx",["737","738","739","740"],[],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport Sidebar from \"../sidebar/sidebar\";\nimport { Link } from \"react-router-dom\";\n// import \"./mod_list.css\"\nconst Task_List=()=>{\n\n    const navigate = useNavigate()\n\n    const {milestoneid,moduleid} = useParams()\n\n    const [data,setData] = useState([{\n    }])\n\n\n    const listapi = async () => {\n        const result = await fetch(`${process.env.REACT_APP_APIURL}/task/${moduleid}`, {\n          method: \"get\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"Token\")}`,\n          },\n        });\n    \n       \n        \n        const apiresponse = await result.json();\n       \n        const apicheck = apiresponse?.tasklist;\n      // console.log(apicheck)\n        setData(apicheck);\n        \n      };\n    \n      useEffect(() => {\n        listapi();\n        \n      }, []);\n    \n      useEffect(() => {\n        // console.log(data);\n      }, [data]);\n\n    //   const handleBack=()=>{\n    //     navigate(\"/p_edit/\"+`${projectid}`)\n    //   }\n\n    return(\n        <>\n\n\n\n\n<Sidebar IsSales={true}/>\n\n<div className='set'>\n  <div className=\"container my-3 body p-5\">\n  <h1 className=\"logo text-center\">Tasks</h1>\n  <div className=\"d-flex justify-content-between\">\n  <button type=\"submit\" onClick={() => navigate(-1)}  className=\" bg-dark text-white btn btn-outline-dark w-25\">\n            Go Back\n          </button>\n          <Link to={\"/ctask/\"+`${moduleid}`} className=\" bg-dark text-white btn btn-outline-dark w-25\">\n            Create Task\n          </Link> \n          </div>\n  {/* <button type=\"submit\" onClick={handleBack}  className=\"my-2 bg-dark text-white btn btn-outline-dark w-25\">\n            Back to Project\n          </button> */}\n    \n          \n         \n        \n    <div className=\"row \"></div>\n<div><table class=\"table\">\n<thead class=\"thead-dark\">\n  <tr>\n    {/* <th scope=\"col\">#</th> */}\n    <th scope=\"col\">Id</th>\n    <th scope=\"col\">Assigned To</th>\n    <th scope=\"col\">Task Name</th>\n    <th scope=\"col\">Estimated Time</th>\n    {/* <th scope=\"col\">Priority</th> */}\n    {/* <th scope=\"col\">Last Date</th>\n    <th scope=\"col\">Amount</th>\n    <th scope=\"col\">Notes</th>*/}\n    <th scope=\"col\">Status</th>\n    <th scope=\"col\">Edit</th> \n    {/* <th scope=\"col\">Task</th>  */}\n    {/* <th scope=\"col\">Progress</th> */}\n  </tr>\n</thead>\n\n\n<tbody>\n            {data?.map((e,index) => {\n              // console.log(e);\n              return (\n                <tr>\n                  <td data-column=\"First Name\">{index+1}</td>\n                  <td data-column=\"Last Name\">{e.vname}</td>\n                  <td data-column=\"Last Name\">{e.task_name}</td>\n                  <td data-column=\"Last Name\">{e.task_estimated_time}</td>\n                  <td data-column=\"Last Name\">{e.estatus}</td>\n                  {/* <td data-column=\"Last Name\">{e.dDeadlineDate}</td>\n                  <td data-column=\"Job Title\">{e.fAmount}</td>\n                  <td data-column=\"Twitter\">{e.tNotes}</td>\n                  {e.eSttaus==\"Active\" ? <td className=\"Active\" data-column=\"Twitter\">{e.eSttaus}</td>:\"\"}\n                  {e.eSttaus==\"Inactive\" ? <td className=\"Inactive\" data-column=\"Twitter\">{e.eSttaus}</td>:\"\"} */}\n                  <td data-column=\"Status\">\n                  <Link to={\"/task_edit/\" + `${e.id}`}>\n                    {\" \"}\n                     <button className=\"btn\">Edit</button>\n                  </Link>\n                  </td>\n                  {/* <td>\n                  <Link to={\"/ctask/\" + `${e.moduleid}`}>\n                  <button className=\"btn\">Add Task</button>\n                  </Link>\n                  </td> */}\n                  {/* <td data-column=\"Last Name\">{e.succespercent + \"%\"}</td> */}\n                </tr>\n              );\n            })}\n          </tbody>\n\n</table>\n\n</div>\n</div>\n</div>\n        </>\n    )\n\n}\nexport default Task_List","/var/www/html/github/inhouse/src/pages/m_edit/m_edit.jsx",["741","742","743","744","745","746","747","748","749","750","751","752","753","754","755","756","757","758","759","760","761"],[],"import React from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport Sidebar from \"../sidebar/sidebar\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { useForm } from 'react-hook-form';\n\n\n\nconst M_edit =()=>{\n\n\nconst[isUpdate,setIsUpdate] = useState(false)\n  const[updated, setUpdated]= useState(false)\n  const [error, setError] = useState({})\n  const {projectid,milestoneid} = useParams()\n  // alert(milestoneid+projectid)\n    const navigate = useNavigate();\n    const [data, setData] = useState({\n\n    });     \n\n  \n    let handleChange = (e) => {\n      let name = e.target.name;\n      let value = e.target.value;\n      setData({ ...data, [name]: value });\n      setIsUpdate(true)\n    };\n\n\n\n    const isvalid = (verificationdata) => {\n      let errors = {};\n     \n      // if (\n      //   verificationdata.CompanyName == undefined ||\n      //   verificationdata.CompanyName == \"\"\n      // ) {\n      //   errors.CompanyName = \"Company name is Required\";\n      // } else if (\n      //   !/^([a-zA-Z]+\\s)*[a-zA-Z]+$/.test(verificationdata.CompanyName)\n      // ) {\n      //   errors.CompanyName = \"Company name is not valid \";\n      // }\n      if (\n        verificationdata.vTitleofMilestone == undefined ||\n        verificationdata.vTitleofMilestone == \"\"\n      ) {\n        errors.vTitleofMilestone = \"Field should not be empty\";\n      } \n      if (\n        verificationdata.dDeadlineDate == undefined ||\n        verificationdata.dDeadlineDate == \"\"\n      ) {\n        errors.dDeadlineDate = \"Field should not be empty\";\n      } \n      if (\n        verificationdata.fAmount == undefined ||\n        verificationdata.fAmount == \"\"\n      ) {\n        errors.fAmount = \"Field should not be empty\";\n      } \n      if (\n        verificationdata.tNotes == undefined ||\n        verificationdata.tNotes == \"\"\n      ) {\n        errors.tNotes = \"Field should not be empty\";\n      } \n      if (\n        verificationdata.eStatus == undefined ||\n        verificationdata.eStatus == \"\"\n      ) {\n        errors.eStatus = \"Field should not be empty\";\n      } \n     \n      \n    \n      return errors;\n    };\n\n\n    useEffect(() => {\n      if (Object.keys(data).length != 0) {\n        setError(isvalid(data));\n      } else {\n        return;\n      }\n    }, [data]);\n  \n    const mileapi = async () => {\n      const result = await fetch(\n        `${process.env.REACT_APP_APIURL}/milestone/milestones/${milestoneid}`,\n        {\n          method: \"get\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"Token\")}`,\n          },\n        }\n      );\n      const apiresponse = await result.json();\n      const check = apiresponse.Message;\n      setData({ ...data, ...check[0] });\n      // console.log(check);\n    };\n  \n   \n  \n   \n  \n    useEffect(() => {\n        mileapi();\n    }, []);\n  \n    useEffect(() => {\n    }, [data]);\n\n\n\n\n    const milestoneData = (e) => {\n      const alloweditms=[\"iprojectid\",\"vTitleofMilestone\",\"dDeadlineDate\",\"fAmount\",\n      \"tNotes\",\n      \"eSttaus\",\n      \"iAccountHolderId\"]\n         \n          const apicall = () => {\n          // console.log(data)\n          // {}\n          // delete data.id\n          // delete data.dCreateddate\n          // Object.keys(data)\n              const apidata = axios({\n                  method: \"put\",\n                  url: `${process.env.REACT_APP_APIURL}/milestone/${milestoneid}`,\n                  data: data,\n                  headers: {\n                      Authorization: `Bearer ${localStorage.getItem(\"Token\")}`,\n                      \"Content-Type\": \"application/json\",\n                  },\n              })\n              // console.log(apidata);\n              const respo = apidata.data;\n              const check = respo?.Message;\n              setUpdated(true)\n              setIsUpdate(false)\n          };\n          try {\n            if(isUpdate && Object.keys(error).length==0){\n              apicall();\n            }\n          } catch (e) {\n          }\n  }\n  \n  \n  const handleBack=()=>{\n    navigate(\"/mlist/\" + `${projectid}`)\n  }\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    control,\n  } = useForm();\n\n\n  useEffect(()=>{\n    // console.log(error)\n        },[error])\n\n    return(\n        <>\n\n\n\n<>\n\n<Sidebar IsSales={true}/>\n\n<div>\n<div className=\"set\">\n\n<div className=\"Milebody\">\n\n<div className=\"container my-3 p-5\">\n<button type=\"submit\"  onClick={handleBack} className=\"mx-auto bg-dark text-white btn btn-outline-dark w-25\">\n    Back\n  </button>\n  <div className=\"row \">\n    <div className=\"col-12 text-center mb-2\">\n      <h1 className=\"title\">MILESTONE</h1>\n     <h5 style={{color:\"green\"}}> {updated?\"Updated Successfully\":\"\"}</h5>\n    </div>\n\n    <div className=\"col-xxl-12 col-xl-12 col-lg-6 col-md-12 col-sm-12 my-3 \">\n      <div className=\"col-6 my-2 px-3 mx-auto\">\n        <label htmlFor=\"\">Title</label>\n        {/* <input type=\"text\" className=\"inputField col-12 mb-3\" /> */}\n        <input\n      type=\"text\"\n      className=\"form-control rounded-pill mt-2\"\n      placeholder=\"Title of Milestone\"\n      name=\"vTitleofMilestone\"\n      value={data.vTitleofMilestone}\n      onChange={handleChange}\n    />\n              {error.vTitleofMilestone?<p style={{color:\"red\"}}>{error.vTitleofMilestone}</p>:\"\"}\n\n\n      </div>\n\n      {/* <div className=\"col-6 my-2 px-3 mx-auto\">\n        <label htmlFor=\"\">Created Date</label>\n        <input\n      type=\"date\"\n      className=\"form-control rounded-pill mt-2\"\n      name=\"dCreateddate\"\n      placeholder=\"Deadline Date\"\n      value= {new Date(data.dCreateddate).toLocaleDateString(\"en-CA\")}\n     \n      onChange={handleChange}\n    />\n      </div> */}\n      <div className=\"col-6 my-2 px-3 mx-auto\">\n        <label htmlFor=\"\">Dead Line Date</label>\n        {/* <input type=\"date\" className=\"txt-area col-12 mb-3\" /> */}\n        <input\n      type=\"date\"\n      className=\"form-control rounded-pill mt-2\"\n      name=\"dDeadlineDate\"\n      placeholder=\"Deadline Date\"\n      value= {new Date(data.dDeadlineDate).toLocaleDateString(\"en-CA\")}\n     \n      onChange={handleChange}\n    />\n              {error.dDeadlineDate?<p style={{color:\"red\"}}>{error.dDeadlineDate}</p>:\"\"}\n\n      </div>\n      <div className=\"col-6 my-2 px-3 mx-auto\">\n        <label htmlFor=\"\">Amount</label>\n        {/* <input type=\"text\" className=\"inputField col-12 mb-3\" /> */}\n        <input\n      type=\"number\"\n      className=\"form-control rounded-pill mt-2\"\n      name=\"fAmount\"\n      placeholder=\"Amount\"\n      value={data.fAmount}\n      onChange={handleChange}\n    />\n              {error.fAmount?<p style={{color:\"red\"}}>{error.fAmount}</p>:\"\"}\n\n      </div>\n      <div className=\"col-6 my-2 px-3 mx-auto\">\n        <label htmlFor=\"\">Notes</label>\n        {/* <input type=\"text\" className=\"inputField col-12 mb-3\" /> */}\n        <input\n      type=\"text\"\n      className=\"form-control rounded-pill mt-2\"\n      name=\"tNotes\"\n      placeholder=\"Notes\"\n      value={data.tNotes}\n      onChange={handleChange}\n    />\n              {error.tNotes?<p style={{color:\"red\"}}>{error.tNotes}</p>:\"\"}\n\n      </div>\n      <div className=\"col-6 my-2 px-3 mx-auto\">\n        <label htmlFor=\"\">Status</label>\n        <select\n      name=\"eStatus\"\n      className=\"form-control rounded-pill mt-2\"\n      value={data.eStatus}\n      onChange={handleChange}\n    >\n      <option value=\"\">Select</option>\n\n      <option value=\"Active\">Active</option>\n      <option value=\"Inactive\">Inactive</option>\n    </select>\n    {error.eStatus?<p style={{color:\"red\"}}>{error.eStatus}</p>:\"\"}\n\n      </div>\n\n      \n    </div>\n  {isUpdate?  <button\n        type=\"submit\"\n        onClick={milestoneData}\n      value=\"Register\"\n        className=\"mx-auto btn btn-outline-dark w-25\"\n      >\n        Update\n      </button>:\n       <button\n       type=\"submit\"\n       onClick={milestoneData}\n     value=\"Register\"\n       className=\"mx-auto btn btn-outline-dark w-25\"\n       disabled\n     >\n       Update\n     </button>\n      }\n      {/* <Link to={\"/modlist/\"+`${milestoneid}`} className=\"mx-auto bg-dark text-white btn btn-outline-dark w-25\">\n            Modules\n          </Link> */}\n      {/* <Link to={\"/cmodule/\"+`${milestoneid}`} className=\"mx-auto bg-dark text-white btn btn-outline-dark w-25\">\n            Create Module\n          </Link> */}\n  </div>\n</div>\n</div>\n</div>\n</div>\n\n\n</>\n        </>\n\n    )\n\n}\nexport default M_edit ","/var/www/html/github/inhouse/src/pages/mod_edit/mod_edit.jsx",["762","763","764","765","766","767","768","769","770","771","772","773","774","775","776","777"],[],"import React from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport Sidebar from \"../sidebar/sidebar\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\n\nconst Mod_edit =()=>{\n  const[isUpdate,setIsUpdate] = useState(false)\n  const[updated, setUpdated]= useState(false)\n  const [error, setError] = useState({})\n\n  const {projectid,milestoneid,moduleid} = useParams()\n    const navigate = useNavigate();\n    const [data, setData] = useState({\n\n    });     \n    // alert(moduleid)\n\n  \n    let handleChange = (e) => {\n      let name = e.target.name;\n      let value = e.target.value;\n      setData({ ...data, [name]: value });\n      setIsUpdate(true)\n    };\n\n\n\n    const isvalid = (verificationdata) => {\n      let errors = {};\n     \n      // if (\n      //   verificationdata.CompanyName == undefined ||\n      //   verificationdata.CompanyName == \"\"\n      // ) {\n      //   errors.CompanyName = \"Company name is Required\";\n      // } else if (\n      //   !/^([a-zA-Z]+\\s)*[a-zA-Z]+$/.test(verificationdata.CompanyName)\n      // ) {\n      //   errors.CompanyName = \"Company name is not valid \";\n      // }\n      if (\n        verificationdata.estimated_time == undefined ||\n        verificationdata.estimated_time == \"\"\n      ) {\n        errors.estimated_time = \"Field should not be empty\";\n      } \n      if (\n        verificationdata.module_name == undefined ||\n        verificationdata.module_name == \"\"\n      ) {\n        errors.module_name = \"Field should not be empty\";\n      } \n      if (\n        verificationdata.estatus == undefined ||\n        verificationdata.estatus == \"\"\n      ) {\n        errors.estatus = \"Field should not be empty\";\n      } \n      if (\n        verificationdata.priority == undefined ||\n        verificationdata.priority == \"\"\n      ) {\n        errors.priority = \"Field should not be empty\";\n      } \n     \n     \n      \n    \n      return errors;\n    };\n\n\n    useEffect(() => {\n      if (Object.keys(data).length != 0) {\n        setError(isvalid(data));\n      } else {\n        return;\n      }\n    }, [data]);\n  \n    const mileapi = async () => {\n      const result = await fetch(\n        `${process.env.REACT_APP_APIURL}/module/project/${moduleid}`,\n        {\n          method: \"get\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"Token\")}`,\n          },\n        }\n      );\n      const apiresponse = await result.json();\n      const check = apiresponse.moduledetails;\n      setData({ ...data, ...check[0] });\n      // console.log(data)\n      // console.log(check);\n    };\n  \n   \n  \n   \n  \n    useEffect(() => {\n        mileapi();\n    }, []);\n  \n    useEffect(() => {\n    }, [data]);\n\n\n\n\n    const milestoneData = (e) => {\n        delete data.id\n      e.preventDefault();\n      const alloweditms=[\"iprojectid\",\"vTitleofMilestone\",\"dDeadlineDate\",\"fAmount\",\n      \"tNotes\",\n      \"eSttaus\",\n      \"iAccountHolderId\"]\n         \n          const apicall = () => {\n              const apidata = axios({\n                  method: \"put\",\n                  url: `${process.env.REACT_APP_APIURL}/module/${moduleid}`,\n                  data: data,\n                  headers: {\n                      Authorization: `Bearer ${localStorage.getItem(\"Token\")}`,\n                      \"Content-Type\": \"application/json\",\n                  },\n              })\n              // console.log(apidata);\n              const respo = apidata.data;\n              const check = respo?.Message;\n              setUpdated(true)\n              setIsUpdate(false)\n          };\n          try {\n            if(isUpdate && Object.keys(error).length==0){\n              apicall();\n            }\n          } catch (e) {\n          }\n  }\n  \n  // const handleBack=()=>{\n  //   navigate(\"/mlist/\" + `${projectid}`)\n  // }\n\n\n  useEffect(()=>{\n    // console.log(error)\n        },[error])\n\n    return(\n        <>\n\n\n\n<>\n\n<Sidebar IsSales={true}/>\n\n<div>\n<div className=\"set\">\n\n<div className=\"Milebody\">\n\n<div className=\"container my-3 p-5\">\n<button type=\"submit\" onClick={() => navigate(-1)} className=\"mx-auto bg-dark text-white btn btn-outline-dark w-25\">\n    Back\n  </button>\n  <div className=\"row \">\n    <div className=\"col-12 text-center mb-2\">\n      <h1 className=\"title\">Module</h1>\n      <h5 style={{color:\"green\"}}> {updated?\"Updated Successfully\":\"\"}</h5>\n    </div>\n\n    <div className=\"col-xxl-12 col-xl-12 col-lg-6 col-md-12 col-sm-12 my-3 \">\n      <div className=\"col-6 my-2 px-3 mx-auto\">\n        <label htmlFor=\"\">Name</label>\n        {/* <input type=\"text\" className=\"inputField col-12 mb-3\" /> */}\n        <input\n      type=\"text\"\n      className=\"form-control rounded-pill mt-2\"\n      name=\"module_name\"\n      value={data.module_name}\n      onChange={handleChange}\n    />\n    {error.module_name?<p style={{color:\"red\"}}>{error.module_name}</p>:\"\"}\n      </div>\n\n      {/* <div className=\"col-6 my-2 px-3 mx-auto\">\n        <label htmlFor=\"\">Created Date</label>\n        <input\n      type=\"date\"\n      className=\"form-control rounded-pill mt-2\"\n      name=\"dCreateddate\"\n      placeholder=\"Deadline Date\"\n      value= {new Date(data.dCreateddate).toLocaleDateString(\"en-CA\")}\n     \n      onChange={handleChange}\n    />\n      </div> */}\n     \n      <div className=\"col-6 my-2 px-3 mx-auto\">\n        <label htmlFor=\"\">Estimated Time</label>\n        {/* <input type=\"text\" className=\"inputField col-12 mb-3\" /> */}\n        <input\n      type=\"text\"\n      className=\"form-control rounded-pill mt-2\"\n      name=\"estimated_time\"\n      placeholder=\"Estimated Time\"\n      value={data.estimated_time}\n      onChange={handleChange}\n    />\n    {error.estimated_time?<p style={{color:\"red\"}}>{error.estimated_time}</p>:\"\"}\n      </div>\n     \n\n      <div className=\"col-6 my-2 px-3 mx-auto\">\n        <label htmlFor=\"\">Priority</label>\n        <select\n      name=\"priority\"\n      className=\"form-control rounded-pill mt-2\"\n      value={data.priority}\n      onChange={handleChange}\n    >\n      <option value=\"\">Select</option>\n\n      <option value=\"Low\">Low</option>\n      <option value=\"Moderate\">Moderate</option>\n      <option value=\"High\">High</option>\n     \n    </select>\n    {error.priority?<p style={{color:\"red\"}}>{error.priority}</p>:\"\"}\n      </div>\n     \n      <div className=\"col-6 my-2 px-3 mx-auto\">\n        <label htmlFor=\"\">Status</label>\n        <select\n      name=\"estatus\"\n      className=\"form-control rounded-pill mt-2\"\n      value={data.estatus}\n      onChange={handleChange}\n    >\n      <option value=\"\">Select</option>\n\n      <option value=\"pending\">Pending</option>\n      <option value=\"inprogress\">Inprogress</option>\n      <option value=\"waiting for confirmation\">Waiting For Confirmation</option>\n      <option value=\"completed\">Completed</option>\n    </select>\n    {error.estatus?<p style={{color:\"red\"}}>{error.estatus}</p>:\"\"}\n      </div>\n\n      \n    </div>\n   {isUpdate? <button\n        type=\"submit\"\n        onClick={milestoneData}\n      value=\"Register\"\n        className=\"mx-auto btn btn-outline-dark w-25\"\n      >\n        Submit\n      </button>:\n       <button\n       type=\"submit\"\n       onClick={milestoneData}\n     value=\"Register\"\n       className=\"mx-auto btn btn-outline-dark w-25\"\n       disabled\n     >\n       Update\n     </button>\n      }\n      {/* <Link to={\"/modlist/\"+`${milestoneid}`} className=\"mx-auto bg-dark text-white btn btn-outline-dark w-25\">\n            Modules\n          </Link>\n      <Link to={\"/cmodule/\"+`${milestoneid}`} className=\"mx-auto bg-dark text-white btn btn-outline-dark w-25\">\n            Create Module\n          </Link> */}\n  </div>\n</div>\n</div>\n</div>\n</div>\n\n\n</>\n        </>\n\n    )\n\n}\nexport default Mod_edit ","/var/www/html/github/inhouse/src/pages/Developer_dash/dev_dash.jsx",["778"],[],"import React from \"react\";\nimport Sidebar from \"../sidebar/sidebar\";\nimport { useState,useEffect } from \"react\";\nimport Dev_task from \"../Dev_task/dev_task\";\n\nconst Dev_Dash = ()=>{\n\n\n  const [data,setData] = useState()\n\n  const dash = async () => {\n    // alert(Leadid)\n    const result = await fetch(\n      `${process.env.REACT_APP_APIURL}/dashboard/`,\n        {\n          method: \"get\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"Token\")}`,\n          },\n        }\n    );\n\n    const response = await result.json()\n    const res = response.Message\n    setData(res)\n    console.log(res)\n  };\n\n  useEffect(()=>{\n    dash()\n    // console.log(data.Message)\n  },[])\n    return(\n        <>\n        <Sidebar  IsAdmin={true}/>\n\n<div className='set'>\n<div className=\"row m-3\">\n    <div className=\"col-sm-4\">\n      <div className=\"card  text-white\">\n      <div className=\"card-head shadow-lg bg-primary\">\n        <h3 className=\"text text-center \">Tasks</h3>\n        </div>\n        <div className=\"card-body cardi\">\n          <table className=\"table text-black table-striped\">\n            <thead className=\"text-center\">\n              <tr>\n                <th scope=\"col \">No</th>\n                <th scope=\"col\">Status</th>\n                \n              </tr>\n            </thead>\n            <tbody className=\"text-center\">\n              {data?.map((e)=>{\n                console.log(\"data\",data)\n                return(\n\n                \n              <tr>\n                <td>{e.task_no}</td>\n                <td>{e.estatus}</td>\n              </tr>\n              )\n            })}\n              \n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n    \n\n    \n    \n  \n</div>\n\n\n\n    \n  \n    \n  \n</div>\n\n        </>\n    )\n}\n\nexport default Dev_Dash","/var/www/html/github/inhouse/src/pages/create_task/create_task.jsx",["779","780","781","782","783","784"],[],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Navigate, useNavigate, useParams } from \"react-router-dom\";\nimport Sidebar from \"../sidebar/sidebar\";\nimport { useForm } from \"react-hook-form\";\nimport axios, { Axios } from \"axios\";\n\nconst Ctask = () => {\n  \n\n   const pid = localStorage.getItem(\"projectid\")\n   // alert(JSON.stringify(pid))\n  const[created, isCreated] = useState(false)\n  const { moduleid } = useParams();\n  const[create,setCreate] = useState(false)\n\n  const [val, setval] = useState({\n    moduleid: moduleid,\n    task_name: \"\",\n    task_estimated_time: \"\",\n    assign_to: 0,\n  });\n\n\n  const hadlechange = (e) => {\n    console.log(e.target.value)\n    let objname = e.target?.name;\n    let value = e.target?.value;\n    console.log({ ...val, [objname]: value });\n    setval({ ...val, [objname]: value });\n    setCreate(true)\n  };\n\n  const [dev, setdev] = useState([{\n    id: 0,\n    vname: \"\"\n  }]);\n\n  const geting = () => {\n    axios\n      .get(`${process.env.REACT_APP_APIURL}/projectteam/${pid}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"Token\")}`,\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((respond) => respond.data)\n      .then((res) => {\n        \n        setdev(res.Message);\n      });\n  };\n  // alert(JSON.stringify(dev))\n  useEffect(() => {\n    geting();\n  }, []);\n\n  const posting = () => {\n    axios\n      .post(`${process.env.REACT_APP_APIURL}/task/createtask`, val, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"Token\")}`,\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      isCreated(true)\n      setCreate(false)\n      \n  };\n\n  const navigate = useNavigate();\n  // alert(milestoneid)\n\n  // const [data, setData] = useState({\n  //   imilestone_id: milestoneid,\n  // });\n\n  \n\n  // const modulecall = async (e) => {\n  //   // e.preventDefault();\n\n  //   const responseapi = await fetch(\n  //     `${process.env.REACT_APP_APIURL}/task/createtask`,\n\n  //     {\n  //       method: \"post\",\n  //       headers: {\n  //         \"Content-Type\": \"application/json\",\n  //         Authorization: `Bearer ${localStorage.getItem(\"Token\")}`,\n  //       },\n  //       body: JSON.stringify(data),\n  //     }\n  //   );\n\n  //   let check = await responseapi.json();\n  //   console.log(check);\n  // };\n  useEffect(() => {}, [val]);\n\n  const handleBack = () => {\n    // navigate(\"/medit/\" + `${projectid}/` + `${milestoneid}`)\n  };\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  return (\n    <>\n      <Sidebar IsSales={true} />\n\n      <div>\n        <div className=\"set\">\n          <div className=\"Milebody\">\n            <div className=\"container my-3 p-5\">\n              <button\n                type=\"submit\"\n                onClick={() => navigate(-1)}\n                className=\"mx-auto bg-dark text-white btn btn-outline-dark w-25\"\n              >\n                Back\n              </button>\n              <div className=\"row \">\n                <div className=\"col-12 text-center mb-2\">\n                  <h1 className=\"title\">Task</h1>\n                 {created? <h5 style={{color:\"green\"}}>Task Created</h5>:\"\"}\n                </div>\n\n                <div className=\"col-xxl-12 col-xl-12 col-lg-6 col-md-12 col-sm-12 my-3 \">\n                  <div className=\"col-6 my-2 px-3 mx-auto\">\n                    {/* <label htmlFor=\"\">Milestone</label> */}\n                    {/* <select name=\"\" id=\"\" className=\"form-control rounded-pill mt-2\">\n                <option value=\"\">Select</option>\n               </select> */}\n                  </div>\n\n                  <div className=\"col-6 my-2 px-3 mx-auto\">\n                    <label htmlFor=\"\">Task Name</label>\n                    {/* <input type=\"text\" className=\"inputField col-12 mb-3\" /> */}\n                    <input\n                      {...register(\"task_name\", { required: true })}\n                      type=\"text\"\n                      className=\"form-control rounded-pill mt-2\"\n                      placeholder=\"Task Name\"\n                      name=\"task_name\"\n                      value={val.task_name}\n                      onChange={hadlechange}\n                    />\n                    {val.task_name==\"\"?errors.task_name && (\n                      <p className=\"error\">Module Name is required.</p>\n                    ):\"\"}\n                  </div>\n                  <div className=\"col-6 my-2 px-3 mx-auto\">\n                    <label htmlFor=\"\">Estimated Time</label>\n                    {/* <input type=\"date\" className=\"txt-area col-12 mb-3\" /> */}\n                    <input\n                      {...register(\"task_estimated_time\", { required: true })}\n                      type=\"text\"\n                      className=\"form-control rounded-pill mt-2\"\n                      name=\"task_estimated_time\"\n                      placeholder=\"time\"\n                      value={val.task_estimated_time}\n                      onChange={hadlechange}\n                    />\n                    {val.task_estimated_time==\"\"?errors.task_estimated_time && (\n                      <p className=\"error\">Estimated Time is required.</p>\n                    ):\"\"}\n                  </div>\n\n                  <div className=\"col-6 my-2 px-3 mx-auto\">\n                    <label htmlFor=\"\">Assign To</label>\n                    <select\n                    //  {...register(\"assign_to\", { required: true })}\n                      // onClick={geting}\n                      onChange={hadlechange}\n                      name=\"assign_to\"\n                      // value={val.assign_to}\n                      id=\"\"\n                      className=\"form-control rounded-pill mt-2\"\n                      \n                    >\n                      <option value=\"select \">--Select--</option>\n                      {dev?.map((e) => \n                      \n                      {\n                        return <option value={e.iUserid}>{e.vname}</option>;\n                      })}\n                    </select>\n                    {/* {val.assign_to==\"select\"?errors.assign_to && (\n                      <p className=\"error\">Required</p>\n                    ):\"\"} */}\n                  </div>\n                </div>\n              {create?  <button\n                  type=\"submit\"\n                  onClick={handleSubmit(posting)}\n                  value=\"Register\"\n                  className=\"mx-auto btn btn-outline-dark w-25\"\n                >\n                  Submit\n                </button>:\n                \n                <button\n                  type=\"submit\"\n                  onClick={handleSubmit(posting)}\n                  value=\"Register\"\n                  className=\"mx-auto btn btn-outline-dark w-25\"\n                  disabled\n                >\n                  Submit\n                </button>\n                \n                }\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\nexport default Ctask;","/var/www/html/github/inhouse/src/pages/Dev_task/dev_task.jsx",["785","786","787","788","789","790","791","792","793"],[],"import React from \"react\";\n\nimport Sidebar from \"../sidebar/sidebar\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./dev_task.css\"\n\nconst Dev_task = ()=>{\n\n  const [ completed, setCompleted] = useState(false)\nconst [seletedstatus,setSelectedstatus]=useState()\n  const[modal,setModal] = useState(false)\n  const[message, setMessage] = useState(false)\n\n  const [data, setData] = useState([{}]);\nconst [updatetask,setUpdatetask]=useState(0)\nconst putapicalling=async()=>{\n  try{\n    const putapicallonserver=await fetch(`${process.env.REACT_APP_APIURL}/task/${updatetask}` , {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"Token\")}`,\n      },\n      body: JSON.stringify({estatus:seletedstatus}),\n    })\n    const serverresponse=await putapicallonserver.json()\n    listapi();\n\n  }\n  catch(e){\n\n  }\n}\n  const listapi = async () => {\n    const result = await fetch(`${process.env.REACT_APP_APIURL}/developer/tasklist`, {\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"Token\")}`,\n      },\n    });\n\n    \n    \n    const apiresponse = await result.json();\n   \n    const apicheck = apiresponse?.developerlist;\n   \n    \n    \n   \n\n   \n    \n\n    setData(apicheck);\n   \n   \n  };\n\n  useEffect(() => {\n    listapi();\n    \n  }, []);\n\n  useEffect(() => {\n    // console.log(data);\n  }, [data]);\n\nconst openModal = ()=>{\n  setModal(true)\n  setMessage(\"Sure You Want To Proceed\")\n}\n\n\nconst handleClose=()=>{\n  setModal(false)\n  \n}\n\nconst handleCompleted=()=>{\n  setModal(false)\n  setCompleted(true)\n  putapicalling()\n}\nuseEffect(()=>{\n  console.log(updatetask)\n},[updatetask])\nuseEffect(()=>{\n  console.log(seletedstatus)\n},[seletedstatus])\n\n// if(completed){\n\n\n// }\n\nreturn(\n    <>\n\n\n<Sidebar IsSales={true}/>\n\n<div className='set'>\n  <div className=\"container my-3 body p-5\">\n    <div className=\"row \"></div>\n<div><table class=\"table\">\n<thead class=\"thead-dark\">\n  <tr>\n    {/* <th scope=\"col\">#</th> */}\n    <th scope=\"col\">Task Name</th>\n    <th scope=\"col\">Estimated Time</th>\n    <th scope=\"col\">Status</th>\n    {/* <th scope=\"col\">Edit</th> */}\n    \n    {/* <th scope=\"col\">Edit</th> */}\n    <th scope=\"col\">Progress</th>\n  </tr>\n</thead>\n\n\n<tbody>\n            {data?.map((e) => {\n              console.log(e);\n              return (\n                <tr>\n                  <td data-column=\"First Name\">{e.task_name}</td>\n                  <td data-column=\"Last Name\">{e.task_estimated_time}</td>\n                 \n                \n                 {e.estatus==\"completed\" ?<td className=\"Converted\" data-column=\"Status\">{e.estatus}</td>:\"\"}\n                 {e.estatus==\"pending\" ?<td className=\"OnHold\" data-column=\"Status\">{e.estatus}</td>:\"\"}\n                 {e.estatus==\"inprogress\" ?<td className=\"Inprogress\" data-column=\"Status\">{e.estatus}</td>:\"\"}\n                 {e.estatus==\"waiting for confirmation\" ?<td className=\"NoResponse\" data-column=\"Status\">{e.estatus}</td>:\"\"}\n                 \n                 {/* <td data-column=\"Status\">\n                  <Link to={\"/dev_task_edit/\" + `${e.id}`}>\n                    {\" \"}\n                   <button className=\"btn\">Edit</button>\n                  </Link>\n                  </td> */}\n                  <td >\n                  <Link to={\"\"}>\n                    {\" \"}\n{/* {completed? */}\n                  {/* //  <button className=\"btn bg-success\" disabled >Update</button> */}\n           {/* :  */}\n                <button className=\"btn\" disabled={e.estatus==\"completed\"?\"disables\":\"\"} onClick={()=>{if(e.estatus!=\"completed\"){setUpdatetask(e.id)\n            setSelectedstatus(e.estatus)\n              openModal()}\n            }\n          }>Update</button>\n          {/* }   */}\n                  </Link>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n\n</table>\n\n</div>\n{modal?\n        <>\n  \n \n  <div className='modal_'>\n        <div className='modalBody'>\n          \n        {/* {message} */}\n        <select name=\"selectedstatus\" id=\"\" value={seletedstatus} onChange={(e)=>{\n          setSelectedstatus(e.target.value)\n        }}>\n          <option value=\"completed\">completed</option>\n          <option value=\"pending\">pending</option>\n          <option value=\"inprogress\">inprogress</option>\n          <option value=\"waiting for confirmation\">waiting for confirmation</option>\n        </select>\n          <div className=\"modal-button\">\n            {/* <button className=\"modal-btn\">Ok</button> */}\n            <button className=\"modal-btn\" onClick={handleCompleted}>Update</button>\n            <button className=\"modal-btn\" onClick={handleClose}>Cancel</button>\n          </div>\n        </div>\n    \n    </div>\n        </>\n\n        :\"\"}\n</div>\n</div>\n\n\n        </>\n)\n}\n\nexport default Dev_task","/var/www/html/github/inhouse/src/pages/not_found/not_found.jsx",[],[],"/var/www/html/github/inhouse/src/pages/task_edit/Taskedit.jsx",["794","795","796","797","798","799","800","801","802","803","804","805","806","807","808"],[],"import React from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport Sidebar from \"../sidebar/sidebar\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\n\nconst Task_Edit = () => {\n  const [isUpdate, setIsUpdate] = useState(false)\n  const [updated, setUpdated] = useState(false)\n  const [error, setError] = useState({})\n\n  const { projectid, milestoneid, moduleid, id } = useParams()\n  const navigate = useNavigate();\n  const [data, setData] = useState({\n\n  });\n  // alert(moduleid)\n\n\n  let handleChange = (e) => {\n    let name = e.target.name;\n    let value = e.target.value;\n    setData({ ...data, [name]: value });\n    setIsUpdate(true)\n  };\n\n\n\n  const isvalid = (verificationdata) => {\n    let errors = {};\n\n    // if (\n    //   verificationdata.CompanyName == undefined ||\n    //   verificationdata.CompanyName == \"\"\n    // ) {\n    //   errors.CompanyName = \"Company name is Required\";\n    // } else if (\n    //   !/^([a-zA-Z]+\\s)*[a-zA-Z]+$/.test(verificationdata.CompanyName)\n    // ) {\n    //   errors.CompanyName = \"Company name is not valid \";\n    // }\n    if (\n      verificationdata.task_name == undefined ||\n      verificationdata.task_name == \"\"\n    ) {\n      errors.task_name = \"Field should not be empty\";\n    }\n    if (\n      verificationdata.task_estimated_time == undefined ||\n      verificationdata.task_estimated_time == \"\"\n    ) {\n      errors.task_estimated_time = \"Field should not be empty\";\n    }\n    if (\n      verificationdata.estatus == undefined ||\n      verificationdata.estatus == \"\"\n    ) {\n      errors.estatus = \"Field should not be empty\";\n    }\n    if (\n      verificationdata.assign_to == undefined ||\n      verificationdata.assign_to == \"\"\n    ) {\n      errors.assign_to = \"Field should not be empty\";\n    }\n\n\n\n\n\n    return errors;\n  };\n\n\n  useEffect(() => {\n    if (Object.keys(data).length != 0) {\n      setError(isvalid(data));\n    } else {\n      return;\n    }\n  }, [data]);\n\n  const taskapi = async () => {\n    const result = await fetch(\n      `${process.env.REACT_APP_APIURL}/task/singletask/${id}`,\n      {\n        method: \"get\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"Token\")}`,\n        },\n      }\n    );\n    const apiresponse = await result.json();\n    const check = apiresponse.tasklist;\n    setData({ ...data, ...check[0] });\n    console.log(data)\n    console.log(check);\n  };\n\n\n\n\n\n  useEffect(() => {\n    taskapi();\n  }, []);\n\n  useEffect(() => {\n  }, [data]);\n\n\n\n\n  const taskData = (e) => {\n    delete data.id\n    e.preventDefault();\n    // const alloweditms=[\"iprojectid\",\"vTitleofMilestone\",\"dDeadlineDate\",\"fAmount\",\n    // \"tNotes\",\n    // \"eSttaus\",\n    // \"iAccountHolderId\"]\n\n    const apicall = () => {\n      const apidata = axios({\n        method: \"put\",\n        url: `${process.env.REACT_APP_APIURL}/task/${id}`,\n        data: data,\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"Token\")}`,\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      // console.log(apidata);\n      const respo = apidata.data;\n      const check = respo?.Message;\n      // console.log(respo)\n      setUpdated(true)\n      setIsUpdate(false)\n    };\n    try {\n\n      apicall();\n\n    } catch (e) {\n    }\n  }\n\n  // const handleBack=()=>{\n  //   navigate(\"/mlist/\" + `${projectid}`)\n  // }\n\n\n  useEffect(() => {\n    // console.log(error)\n  }, [error])\n\n  const [dev, setdev] = useState([{\n    id: 0,\n    vname: \"\"\n  }]);\n  const geting = () => {\n    axios\n      .get(\"http://192.168.5.21:7000/developer\", {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"Token\")}`,\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((respond) => respond.data)\n      .then((res) => {\n        setdev(res.developerlist);\n      });\n  };\n\n  useEffect(() => {\n    geting();\n  }, []);\n\n\n\n  return (\n      <>\n        <Sidebar IsSales={true} />\n        <div>\n          <div className=\"set\">\n\n            <div className=\"Milebody\">\n\n              <div className=\"container my-3 p-5\">\n                <button type=\"submit\" onClick={() => navigate(-1)} className=\"mx-auto bg-dark text-white btn btn-outline-dark w-25\">\n                  Back\n                </button>\n                <div className=\"row \">\n                  <div className=\"col-12 text-center mb-2\">\n                    <h1 className=\"title\">Task</h1>\n                    <h5 style={{ color: \"green\" }}> {updated ? \"Updated Successfully\" : \"\"}</h5>\n                  </div>\n\n                  <div className=\"col-xxl-12 col-xl-12 col-lg-6 col-md-12 col-sm-12 my-3 \">\n                    <div className=\"col-6 my-2 px-3 mx-auto\">\n                      <label htmlFor=\"\">Name</label>\n                      {/* <input type=\"text\" className=\"inputField col-12 mb-3\" /> */}\n                      <input\n                        type=\"text\"\n                        className=\"form-control rounded-pill mt-2\"\n                        name=\"task_name\"\n                        value={data.task_name}\n                        onChange={handleChange}\n                      />\n                      {error.task_name ? <p style={{ color: \"red\" }}>{error.task_name}</p> : \"\"}\n                    </div>\n\n                    {/* <div className=\"col-6 my-2 px-3 mx-auto\">\n        <label htmlFor=\"\">Created Date</label>\n        <input\n      type=\"date\"\n      className=\"form-control rounded-pill mt-2\"\n      name=\"dCreateddate\"\n      placeholder=\"Deadline Date\"\n      value= {new Date(data.dCreateddate).toLocaleDateString(\"en-CA\")}\n     \n      onChange={handleChange}\n    />\n      </div> */}\n\n                    <div className=\"col-6 my-2 px-3 mx-auto\">\n                      <label htmlFor=\"\">Estimated Time</label>\n                      {/* <input type=\"text\" className=\"inputField col-12 mb-3\" /> */}\n                      <input\n                        type=\"text\"\n                        className=\"form-control rounded-pill mt-2\"\n                        name=\"task_estimated_time\"\n                        placeholder=\"Estimated Time\"\n                        value={data.task_estimated_time}\n                        onChange={handleChange}\n                      />\n                      {error.task_estimated_time ? <p style={{ color: \"red\" }}>{error.task_estimated_time}</p> : \"\"}\n                    </div>\n\n\n\n                    <div className=\"col-6 my-2 px-3 mx-auto\">\n                      <label htmlFor=\"\">Status</label>\n                      <select\n                        name=\"estatus\"\n                        className=\"form-control rounded-pill mt-2\"\n                        value={data.estatus}\n                        onChange={handleChange}\n                        disabled\n                      >\n                        <option value=\"\">Select</option>\n\n                        <option value=\"pending\">Pending</option>\n                        <option value=\"inprogress\">Inprogress</option>\n                        <option value=\"waiting for confirmation\">Waiting For Confirmation</option>\n                        <option value=\"completed\">Completed</option>\n                      </select>\n                      {error.estatus ? <p style={{ color: \"red\" }}>{error.estatus}</p> : \"\"}\n                    </div>\n\n                    <div className=\"col-6 my-2 px-3 mx-auto\">\n                      <label htmlFor=\"\">Status</label>\n                      <select\n                      // onClick={geting}\n                      onChange={handleChange}\n                      name=\"assign_to\"\n                      value={data.assign_to}\n                      id=\"\"\n                      className=\"form-control rounded-pill mt-2\"\n                    >\n                      <option value=\"\">Select</option>\n                      {dev?.map((e) => {\n                        return <option value={e.id}>{e.vname}</option>;\n                      })}\n                    </select>\n                      {error.estatus ? <p style={{ color: \"red\" }}>{error.estatus}</p> : \"\"}\n                    </div>\n\n\n\n\n\n                  </div>\n                  {isUpdate ? <button\n                    type=\"submit\"\n                    onClick={taskData}\n                    value=\"Register\"\n                    className=\"mx-auto btn btn-outline-dark w-25\"\n                  >\n                    Submit\n                  </button> :\n                    <button\n                      type=\"submit\"\n                      onClick={taskData}\n                      value=\"Register\"\n                      className=\"mx-auto btn btn-outline-dark w-25\"\n                      disabled\n                    >\n                      Update\n                    </button>\n                  }\n                  {/* <Link to={\"/modlist/\"+`${milestoneid}`} className=\"mx-auto bg-dark text-white btn btn-outline-dark w-25\">\n            Modules\n          </Link>\n      <Link to={\"/cmodule/\"+`${milestoneid}`} className=\"mx-auto bg-dark text-white btn btn-outline-dark w-25\">\n            Create Module\n          </Link> */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n\n    </>\n\n  )\n\n}\nexport default Task_Edit ","/var/www/html/github/inhouse/src/pages/dev_task_edit/DevTaskEdit.jsx",["809","810","811","812","813","814","815","816","817","818","819","820","821","822","823"],[],"import React from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport Sidebar from \"../sidebar/sidebar\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\n\nconst Dev_Task_Edit = () => {\n  const [isUpdate, setIsUpdate] = useState(false)\n  const [updated, setUpdated] = useState(false)\n  const [error, setError] = useState({})\n\n  const { projectid, milestoneid, moduleid, id } = useParams()\n  console.log(id)\n  const navigate = useNavigate();\n  const [data, setData] = useState({\n\n  });\n  // alert(moduleid)\n\n\n  let handleChange = (e) => {\n    let name = e.target.name;\n    let value = e.target.value;\n    setData({ ...data, [name]: value });\n    setIsUpdate(true)\n  };\n\n\n\n  const isvalid = (verificationdata) => {\n    let errors = {};\n\n    // if (\n    //   verificationdata.CompanyName == undefined ||\n    //   verificationdata.CompanyName == \"\"\n    // ) {\n    //   errors.CompanyName = \"Company name is Required\";\n    // } else if (\n    //   !/^([a-zA-Z]+\\s)*[a-zA-Z]+$/.test(verificationdata.CompanyName)\n    // ) {\n    //   errors.CompanyName = \"Company name is not valid \";\n    // }\n    if (\n      verificationdata.task_name == undefined ||\n      verificationdata.task_name == \"\"\n    ) {\n      errors.task_name = \"Field should not be empty\";\n    }\n    if (\n      verificationdata.task_estimated_time == undefined ||\n      verificationdata.task_estimated_time == \"\"\n    ) {\n      errors.task_estimated_time = \"Field should not be empty\";\n    }\n    if (\n      verificationdata.estatus == undefined ||\n      verificationdata.estatus == \"\"\n    ) {\n      errors.estatus = \"Field should not be empty\";\n    }\n    if (\n      verificationdata.assign_to == undefined ||\n      verificationdata.assign_to == \"\"\n    ) {\n      errors.assign_to = \"Field should not be empty\";\n    }\n\n\n\n\n\n    return errors;\n  };\n\n\n  useEffect(() => {\n    if (Object.keys(data).length != 0) {\n      setError(isvalid(data));\n    } else {\n      return;\n    }\n  }, [data]);\n\n  const taskapi = async () => {\n    const result = await fetch(\n      `${process.env.REACT_APP_APIURL}/task/singletask/${id}`,\n      {\n        method: \"get\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"Token\")}`,\n        },\n      }\n    );\n    const apiresponse = await result.json();\n    const check = apiresponse.tasklist;\n    setData({ ...data, ...check[0] });\n    console.log(data)\n    console.log(check);\n  };\n\n\n\n\n\n  useEffect(() => {\n    taskapi();\n  }, []);\n\n  useEffect(() => {\n  }, [data]);\n\n\n\n\n  const taskData = (e) => {\n    delete data.id\n    e.preventDefault();\n    // const alloweditms=[\"iprojectid\",\"vTitleofMilestone\",\"dDeadlineDate\",\"fAmount\",\n    // \"tNotes\",\n    // \"eSttaus\",\n    // \"iAccountHolderId\"]\n\n    const apicall = () => {\n      const apidata = axios({\n        method: \"put\",\n        url: `${process.env.REACT_APP_APIURL}/task/${id}`,\n        data: data,\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"Token\")}`,\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      // console.log(apidata);\n      const respo = apidata.data;\n      const check = respo?.Message;\n      // console.log(respo)\n      setUpdated(true)\n      setIsUpdate(false)\n    };\n    try {\n\n      apicall();\n\n    } catch (e) {\n    }\n  }\n\n  // const handleBack=()=>{\n  //   navigate(\"/mlist/\" + `${projectid}`)\n  // }\n\n\n  useEffect(() => {\n    // console.log(error)\n  }, [error])\n\n  const [dev, setdev] = useState([{\n    id: 0,\n    vname: \"\"\n  }]);\n  const geting = () => {\n    axios\n      .get(\"http://192.168.5.21:7000/developer\", {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"Token\")}`,\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((respond) => respond.data)\n      .then((res) => {\n        setdev(res.developerlist);\n      });\n  };\n\n  useEffect(() => {\n    geting();\n  }, []);\n\n\n\n  return (\n      <>\n        <Sidebar IsSales={true} />\n        <div>\n          <div className=\"set\">\n\n            <div className=\"Milebody\">\n\n              <div className=\"container my-3 p-5\">\n                <button type=\"submit\" onClick={() => navigate(-1)} className=\"mx-auto bg-dark text-white btn btn-outline-dark w-25\">\n                  Back\n                </button>\n                <div className=\"row \">\n                  <div className=\"col-12 text-center mb-2\">\n                    <h1 className=\"title\">Task</h1>\n                    <h5 style={{ color: \"green\" }}> {updated ? \"Updated Successfully\" : \"\"}</h5>\n                  </div>\n\n                  <div className=\"col-xxl-12 col-xl-12 col-lg-6 col-md-12 col-sm-12 my-3 \">\n                    <div className=\"col-6 my-2 px-3 mx-auto\">\n                      <label htmlFor=\"\">Name</label>\n                      {/* <input type=\"text\" className=\"inputField col-12 mb-3\" /> */}\n                      <input\n                        type=\"text\"\n                        className=\"form-control rounded-pill mt-2\"\n                        name=\"task_name\"\n                        value={data.task_name}\n                        onChange={handleChange}\n                        disabled\n                      />\n                      {error.task_name ? <p style={{ color: \"red\" }}>{error.task_name}</p> : \"\"}\n                    </div>\n\n                    {/* <div className=\"col-6 my-2 px-3 mx-auto\">\n        <label htmlFor=\"\">Created Date</label>\n        <input\n      type=\"date\"\n      className=\"form-control rounded-pill mt-2\"\n      name=\"dCreateddate\"\n      placeholder=\"Deadline Date\"\n      value= {new Date(data.dCreateddate).toLocaleDateString(\"en-CA\")}\n     \n      onChange={handleChange}\n    />\n      </div> */}\n\n                    <div className=\"col-6 my-2 px-3 mx-auto\">\n                      <label htmlFor=\"\">Estimated Time</label>\n                      {/* <input type=\"text\" className=\"inputField col-12 mb-3\" /> */}\n                      <input\n                        type=\"text\"\n                        className=\"form-control rounded-pill mt-2\"\n                        name=\"task_estimated_time\"\n                        placeholder=\"Estimated Time\"\n                        value={data.task_estimated_time}\n                        onChange={handleChange}\n                        disabled\n                      />\n                      {error.task_estimated_time ? <p style={{ color: \"red\" }}>{error.task_estimated_time}</p> : \"\"}\n                    </div>\n\n\n\n                    <div className=\"col-6 my-2 px-3 mx-auto\">\n                      <label htmlFor=\"\">Status</label>\n                      <select\n                        name=\"estatus\"\n                        className=\"form-control rounded-pill mt-2\"\n                        value={data.estatus}\n                        onChange={handleChange}\n                        \n                      >\n                        <option value=\"\">Select</option>\n\n                        <option value=\"pending\">Pending</option>\n                        <option value=\"inprogress\">Inprogress</option>\n                        <option value=\"waiting for confirmation\">Waiting For Confirmation</option>\n                        <option value=\"completed\">Completed</option>\n                      </select>\n                      {error.estatus ? <p style={{ color: \"red\" }}>{error.estatus}</p> : \"\"}\n                    </div>\n\n                    <div className=\"col-6 my-2 px-3 mx-auto\">\n                      <label htmlFor=\"\">Status</label>\n                      <select\n                      // onClick={geting}\n                      onChange={handleChange}\n                      name=\"assign_to\"\n                      value={data.assign_to}\n                      id=\"\"\n                      className=\"form-control rounded-pill mt-2\"\n                      disabled\n                    >\n                      <option value=\"\">Select</option>\n                      {dev?.map((e) => {\n                        return <option value={e.id}>{e.vname}</option>;\n                      })}\n                    </select>\n                      {error.estatus ? <p style={{ color: \"red\" }}>{error.estatus}</p> : \"\"}\n                    </div>\n\n\n\n\n\n                  </div>\n                  {isUpdate ? <button\n                    type=\"submit\"\n                    onClick={taskData}\n                    value=\"Register\"\n                    className=\"mx-auto btn btn-outline-dark w-25\"\n                  >\n                    Submit\n                  </button> :\n                    <button\n                      type=\"submit\"\n                      onClick={taskData}\n                      value=\"Register\"\n                      className=\"mx-auto btn btn-outline-dark w-25\"\n                      disabled\n                    >\n                      Update\n                    </button>\n                  }\n                  {/* <Link to={\"/modlist/\"+`${milestoneid}`} className=\"mx-auto bg-dark text-white btn btn-outline-dark w-25\">\n            Modules\n          </Link>\n      <Link to={\"/cmodule/\"+`${milestoneid}`} className=\"mx-auto bg-dark text-white btn btn-outline-dark w-25\">\n            Create Module\n          </Link> */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n\n    </>\n\n  )\n\n}\nexport default Dev_Task_Edit ","/var/www/html/github/inhouse/src/pages/reports/reports.jsx",["824","825","826","827","828","829","830","831","832","833","834","835"],[],"import React, { useState } from \"react\";\nimport \"./reports.css\"\nimport { technologylist } from \"../../constfiles\";\nimport { useEffect } from \"react\";\nimport ReactPaginate from \"react-paginate\";\nimport { Link } from \"react-router-dom\";\n\nconst Reports = () => {\n  const [searchfilter, setSearchfilter] = useState({\n    serchon: \"Project\",\n    technology:\"\",\n    title:\"\",\n    users:undefined\n  });\n  const [technologydropdown] = useState(technologylist);\n  const [ok, setOk] = useState(\"\")\n  const [FilterName, setFilterName] = useState(\"\")\n  const [StartFrom, setStartFrom] = useState(\"\")\n  const [EndFrom, setEndFrom] = useState(\"\")\n  const [StartDate, setStartDate] = useState(\"\")\n  const [EndDate, setEndDate] = useState(\"\")\n \n  const handleChange = (e)=>{\n    let name = e.target.name\n    let value = e.target.value\n    setSearchfilter({...searchfilter,[name]:value})\n  }\n\n  const [pageCount, setpageCount] = useState(0);\n  const [itemOffset, setItemOffset] = useState(0);\n  const [currentItem, setCurrentItem] = useState(null);\n  let itemPerPage = 10;\n\n  const [data,setData] = useState()\n  console.log(ok)\nconst[List, setUserList]=useState([])\n  const userList = async()=>{\n    const usercall = await fetch(\n      `${process.env.REACT_APP_APIURL}/sales?`,\n        {\n          method: \"get\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"Token\")}`,\n          },\n        }\n\n    )\n    const result = await usercall.json()\n    const check = result.saleslist\n    \n    setUserList(check)\n\n   \n  }\n  console.log(List)\n  \n\n  useEffect(()=>{\n    userList()\n  },[])\n\n  const apicall = async()=>{\n    let apiurl = `${process.env.REACT_APP_APIURL}/reports?`\n    if(itemOffset>0){\n\n      apiurl=  `${apiurl}offset=${itemOffset} &`\n    } \n    if(searchfilter.serchon){apiurl=`${apiurl}searchon=${searchfilter.serchon}&`}\n    \n    if (FilterName.length > 0) {\n      apiurl = `${apiurl}title=${FilterName}&`\n    }\n\n    if (ok?.length > 0) {\n      apiurl = `${apiurl}technology=${ok}&`\n    }\n    if (StartFrom?.length > 0) {\n      apiurl = `${apiurl}start=${StartFrom}&`\n    }\n    if (EndFrom?.length > 0) {\n      apiurl = `${apiurl}end=${EndFrom}&`\n    }\n    if (StartDate?.length > 0) {\n      apiurl = `${apiurl}startingdate=${StartDate}&`\n    }\n    if (EndDate?.length > 0) {\n      apiurl = `${apiurl}endingdate=${EndDate}&`\n    }\n    if (searchfilter.users> 0) {\n      apiurl = `${apiurl}user=${searchfilter.users}&`\n    }\n    // alert(apiurl)\n\n    // alert(apiurl)\n    const hitcall = await fetch(\n      apiurl ,\n        {\n          method: \"get\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"Token\")}`,\n          },\n        }\n\n    )\n    const result = await hitcall.json()\n    const check = result.Message.data\n    console.log(check)\n    console.log(result)\n    setData(check)\n    setCurrentItem(check)\n    console.log(result.Message.countofdataavilable)\n    setpageCount(Math.ceil(result.Message.countofdataavilable/ itemPerPage))\n  }\n  useEffect(()=>{\n    apicall()\n  },[searchfilter,FilterName,ok,StartFrom,EndFrom,StartDate,EndDate,List])\n\n  useEffect(() => {\n    // console.log(data);\n  }, [data]);\n\n  // alert(JSON.stringify(searchfilter))\n\n  useEffect(()=>{\n    const endoffset = itemOffset + itemPerPage\n    // setCurrentItem(data.slice(itemOffset,endoffset))\n    // setpageCount(Math.ceil(data.length/ itemPerPage))\n    // console.log(endoffset)\n    // console.log(\"current\",currentItem)\n    // console.log(\"data\", data.length)\n  },[itemOffset,itemPerPage,data])\n\n  const handlePageClick=(e)=>{\n    const newOffset=(e.selected*itemPerPage)\n    // alert(newOffset)\n    setItemOffset(newOffset)\n    // console.log(newOffset)\n  }\n useEffect(()=>{\n  apicall();\n   \n },[itemOffset])\n\n const handleReset=()=>{\n  setSearchfilter({\n    serchon: \"Project\",\n    technology:\"\",\n    title:\"\",\n    users:undefined\n  })\n  setOk(\"\")\n  setFilterName(\"\")\n  setStartFrom(\"\")\nsetEndFrom(\"\")\nsetStartDate(\"\")\nsetEndDate(\"\")\n}\n\n\n  return (\n\n    <div className=\"row \">\n      <div className=\"col-2 filter\">\n      <div className=\"px-2 py-0\">\n        <div className=\"d-flex justify-content-between \">\n        <h4 className=\"text-center\"> Filter</h4>\n        \n          <u className=\"text-primary reset\" onClick={handleReset}>\n          Reset\n          </u>\n        \n        </div>\n        <div className=\"w-100\">\n        <input\n            \n            type=\"radio\"\n            name=\"serchon\"\n            onChange={handleChange}\n            id=\"\"\n            value={\"Project\"}\n            checked={searchfilter.serchon == \"Project\" ? \"checked\" : \"\"}\n          />\n\n          <label htmlFor=\"\">Project</label>\n          </div>\n          <div className=\"w-100\">\n          <input\n            type=\"radio\"\n            onChange={handleChange}\n            name=\"serchon\"\n            id=\"\"\n            value={\"Inquiry\"}\n            checked={searchfilter.serchon == \"Inquiry\" ? \"checked\" : \"\"}\n          />\n          <label htmlFor=\"\">Inquiry</label>\n          </div>\n          <div className=\"w-100\">\n          <input\n            type=\"radio\"\n            onChange={handleChange}\n            name=\"serchon\"\n            id=\"\"\n            value={\"Lead\"}\n            checked={searchfilter.serchon == \"Lead\" ? \"checked\" : \"\"}\n          />\n          <label htmlFor=\"\">Lead</label>\n          </div>\n\n          <div className=\"py-3\">\n          <label htmlFor=\"\" className=\"w-100\">Technology</label>\n          <select name=\"\" id=\"\" value={ok} className=\"w-100 rounded-pill py-1 px-1\"\n          onChange={(e)=>{\n            setOk(e.target.value)}}\n          >\n            <option value=\"select\">select</option>\n            {technologydropdown?.map((e)=>{\n                    return(\n                      <option value={e}>{e}</option>\n                    )\n                  })}\n          </select>\n          \n\n          </div>\n          <div className=\"py-0\">\n          <label htmlFor=\"\" className=\"w-100\">Title</label>\n          <input type=\"text\" className=\"w-100 rounded-pill\" value={FilterName}  onChange={(e)=>{\n\t\t\t\t\tsetFilterName(e.target.value)}} />\n          \n\n          </div>\n\n          <div className=\"pt-4 \">\n            <h5 className=\"text-center\">Monthly Budget</h5>\n          </div>\n          <div >\n            <label htmlFor=\"\" className=\"w-100\">Start From</label>\n            <input type=\"number\" className=\"w-100 rounded-pill\" value={StartFrom} onChange={(e)=>{setStartFrom(e.target.value)}}/>\n          </div>\n          <div>\n            <label htmlFor=\"\" className=\"w-100\">End To</label>\n            <input type=\"number\" className=\"w-100 rounded-pill\"value={EndFrom} onChange={(e)=>{setEndFrom(e.target.value)}}/>\n          </div>\n\n          <div className=\"pt-2 \">\n            <h5 className=\"text-center\">Date</h5>\n          </div>\n          <div>\n\n            <label htmlFor=\"\" className=\"w-100\">Start Date</label>\n            <input type=\"date\" className=\"w-100 rounded-pill px-1\" value={StartDate} onChange={(e)=>{setStartDate(e.target.value)}}/>\n          </div>\n          <div>\n            <label htmlFor=\"\" className=\"w-100\">End Date</label>\n            <input type=\"date\" className=\"w-100 rounded-pill px-1\" value={EndDate} onChange={(e)=>{setEndDate(e.target.value)}}/>\n          </div>\n\n          </div>\n      </div>\n\n      <div className=\"col-10\">\n        <div className=\"d-flex justify-content-between px-5\">\n      <h1 className=\"text-center\">Reports</h1>\n      <div className=\"py-2\">\n      <select name=\"\" id=\"\" value={List} className=\"rounded-pill py-2 px-5\"\n      onChange={(e)=>{\n        setSearchfilter({...searchfilter,users:e.target.value})\n        // console.log(e.target.value)\n      }}\n      >\n      <option value=\"\">By User</option>\n      {List?.map((e)=>{\n       \n        return(\n          <>\n          \n          <option value={e.id} >{e.vname}</option>\n          </>\n        )\n      })}\n        \n      </select>\n      </div>\n      </div>\n      <div className=\"px-5 py-2\">\n        \n          <table class=\"table\">\n   <thead className=\"thead-dark\">\n   <tr>\n              <th>Sr no</th>\n              {searchfilter.serchon == \"Project\"&&\n              <><th>Project Title</th>\n              <th>Project Technology</th>\n              <th>Type Of Project</th>\n              <th>Hire Monthly Budget</th>\n              <th>Project Process</th>\n              <th>Status</th>\n              <th>Action</th>\n              </>\n              }\n               {searchfilter.serchon == \"Inquiry\"&&\n              <><th>Inquiry Title</th>\n              <th>Inquiry Technology</th>\n              <th>Type Of Inquiry</th>\n              <th>Hire Monthly Budget</th>\n              \n              <th>Status</th>\n              <th>Action</th>\n              </>\n              }\n               {searchfilter.serchon == \"Lead\"&&\n              <><th>Project Title</th>\n              <th>Project Technology</th>\n              <th>Type Of Project</th>\n              <th>Hire Billing Amount</th>\n              <th>Hire Duration</th>\n              \n              <th>Status</th>\n              <th>Action</th>\n              </>\n              }\n            </tr>\n  </thead>\n  <tbody>\n  {currentItem?.map((e,index) => {\n            return (\n              <tr>\n                <td>{index+1}</td>\n                {searchfilter.serchon == \"Project\"&&<>\n                <td>{e.vTitleProject}</td>\n                <td>{e.vTechnology}</td>\n               <td>{e.eTypeOfProject}</td>\n                <td>{e.vHireMonthlyBudget}</td>\n                <td>{e.projectprogress}</td>\n                <td>{e.eStatus}</td>\n                <td>\n                  <Link to={\"\"}>\n                  view\n                  </Link>\n                </td>\n               \n                </>}\n                {searchfilter.serchon == \"Inquiry\"&&<>\n                <td>{e.vTitle}</td>\n                <td>{e.vTechnology}</td>\n               <td>{e.eTypeofInquiry}</td>\n                <td>{e.vHireMonthlyBudget}</td>\n                \n                <td>{e.eStatus}</td>\n                <td>\n                  <Link to={\"\"}>\n                  view\n                  </Link>\n                </td>\n               \n                </>}\n                {searchfilter.serchon == \"Lead\"&&<>\n                <td>{e.vTitleProject}</td>\n                <td>{e.vTechnology}</td>\n               <td>{e.eTypeOfProject}</td>\n                <td>{e.fHireBillingAmount}</td>\n                <td>{e.vHireDuration}</td>\n                <td>{e.eStatus}</td>\n                <td>\n                  <Link to={\"\"}>\n                  view\n                  </Link>\n                </td>\n               \n                </>}\n                \n              </tr>\n            );\n          })}\n  </tbody>\n</table>\n<div className=\"pagination\">\n\n<ReactPaginate\nbreakLabel=\"...\"\nnextLabel=\"next >\"\nonPageChange={handlePageClick}\npageRangeDisplayed={3}\npageCount={pageCount}\npreviousLabel=\"< previous\"\nrenderOnZeroPageCount={null}\nbreakClassName={'page-item'}\nbreakLinkClassName={'page-link'}\ncontainerClassName={'pagination'}\npageClassName={'page-item'}\npageLinkClassName={'page-link'}\npreviousClassName={'page-item'}\npreviousLinkClassName={'page-link'}\nnextClassName={'page-item'}\nnextLinkClassName={'page-link'}\nactiveClassName={'active'}\n\n\n/>\n</div>\n</div>\n\n      </div>\n    </div>\n    \n    // <div>\n    //   <div>\n    //     <div>\n    //       <input\n    //         type=\"radio\"\n    //         name=\"serchon\"\n    //         id=\"\"\n    //         value={\"Project\"}\n    //         checked={searchfilter.serchon == \"Project\" ? \"checked\" : \"\"}\n    //       />\n    //       <label htmlFor=\"\">Project</label>\n    //       <input\n    //         type=\"radio\"\n    //         name=\"serchon\"\n    //         id=\"\"\n    //         value={\"Inquiry\"}\n    //         checked={searchfilter.serchon == \"Inquiry\" ? \"checked\" : \"\"}\n    //       />\n    //       <label htmlFor=\"\">Inquiry</label>\n    //       <input\n    //         type=\"radio\"\n    //         name=\"serchon\"\n    //         id=\"\"\n    //         value={\"Lead\"}\n    //         checked={searchfilter.serchon == \"Lead\" ? \"checked\" : \"\"}\n    //       />\n    //       <label htmlFor=\"\">Lead</label>\n    //     </div>\n    //     <div>\n    //       <label htmlFor=\"\">Technology</label>\n    //       <input type=\"radio\" name=\"\" id=\"\" />\n    //       <label htmlFor=\"\">Project</label>\n    //     </div>\n    //     <div>\n    //       <label htmlFor=\"\">Title</label>\n    //       <input type=\"radio\" name=\"\" id=\"\" />\n    //       <label htmlFor=\"\">Project</label>\n    //     </div>\n    //     <div>\n    //       <label htmlFor=\"\">User</label>\n    //       <select name=\"\" id=\"\">\n    //         <option value=\"\"></option>\n    //       </select>\n    //     </div>\n    //     <div>\n    //       <label htmlFor=\"\"></label>\n    //     </div>\n    //     <div>\n    //       <label htmlFor=\"\">Monthly Budget</label>\n    //       <div>\n    //         <label htmlFor=\"\">Start</label>\n    //       </div>\n    //       <div>\n    //         <label htmlFor=\"\">End</label>\n    //       </div>\n    //     </div>\n    //     <div>\n    //       <div>\n    //         <label htmlFor=\"\">Starting Date</label>\n    //       </div>\n    //       <div>\n    //         <label htmlFor=\"\">Ending Date</label>\n    //       </div>\n    //     </div>\n    //   </div>\n    //   <div>\n        // {/* <table>\n        //   <thead>\n        //     <tr>\n        //       <th>Sr No.</th>\n        //       {searchfilter.serchon == \"Project\" ? <th>Project Title</th> : \"\"}\n        //       {searchfilter.serchon == \"Project\" ? (\n        //         <th>Project Technology</th>\n        //       ) : (\n        //         \"\"\n        //       )}\n        //          {searchfilter.serchon !== \"Inquiry\"?<th>Project Type</th>:\"\"}\n        //          {searchfilter.serchon == \"Inquiry\"?<th>Inquiry Type</th>:\"\"}\n        //          {searchfilter.serchon == \"Inquiry\"?<th>Inquiry Title</th>:\"\"}\n        //          {searchfilter.serchon == \"Inquiry\"?<th>Monthly Budget</th>:\"\"}\n        //       {searchfilter.serchon == \"Project\" ? (\n        //         <th>Hire Monthly budget</th>\n        //       ) : (\n        //         \"\"\n        //       )}\n        //       {searchfilter.serchon == \"Project\" ? (\n        //         <th>Project Progress</th>\n        //       ) : (\n        //         \"\"\n        //       )}\n        //       {searchfilter.serchon !== \"Project\" ? <th> Technology</th> : \"\"}\n        //       {searchfilter.serchon !== \"Project\" ? <th> Title</th> : \"\"}\n        //       {searchfilter.serchon !== \"Project\" ? <th> Technology</th> : \"\"}\n        //       {searchfilter.serchon == \"Lead\" ? (\n        //         <th> Hire Billing Amount</th>\n        //       ) : (\n        //         \"\"\n        //       )}\n        //       {searchfilter.serchon == \"Lead\" ? <th> Hire Duration</th> : \"\"}\n        //       <th> Status</th>\n        //     </tr>\n        //   </thead>\n        // </table> */}\n//         <div className=\"px-5 py-2\">\n//          <table class=\"table\">\n//   <thead className=\"thead-dark\">\n//   <tr>\n//               <th>Sr No.</th>\n//               {searchfilter.serchon == \"Project\" ? <th>Project Title</th> : \"\"}\n//               {searchfilter.serchon == \"Project\" ? (\n//                 <th>Project Technology</th>\n//               ) : (\n//                 \"\"\n//               )}\n//                  {searchfilter.serchon !== \"Inquiry\"?<th>Project Type</th>:\"\"}\n//                  {searchfilter.serchon == \"Inquiry\"?<th>Inquiry Type</th>:\"\"}\n//                  {searchfilter.serchon == \"Inquiry\"?<th>Inquiry Title</th>:\"\"}\n//                  {searchfilter.serchon == \"Inquiry\"?<th>Monthly Budget</th>:\"\"}\n//               {searchfilter.serchon == \"Project\" ? (\n//                 <th>Hire Monthly budget</th>\n//               ) : (\n//                 \"\"\n//               )}\n//               {searchfilter.serchon == \"Project\" ? (\n//                 <th>Project Progress</th>\n//               ) : (\n//                 \"\"\n//               )}\n//               {searchfilter.serchon !== \"Project\" ? <th> Technology</th> : \"\"}\n//               {searchfilter.serchon !== \"Project\" ? <th> Title</th> : \"\"}\n//               {searchfilter.serchon !== \"Project\" ? <th> Technology</th> : \"\"}\n//               {searchfilter.serchon == \"Lead\" ? (\n//                 <th> Hire Billing Amount</th>\n//               ) : (\n//                 \"\"\n//               )}\n//               {searchfilter.serchon == \"Lead\" ? <th> Hire Duration</th> : \"\"}\n//               <th> Status</th>\n//             </tr>\n//   </thead>\n//   <tbody>\n  \n//   </tbody>\n// </table>\n// </div>\n//       </div>\n//     </div>\n\n\n  );\n};\n\nexport default Reports;\n","/var/www/html/github/inhouse/src/pages/expanse/expanse.jsx",[],[],"/var/www/html/github/inhouse/src/pages/inquiry view/inquiry_view.jsx",["836","837","838","839","840","841","842","843","844","845","846","847","848","849","850","851","852","853","854","855","856","857","858","859","860","861","862","863","864","865","866","867","868","869"],[],"import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport Sidebar from \"../sidebar/sidebar\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { sourcelist,technologylist } from \"../../constfiles\";\nconst Iview=()=>{\n\n  const[isUpdate,setIsUpdate] = useState(false)\n  const[updated, setUpdated]= useState(false)\n  const [error, setError] = useState({})\n    const navigate = useNavigate();\n    const { projectid } = useParams();\n    const [selectedFile, setSelectedFile] = useState();\n    const [Sourcelistdropdown,setSourcelistdropdown] = useState(sourcelist);\n    const [technologydropdown] = useState(technologylist);\n    const [doc,setDoc] = useState([])\n    // const [updateForm, SetUpdateForm] = useState({});\n    const { inquiryid } = useParams();\n    // alert(inquiryid);\n    const [data, setData] = useState({\n      inquiryid: inquiryid,\n    });     \n\n    // alert(inquiryid)\n  \n    let handleChange = (e) => {\n      let name = e.target.name;\n      let value = e.target.value;\n      setData({ ...data, [name]: value });\n      setIsUpdate(true)\n    };\n\n\n\n\n    const isvalid = (verificationdata) => {\n      let errors = {};\n     \n      // if (\n      //   verificationdata.CompanyName == undefined ||\n      //   verificationdata.CompanyName == \"\"\n      // ) {\n      //   errors.CompanyName = \"Company name is Required\";\n      // } else if (\n      //   !/^([a-zA-Z]+\\s)*[a-zA-Z]+$/.test(verificationdata.CompanyName)\n      // ) {\n      //   errors.CompanyName = \"Company name is not valid \";\n      // }\n      if (\n        verificationdata.eTypeofInquiry == undefined ||\n        verificationdata.eTypeofInquiry == \"\"\n      ) {\n        errors.eTypeofInquiry = \"Field should not be empty\";\n      } \n      if (\n        verificationdata.vTitle == undefined ||\n        verificationdata.vTitle == \"\"\n      ) {\n        errors.vTitle = \"Field should not be empty\";\n      } \n      if (\n        verificationdata.vTechnology == undefined ||\n        verificationdata.vTechnology == \"\"\n      ) {\n        errors.vTechnology = \"Field should not be empty\";\n      } \n      if (\n        verificationdata.vSourceOfInquiry == undefined ||\n        verificationdata.vSourceOfInquiry == \"\"\n      ) {\n        errors.vSourceOfInquiry = \"Field should not be empty\";\n      } \n      if (\n        verificationdata.tDescription == undefined ||\n        verificationdata.tDescription == \"\"\n      ) {\n        errors.tDescription = \"Field should not be empty\";\n      } \n      if (\n        verificationdata.vHireDuration == undefined ||\n        verificationdata.vHireDuration == \"\"\n      ) {\n        errors.vHireDuration = \"Field should not be empty\";\n      } \n      if (\n        verificationdata.vHireMonthlyBudget == undefined ||\n        verificationdata.vHireMonthlyBudget == \"\"\n      ) {\n        errors.vHireMonthlyBudget = \"Field should not be empty\";\n      } \n      if (\n        verificationdata.vExperienceRequired == undefined ||\n        verificationdata.vExperienceRequired == \"\"\n      ) {\n        errors.vExperienceRequired = \"Field should not be empty\";\n      } \n      if (\n        verificationdata.eStatus == undefined ||\n        verificationdata.eStatus == \"\"\n      ) {\n        errors.eStatus = \"Field should not be empty\";\n      } \n    \n      return errors;\n    };\n\n    useEffect(() => {\n      if (Object.keys(data).length != 0) {\n        setError(isvalid(data));\n      } else {\n        \n        return;\n      }\n    }, [data]);\n  \n    const singleapi = async (inquiryid) => {\n      const result = await fetch(\n        `${process.env.REACT_APP_APIURL}/inquiry/${inquiryid}`,\n        {\n          method: \"get\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"Token\")}`,\n          },\n        }\n      );\n  // localStorage.setItem(\"id\" ,inquiryid)\n      const apiresponse = await result.json();\n      const check = apiresponse.inquirylist;\n      setData({ ...data, ...check[0] });\n      setDoc(check)\n      // alert(JSON.stringify(check));\n      // console.log(check);\n    };\n  \n   \n  \n   \n  \n    useEffect(() => {\n      singleapi(inquiryid);\n      \n     \n    }, []);\n  \n    useEffect(() => {\n     \n    }, [data]);\n  \n  \n      \n      \n        const inquiryData = (e) => {\n          const formData = new FormData();\n          if (selectedFile != undefined) {\n              for (let i = 0; i < selectedFile.length; i++) {\n                  formData.append(\"mediafiles\", selectedFile[i]);\n              }\n            }\n            formData.append(\"inquiryid\", inquiryid);\n            const token = localStorage.getItem(\"Token\");\n      \n              formData.append(\"eTypeofInquiry\", data.eTypeofInquiry);\n              formData.append(\"vTitle\", data.vTitle);\n              formData.append(\"vTechnology\", data.vTechnology);\n              formData.append(\"vSourceOfInquiry\", data.vSourceOfInquiry);\n              formData.append(\"tDescription\", data.tDescription);\n              formData.append(\"vHireDuration\", data.vHireDuration);\n              formData.append(\"vHireMonthlyBudget\", data.vHireMonthlyBudget);\n              formData.append(\"vExperienceRequired\", data.vExperienceRequired);\n              // formData.append(\"vendorid\", data.vendorid);\n              formData.append(\"eStatus\", data.eStatus);\n             \n              const apicall = () => {\n                  // alert(JSON.stringify(formData));\n                  const apidata = axios({\n                      method: \"put\",\n                      url: `${process.env.REACT_APP_APIURL}/inquiry/${inquiryid}`,\n                      data: formData,\n                      headers: {\n                          Authorization: `Bearer ${localStorage.getItem(\"Token\")}`,\n                          \"Content-Type\": \"multipart/form-data\",\n                      },\n                  })\n                  // console.log(apidata);\n                  setSelectedFile(undefined);\n                  const respo = apidata.data;\n                  const check = respo?.Message;\n                  setUpdated(true)\n                  setIsUpdate(false)\n                };\n              try {\n                // console.log(error)\n                if(isUpdate && Object.keys(error).length==0){\n                  apicall();\n                  singleapi(inquiryid);\n                }\n                \n                \n              } catch (e) {\n                  \n              }\n              setSelectedFile(null);\n      }\n      \n       \n      const uploadimage = (e) => {\n        // singleapi(inquiryid);\n        setIsUpdate(true)\n        setSelectedFile(e.target.files);\n        // console.log(e.target.files)\n       \n      };\n     \n  \n    const handlenavi = () => {\n      navigate(  \"/project/\" + `${inquiryid}`   );\n    };\n    const handleLead=()=>{\n      navigate(  \"/lead/\" + `${inquiryid}`  );\n    }\n    useEffect(()=>{\n// console.log(error)\n    },[error])\n    return(\n        <>\n\n\n          {/* <Header/> */}\n          <Sidebar IsSales={true}/> \n         <div className='set'>\n      <div className=\"container my-3 body p-5\">\n        <div className=\"row \">\n          <div className=\"col-12 text-center mb-2 \">\n            <h1 className=\"title\">INQUIRY</h1>\n          </div>\n\n          {/* <div className=\"col-12 text-left mt-5 \">\n            <h3 className=\"title\">Project Details</h3>\n          </div> */}\n\n          <div>\n            <div className=\" col-xxl-12 col-xl-12 col-lg-12 col-md-6 col-sm-6 my-2 d-inline-flex\">\n              <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\" className=\"d-block\">\n                  Type of Inquire\n                </label>\n               \n\n                {/* <select className=\"formcontrol d-block dropdownWidth mb-3\" name=\"eTypeofInquiry\" value={inquiryform.eTypeofInquiry} onChange={handleChange}>\n                        <option>Select</option>\n                        <option value=\"Hire\">Hire</option>\n                        <option value=\"Project Basis\">Project Basis</option>\n                        <option value=\"Fix Cost - Less than 2 Weeks\">Fix Cost - Less than 2 Weeks</option>\n                    </select> */}\n\n\n\n                    <select\n            className=\"form-control rounded-pill mt-2\"\n            type=\"text\"\n            name=\"eTypeofInquiry\"\n            placeholder=\"Type of Inquiry\"\n            value={data.eTypeofInquiry}\n            onChange={handleChange}\n            disabled\n          >\n            <option value=\"\">Select</option>\n            <option value=\"Hire\">Hire</option>\n            <option value=\"Project Basis\">Project Basis</option>\n            <option value=\"Fix Cost - Less than 2 weeks\">\n              Fix Cost - Less than 2 weeks\n            </option>\n          </select>\n          {error.eTypeofInquiry?<p style={{color:\"red\"}}>{error.eTypeofInquiry}</p>:\"\"}\n              </div>\n\n              <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\">Title</label>\n                {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vTitle\" value={inquiryform.vTitle} onChange={handleChange} placeholder=\"Inquiry Title\" /> */}\n                <input\n                className=\"form-control rounded-pill mt-2\"\n            type=\"text\"\n            placeholder=\"\"\n            name=\"vTitle\"\n            value={data.vTitle}\n            disabled\n            onChange={handleChange}\n          />\n          {error.vTitle?<p style={{color:\"red\"}}>{error.vTitle}</p>:\"\"}\n              </div>\n            </div>\n            <div className=\"col-12 my-2 d-inline-flex \">\n              <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\" className=\"d-block\">\n                  Technology\n                </label>\n                {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vTechnology\" value={inquiryform.vTechnology} onChange={handleChange} placeholder=\"Inquiry Technology\" /> */}\n                {/* <input\n            type=\"text\"\n            className=\"form-control rounded-pill mt-2\"\n            placeholder=\"\"\n            name=\"vTechnology\"\n            value={data.vTechnology}\n            onChange={handleChange}\n          /> */}\n           <select name=\"vTechnology\" id=\"\"\n                // {...register('vTechnology', { required: true })}\n                className=\"form-control rounded-pill mt-2\" \n                onChange={handleChange}\n                disabled\n                value={data.vTechnology}\n                >\n                  <option value=\"\">select</option>\n                  {technologydropdown.map((e)=>{\n                    return(\n                      <option value={e}>{e}</option>\n                    )\n                  })}\n                </select>\n          {error.vTechnology?<p style={{color:\"red\"}}>{error.vTechnology}</p>:\"\"}\n              </div>\n\n              <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\">Source of Inquiry</label>\n                {/* <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vSourceOfInquiry\" value={inquiryform.vSourceOfInquiry} onChange={handleChange} placeholder=\"Source of Inquiry\" /> */}\n                {/* <input\n            type=\"text\"\n            className=\"form-control rounded-pill mt-2\"\n            placeholder=\"\"\n            name=\"vSourceOfInquiry\"\n            value={data.vSourceOfInquiry}\n            onChange={handleChange}\n          /> */}\n           <select name=\"vSourceOfInquiry\" id=\"\"\n                // {...register('vSourceOfInquiry', { required: true })}\n                className=\"form-control rounded-pill mt-2\"\n                onChange={handleChange}\n                disabled\n                value={data.vSourceOfInquiry}\n                >\n                  <option value=\"\">select</option>\n                {Sourcelistdropdown.map((e)=>{\nconsole.log(\"here is source lisr\",e)\n                  return <option value={e}>{e}</option>\n                })\n                }\n                </select>\n          {error.vSourceOfInquiry?<p style={{color:\"red\"}}>{error.vSourceOfInquiry}</p>:\"\"}\n              </div>\n            </div>\n            <div className=\"col-xxl-12 col-xl-12 col-lg-12 col-md-6 col-sm-6 my-2 d-inline-flex  \">\n              <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\">Description</label>\n                {/* <textarea className=\"inputField col-12 mb-3\" name=\"tDescription\" value={inquiryform.tDescription} onChange={handleChange} placeholder=\"Description\"></textarea> */}\n                <input\n            type=\"text\"\n            className=\"form-control rounded-pill mt-2\"\n            placeholder=\"\"\n            disabled\n            name=\"tDescription\"\n            value={data.tDescription}\n            onChange={handleChange}\n          />\n          {error.tDescription?<p style={{color:\"red\"}}>{error.tDescription}</p>:\"\"}\n              </div>\n\n              <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\">Hire Duration</label>\n                {/* <textarea className=\"inputField col-12 mb-3\" name=\"tDescription\" value={inquiryform.tDescription} onChange={handleChange} placeholder=\"Description\"></textarea> */}\n                <input\n            type=\"text\"\n            className=\"form-control rounded-pill mt-2\"\n            placeholder=\"\"\n            disabled\n            name=\"vHireDuration\"\n            value={data.vHireDuration}\n            onChange={handleChange}\n          />\n          {error.vHireDuration?<p style={{color:\"red\"}}>{error.vHireDuration}</p>:\"\"}\n              </div>\n\n\n          \n\n\n        </div>\n\n\n\n\n        <div className=\"col-xxl-12 col-xl-12 col-lg-12 col-md-6 col-sm-6 my-2 d-inline-flex  \">\n              <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\">Hire Monthly Budget</label>\n                {/* <textarea className=\"inputField col-12 mb-3\" name=\"tDescription\" value={inquiryform.tDescription} onChange={handleChange} placeholder=\"Description\"></textarea> */}\n                <input\n            type=\"text\"\n            disabled\n            className=\"form-control rounded-pill mt-2\"\n            placeholder=\"\"\n            name=\"vHireMonthlyBudget\"\n            value={data.vHireMonthlyBudget}\n            onChange={handleChange}\n          />\n          {error.vHireMonthlyBudget?<p style={{color:\"red\"}}>{error.vHireMonthlyBudget}</p>:\"\"}\n              </div>\n\n              <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\">Experience Required</label>\n                {/* <textarea className=\"inputField col-12 mb-3\" name=\"tDescription\" value={inquiryform.tDescription} onChange={handleChange} placeholder=\"Description\"></textarea> */}\n                <input\n            type=\"text\"\n            disabled\n            className=\"form-control rounded-pill mt-2\"\n            placeholder=\"\"\n            name=\"vExperienceRequired\"\n            value={data.vExperienceRequired}\n            onChange={handleChange}\n          />\n          {error.vExperienceRequired?<p style={{color:\"red\"}}>{error.vExperienceRequired}</p>:\"\"}\n              </div>\n\n\n          \n\n\n        </div>\n\n\n        <div className=\"col-xxl-12 col-xl-12 col-lg-12 col-md-6 col-sm-6 my-2 d-inline-flex  \">\n              <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\">Document:</label><br />\n                {/* <textarea className=\"inputField col-12 mb-3\" name=\"tDescription\" value={inquiryform.tDescription} onChange={handleChange} placeholder=\"Description\"></textarea> */}\n                <input\n                className=\"form-control rounded-pill mt-2\"\n            type=\"file\"\n            disabled\n            name=\"mediafiles\"\n            id=\"upload\"\n            accept=\"image/*\"\n            onChange={uploadimage}\n            multiple\n          />\n\n              </div>\n\n               <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\">Status</label>\n\n                  <select\n                    className=\"form-control rounded-pill mt-2\"\n              type=\"text\"\n              disabled\n              name=\"eStatus\"\n              placeholder=\"Type of Project\"\n              value={data.eStatus}\n              onChange={handleChange}\n            >\n              <option value=\"\">Select</option>\n              <option value=\"Converted\">Converted</option>\n              <option value=\"InProgress\">InProgress</option>\n              <option value=\"Cancelled\">Cancelled</option>\n              <option value=\"Rejected\">Rejected</option>\n              <option value=\"OnHold\">OnHold</option>\n              <option value=\"No Response From Client\">No Response From Client</option>\n              \n              \n            </select>\n            {error.eStatus?<p style={{color:\"red\"}}>{error.eStatus}</p>:\"\"}\n                </div> \n\n          \n\n\n        </div>\n\n\n        <h3 >Documents</h3>\n         <div className=\"col-xxl-12 col-xl-12 col-lg-12 col-md-6 col-sm-6 my-2 d-inline-flex  \">\n              <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\">Document Title:</label>\n\n                <br />\n                 <span  className=\"inputField col-12 mb-3\">\n                {data.Documenttitle}\n              </span>\n              {/* <br /> */}\n               {/* <span className=\"text-primary\">Click to Download</span> */}\n               \n              </div>\n\n              <div className=\"col-6  my-2 px-3\">\n                <label htmlFor=\"\">Document Name:</label>\n                <span className=\"text-primary m-2\">Click on file to view</span>\n\n                {\n  doc.length>0?doc.map((e)=>{\n// console.log(e,\"e is here\")\n\n// Documentname,Documenttitle\nreturn (\n  \n  <>\n   \n <br />\n \n  <a href={`${process.env.REACT_APP_APIURL}/${e.Documentname}`} target=\"_blank\" className=\"inputField col-12 mb-3\"> {e.Documenttitle}</a>\n  \n  </>\n)\n  }):\"\"\n}\n\n              </div>\n\n\n          \n\n\n        </div> \n\n\n        \n\n\n\n\n\n        <div className=\"col-xxl-12 col-xl-12 col-lg-12 col-md-6 col-sm-6 my-2 d-inline-flex  \">\n              <div className=\"col-6  my-2 px-3\">\n              {/* <label htmlFor=\"\">Company Name</label>\n                <AsyncSelect\n                        className=\"mb-3\"\n                        cacheOptions\n                        defaultOptions\n                        value={selectedvalue}\n                        getOptionLabel={e => e.vCompanyName}\n                        getOptionValue={e => e.id}\n                        loadOptions={fetchData}\n                        onInputChange={handleInputChange}\n                        onChange={handlechange}\n                    />\n\n                <button\n                  type=\"button\"\n                  className=\"btn btn-outline-dark\"\n                  data-bs-toggle=\"modal\"\n                  data-bs-target=\"#exampleModal\"\n                >\n                  Add Company\n                </button>\n\n                <div\n                  className=\"modal fade\"\n                  id=\"exampleModal\"\n                  tabindex=\"-1\"\n                  aria-labelledby=\"exampleModalLabel\"\n                  aria-hidden=\"true\"\n                >\n                  <div className=\"modal-dialog\">\n                    <div className=\"modal-content\">\n                      <div className=\"modal-header\">\n                        <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n                          Company Details\n                        </h5>\n                        <button\n                          type=\"button\"\n                          className=\"btn-close\"\n                          data-bs-dismiss=\"modal\"\n                          aria-label=\"Close\"\n                        ></button>\n                      </div>\n                      <div className=\"modal-body\">\n                        <div>\n                          <div className=\"form-check d-inline-flex mb-3\">\n                            <input\n                              className=\"form-check-input\"\n                              type=\"radio\"\n                              id=\"flexRadioDefault1\"\n                              onChange={handleChange} value=\"Consultant\" name=\"eClienttype\"\n                            />\n                            <label\n                              className=\"form-check-label\"\n                              for=\"flexRadioDefault1\"\n                            >\n                              Consultant\n                            </label>\n                          </div>\n                          <div className=\"form-check d-inline-flex mx-3\">\n                            <input\n                              className=\"form-check-input\"\n                              type=\"radio\"\n                              id=\"flexRadioDefault2\"\n                              onChange={handleChange} value=\"Company\" name=\"eClienttype\"\n                            />\n                            <label\n                              className=\"form-check-label\"\n                              for=\"flexRadioDefault2\"\n                            >\n                              Company\n                            </label>\n                          </div>\n                        </div>\n                        <label htmlFor=\"\">Company Name</label>\n                        <input type=\"text\" className=\"inputField col-12 mb-3\"name=\"vCompanyName\" value={vendorform.vCompanyName} onChange={handleChange} />\n                        <label htmlFor=\"\">Address</label>\n                        <input type=\"text\" className=\"inputField col-12 mb-3\"   name=\"vAddress\" value={vendorform.vAddress} onChange={handleChange}/>\n                        <label htmlFor=\"\">Email</label>\n                        <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vEmail\" value={vendorform.vEmail} onChange={handleChange}/>\n                        <label htmlFor=\"\">Vendor Name</label>\n                        <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vVendorName\" value={vendorform.vVendorName} onChange={handleChange}/>\n                        <label htmlFor=\"\">Mobile</label>\n                        <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vMobile\" value={vendorform.vMobile} onChange={handleChange}/>\n                        <label htmlFor=\"\">Notes</label>\n                        <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"tNotes\" value={vendorform.tNotes} onChange={handleChange}/>\n                        <label htmlFor=\"\">City</label>\n                        <input type=\"text\" className=\"inputField col-12 mb-3\"  name=\"vCity\" value={vendorform.vCity} onChange={handleChange}/>\n                        <label htmlFor=\"\">State</label>\n                        <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vState\" value={vendorform.vState} onChange={handleChange}/>\n                       \n                      </div>\n                      <div className=\"modal-footer\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-secondary\"\n                          data-bs-dismiss=\"modal\"\n                        >\n                          Close\n                        </button>\n                        <button type=\"button\" onClick={AddVendor} className=\"btn btn-outline-dark\">\n                          Save changes\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>*/}\n              </div> \n\n              <div className=\"col-6  my-2 px-3\">\n              {/* <label htmlFor=\"\">Company Name</label>\n                <AsyncSelect\n                        className=\"mb-3\"\n                        cacheOptions\n                        defaultOptions\n                        value={selectedvalue}\n                        getOptionLabel={e => e.vCompanyName}\n                        getOptionValue={e => e.id}\n                        loadOptions={fetchData}\n                        onInputChange={handleInputChange}\n                        onChange={handlechange}\n                    />\n\n                <button\n                  type=\"button\"\n                  className=\"btn btn-outline-dark\"\n                  data-bs-toggle=\"modal\"\n                  data-bs-target=\"#exampleModal\"\n                >\n                  Add Company\n                </button>\n\n                <div\n                  className=\"modal fade\"\n                  id=\"exampleModal\"\n                  tabindex=\"-1\"\n                  aria-labelledby=\"exampleModalLabel\"\n                  aria-hidden=\"true\"\n                >\n                  <div className=\"modal-dialog\">\n                    <div className=\"modal-content\">\n                      <div className=\"modal-header\">\n                        <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n                          Company Details\n                        </h5>\n                        <button\n                          type=\"button\"\n                          className=\"btn-close\"\n                          data-bs-dismiss=\"modal\"\n                          aria-label=\"Close\"\n                        ></button>\n                      </div>\n                      <div className=\"modal-body\">\n                        <div>\n                          <div className=\"form-check d-inline-flex mb-3\">\n                            <input\n                              className=\"form-check-input\"\n                              type=\"radio\"\n                              id=\"flexRadioDefault1\"\n                              onChange={handleChange} value=\"Consultant\" name=\"eClienttype\"\n                            />\n                            <label\n                              className=\"form-check-label\"\n                              for=\"flexRadioDefault1\"\n                            >\n                              Consultant\n                            </label>\n                          </div>\n                          <div className=\"form-check d-inline-flex mx-3\">\n                            <input\n                              className=\"form-check-input\"\n                              type=\"radio\"\n                              id=\"flexRadioDefault2\"\n                              onChange={handleChange} value=\"Company\" name=\"eClienttype\"\n                            />\n                            <label\n                              className=\"form-check-label\"\n                              for=\"flexRadioDefault2\"\n                            >\n                              Company\n                            </label>\n                          </div>\n                        </div>\n                        <label htmlFor=\"\">Company Name</label>\n                        <input type=\"text\" className=\"inputField col-12 mb-3\"name=\"vCompanyName\" value={vendorform.vCompanyName} onChange={handleChange} />\n                        <label htmlFor=\"\">Address</label>\n                        <input type=\"text\" className=\"inputField col-12 mb-3\"   name=\"vAddress\" value={vendorform.vAddress} onChange={handleChange}/>\n                        <label htmlFor=\"\">Email</label>\n                        <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vEmail\" value={vendorform.vEmail} onChange={handleChange}/>\n                        <label htmlFor=\"\">Vendor Name</label>\n                        <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vVendorName\" value={vendorform.vVendorName} onChange={handleChange}/>\n                        <label htmlFor=\"\">Mobile</label>\n                        <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vMobile\" value={vendorform.vMobile} onChange={handleChange}/>\n                        <label htmlFor=\"\">Notes</label>\n                        <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"tNotes\" value={vendorform.tNotes} onChange={handleChange}/>\n                        <label htmlFor=\"\">City</label>\n                        <input type=\"text\" className=\"inputField col-12 mb-3\"  name=\"vCity\" value={vendorform.vCity} onChange={handleChange}/>\n                        <label htmlFor=\"\">State</label>\n                        <input type=\"text\" className=\"inputField col-12 mb-3\" name=\"vState\" value={vendorform.vState} onChange={handleChange}/>\n                       \n                      </div>\n                      <div className=\"modal-footer\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-secondary\"\n                          data-bs-dismiss=\"modal\"\n                        >\n                          Close\n                        </button>\n                        <button type=\"button\" onClick={AddVendor} className=\"btn btn-outline-dark\">\n                          Save changes\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div> */}\n              </div>\n\n\n          \n\n\n        </div>\n       \n      </div>\n      {/* <h5 style={{color:\"green\", textAlign:\"center\"}}> {updated?\"Updated Successfully\":\"\"}</h5> */}\n     {/* {isUpdate? <button type=\"submit\" onClick={inquiryData}  className=\"mx-auto btn btn-outline-dark w-25\">\n            Update\n          </button>:\n          <button type=\"submit\" onClick={inquiryData} disabled  className=\"mx-auto btn btn-outline-dark w-25\">\n          Update\n        </button>\n          \n          }\n          <button type=\"submit\" onClick={handlenavi}  className=\"mx-auto  text-white bg-dark btn btn-outline-dark w-25\">\n            Convert into Project\n          </button>\n          <button type=\"submit\" onClick={handleLead}  className=\"mx-auto  text-white bg-dark btn btn-outline-dark w-25\">\n            Convert into Lead\n          </button> */}\n          <div className=\"text-center\">\n          <button type=\"submit\" onClick={() => navigate(-1)}  className=\" bg-dark text-white btn btn-outline-dark w-25\">\n            Back\n          </button>\n          </div>\n    </div>\n    </div>\n    </div>\n        </>\n    )\n}\n\nexport default Iview","/var/www/html/github/inhouse/src/pages/income/income.jsx",["870"],[],"import Sidebar from \"../sidebar/sidebar\";\nimport { Controller, useForm, useWatch } from 'react-hook-form';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Select from \"react-select\";\nimport axios from 'axios'\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\n\nconst Expanse = () => {\n  const currencyoptions = [\n    { label: '$', value: 'Dollar' },\n    { label: 'Inr', value: 'Rupees' }\n  ]\n\n  const [options, setOptions] = useState([])\n  // const [showcurrencyrate, setShowcurrencyrate] = useState(false)\n  const {\n    register,\n    handleSubmit,\n    control,\n    watch,\n\n    reset,\n    formState: { errors },\n  } = useForm({\n    defaultValues: {\n      Incomedate: '',\n      Givenform: 'Cash',\n      Amount: '',\n      Projectid: '',\n      Currencytype: ''\n    }\n  });\n  const watchShowAge = useWatch({\n    control,\n    name: \"Currencytype\",\n  });\n  console.log(\"firstName\", watchShowAge)\n  const postingdataonserver = async (data) => {\n    try {\n      console.log(\"income data\", data)\n      const formData = new FormData();\n      if (data.transactionfile.length !== 0) {\n        formData.append(\"transactionfile\", data.transactionfile)\n      }\n      formData.append(\"Incomedate\", data.Paiddate)\n      formData.append(\"Expencein\", data.Expencein)\n      formData.append(\"Givenform\", data.Givenform)\n      formData.append(\"Amount\", data.Amount)\n      formData.append(\"Projectid\", data.Projectid.value)\n      formData.append(\"Currencytype\", data.Currencytype.value)\n      formData.append(\"Currencyrate\", data.Currencyrate)\n      const postingexpense = await axios.post(\n        `${process.env.REACT_APP_APIURL}/transaction/income`, formData\n\n      );\n      await postingexpense.data;\n      reset();\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  const fetchingprojects = async () => {\n    const Projectfetching = await axios.get(\n      `${process.env.REACT_APP_APIURL}/projects`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"Token\")}`,\n      }\n    }\n    );\n    const projectlist = await Projectfetching.data;\n    console.log(\"projectlist\", projectlist)\n    let listofproject = []\n    for (const projects of projectlist?.userid) {\n      let createobj = {}\n      createobj.value = projects.id\n      createobj.label = projects.vTitleProject\n      listofproject.push(createobj)\n    }\n    setOptions(listofproject)\n  }\n  useEffect(() => {\n    fetchingprojects()\n    return () => {\n      // watchShowAge=\"\"\n    }\n  }, [])\n  useEffect(() => console.log(\"errors\", errors), [errors])\n  return (\n    <>\n      <Sidebar IsSales={true} />\n      <form onSubmit={handleSubmit(postingdataonserver)}>\n       <div className=\"set\">\n          {/* <div className=\"regbody\"> */}\n            {/* <div className=\"container\"> */}\n              {/* <div className=\"row d-inline-flex  justify-content-between\"> */}\n                <div >\n                  <label htmlFor=\"\">Income Amount</label>\n                  <input type=\"number\" {...register('Amount', {\n                  required: `Amount is required`,\n                  min: {\n                  value: 0,\n                  message: \"Minimum amount should be 0 atleast\"\n                  },\n                  max: 1000000\n                  })} \n                  />\n                  {errors.Amount && <p className=\"text-danger\">{errors.Amount.message}</p>}\n                </div>\n\n                <div>\n                  <label htmlFor=\"\">Income Date</label>\n                 <div >\n                  <Controller\n                  \n                    control={control}\n                    name=\"Incomedate\"\n                    rules={{\n                      required: {\n                        value: true,\n                        message: \"Please Choose a date\"\n                      }\n                    }}\n                    render={({ field: { onChange, onBlur, value } }) => (\n                      <DatePicker\n                        onChange={onChange} // send value to hook form\n                        onBlur={onBlur} // notify when input is touched/blur\n                        selected={value}\n                        minDate={new Date(new Date().getFullYear(), new Date().getMonth(), 1)}\n                        maxDate={new Date(new Date().getFullYear(), new Date().getMonth() + 1, 0)}\n                      />\n                    )}\n                  />\n                  {errors.Incomedate && <p className=\"text-danger\">{errors.Incomedate.message}</p>}\n                  </div>\n                </div>\n\n                <div>\n                  <label htmlFor=\"\">Project List</label>\n                  <Controller\n                    control={control}\n                    name=\"Projectid\"\n                    render={({ field: { onChange, onBlur, value, ref } }) => (\n                      <Select\n                        defaultValue={value}\n                        onChange={onChange}\n                        options={options}\n                      />\n                    )}\n                  />\n                  {errors.Projectid && <p className=\"text-danger\">{errors.Projectid.message}</p>}\n                </div>\n\n                <div>\n                  <label htmlFor=\"\">Payment Method</label>\n                      <div>\n                        <label htmlFor=\"\">Chaque</label>\n                        <input type=\"radio\" {...register(\"Givenform\")} value={\"Chaque\"} />\n                      </div>\n                      <div>\n                        <label htmlFor=\"\">Cash</label>\n                        <input type=\"radio\" {...register(\"Givenform\")} value={\"Cash\"} />\n                      </div>\n                      <div>\n                        <label htmlFor=\"\">NEFT</label>\n                        <input type=\"radio\" {...register(\"Givenform\")} value={\"NEFT\"} />\n                      </div>\n                        {/* <input type=\"number\" {...register('Expencein', { */}\n                        {/* required: `Amount is required` */}\n                        {/* })} /> */}\n                        {errors.Givenform && <p className=\"text-danger\">{errors.Givenform.message}</p>}\n                </div>\n                <div >\n                    <label className=\"label\" htmlFor=\"\">Currency List</label>\n                    {/* <input type=\"number\" {...register('Givenform', {\n                      required: `Amount is required`\n                    })} /> */}\n                    <Controller\n                    \n                      control={control}\n                      name=\"Currencytype\"\n                      render={({ field: { onChange, onBlur, value, ref } }) => (\n                        <Select\n                          defaultValue={value}\n                          onChange={onChange}\n                          options={currencyoptions}\n                        />\n                      )}\n                    />\n                    {errors.Currencytype && <p className=\"text-danger\">{errors.Currencytype.message}</p>}\n                </div>\n                  {\n                    watchShowAge?.value !== \"Rupees\" && watchShowAge && <>\n                      <div>\n                        <label htmlFor=\"\">Currency Rate to Inr Per </label>\n                        <input type=\"text\"\n                          placeholder=\"Rate of Inr per Currency\"\n                          {...register(\"Currencyrate\", {\n                            required: { value: true, message: \"Please Provide me Currency rate\" },\n                            min: { value: 10, message: \"Currency rate can't be less than 10 Rs\" },\n                            max: { value: 1000, message: \"Currency rate can't be greater than 1000 Rs\" }\n                          })} />\n                        {errors.Currencyrate && <p className=\"text-danger\">{errors.Currencyrate.message}</p>}\n                      </div>\n                    </>\n                  }\n                <div>\n                  <label htmlFor=\"\">Document</label>\n                  <input type=\"file\"  {...register(\"transactionfile\")} \n                  className=\" form-control rounded-pill mt-2\"/>\n                </div>\n                <button id=\"Sub-mit\" className=\"mx-auto btn btn-outline-dark w-25\" type=\"submit\">Submit</button>\n\n\n              {/* </div> */}\n            {/* </div> */}\n          {/* </div> */}\n        </div>      \n        \n        \n        \n\n\n\n      </form>\n    </>\n  )\n}\n\nexport default Expanse","/var/www/html/github/inhouse/src/pages/reportsdetails/reports.jsx",["871","872","873","874","875","876","877","878","879","880"],["881"],"/var/www/html/github/inhouse/src/pages/companylistings/index.jsx",["882"],[],"import axios from \"axios\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Index = () => {\n  const [companylist, setCompanylist] = useState([]);\n  const fetchingallcompanies = async () => {\n    try {\n      const fetchingcomany = await axios.get(\n        `${process.env.REACT_APP_APIURL}/vendor`\n      );\n      const fetchedcompnies = await fetchingcomany.data;\n      setCompanylist(fetchedcompnies.vendorlist);\n    } catch (e) {}\n  };\n  useEffect(() => {\n    fetchingallcompanies();\n  }, []);\n  return (\n    <div className=\"px-5 py-2\">\n      {/* <h1 className=\"text-center\">Company listing</h1> */}\n      {/* <table>\n        <thead>\n          <tr>\n            <th>Sr no.</th>\n            <th>Company Name</th>\n            <th>Go to Contact Person</th>\n          </tr>\n        </thead>\n        <tbody>\n          {companylist.map((e, index) => {\n            return (\n              <tr>\n                <td>{index+1}</td>\n                <td>{e.vCompanyName}</td>\n                <td>\n                  <Link to={`${e.id}`}>\n                    <a>Contact list</a>\n                  </Link>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table> */}\n\n      <table class=\"table\">\n  <thead className=\"thead-dark\">\n  <tr>\n            <th>Sr no.</th>\n            <th>Company Name</th>\n            <th>Go to Contact Person</th>\n          </tr>\n  </thead>\n  <tbody>\n  {companylist.map((e, index) => {\n            return (\n              <tr>\n                <td>{index+1}</td>\n                <td>{e.vCompanyName}</td>\n                <td>\n                  <Link to={`${e.id}`}>\n                    <a>Contact list</a>\n                  </Link>\n                </td>\n              </tr>\n            );\n          })}\n  </tbody>\n</table>\n\n\n\n    </div>\n  );\n};\n\nexport default Index;\n","/var/www/html/github/inhouse/src/pages/contactpersons/index.jsx",["883"],[],"import React from 'react'\nimport { useState ,useEffect} from 'react';\nimport { useParams,useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Index = () => {\n  const navigate = useNavigate()\n    const [contactpersonlist,setContactpersonlist]=useState([])\n    const {Companyid}=useParams()\n    const fetchingallcompanies = async () => {\n        try {\n          const fetchingcomanyemp = await axios.get(\n            `${process.env.REACT_APP_APIURL}/contactperson/${Companyid}`,{\n                headers: {\n                    Authorization: `Bearer ${localStorage.getItem(\"Token\")}`,\n                    \"Content-Type\": \"application/json\",\n                }\n            }\n\n          );\n          const fetchedcompnies = await fetchingcomanyemp.data;\n          console.log(fetchedcompnies.message)\n          setContactpersonlist(fetchedcompnies.message);\n        } catch (e) {}\n      };\n      useEffect(() => {\n        fetchingallcompanies();\n      }, []);\n\n      const handleBack=()=>{\n        navigate(\"/companylist\")\n      }\n  return (\n    <div className='px-5 py-2'>\n      <button type=\"submit\"  onClick={handleBack} className=\"mx-auto bg-dark text-white btn btn-outline-dark \">\n            Back\n          </button>\n         {/* <table>\n        <thead>\n          <tr>\n            <th>Sr no.</th>\n            <th>Contact Person Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          {contactpersonlist.map((e, index) => {\n            return (\n              <tr>\n                <td>{index+1}</td>\n                <td>{e.vName}</td>\n                <td>\n                  \n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table> */}\n       <table class=\"table\">\n  <thead className=\"thead-dark\">\n  <tr>\n            <th>Sr no.</th>\n            <th>Contact Person Name</th>\n          </tr>\n  </thead>\n  <tbody>\n  {contactpersonlist.map((e, index) => {\n            return (\n              <tr>\n                <td>{index+1}</td>\n                <td>{e.vName}</td>\n                <td>\n                  \n                </td>\n              </tr>\n            );\n          })}\n  </tbody>\n</table>\n    </div>\n  )\n}\n\nexport default Index","/var/www/html/github/inhouse/src/header/header.jsx",["884","885","886","887","888","889","890","891"],[],"import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./header.css\"\nimport { Link } from \"react-router-dom\";\nconst Header = ({ usertype }) => {\n  const navigate = useNavigate();\n  const handleLogout = () => {\n    localStorage.clear();\n    navigate(\"/login\");\n  };\n  return (\n    <>\n      <nav className=\"navbar navbar-dark bg-dark\">\n        <div className=\"container-fluid\">\n\n\n          {usertype === \"Sales\" &&\n\n            <div style={{ width: \"30%\", height: \"150%\", zIndex: \"100000\", marginRight: \"auto\" }} >\n              <ul className=\"navlist\" style={{ display: \"inline-flex \" }}>\n                <Link to=\"/sales_dash\" style={{ color: \"white\", padding: \"0 15px\" }}> <li  > Dashboard</li></Link>\n                {/* <select name=\"\" id=\"\">\n                  <option value=\"\">\n                </option>\n                </select> */}\n                <Link to=\"/inquiry_list\" style={{ color: \"white\", padding: \"0 15px\" }}> <li> Inquiries</li></Link>\n\n\n                <Link to=\"/project_list\" style={{ color: \"white\", padding: \"0 15px\" }}> <li> Projects</li></Link>\n                <Link to=\"/lead_list\" style={{ color: \"white\", padding: \"0 15px\" }}> <li> Leads</li></Link>\n              </ul>\n            </div>\n\n          }\n\n\n          {usertype == \"Sales\" && <span>\n\n\n            <a href=\"/inquiry\" className=\"li-link mx-4\"> Create Inquiry</a>\n\n            <button onClick={handleLogout} className=\"bg-dark border-0\"><a href=\"#\" className=\"btn btn-light rounded-pill\">Logout</a></button>\n          </span>}\n\n          {usertype == \"Admin\" &&\n\n            <div style={{ width: \"30%\", height: \"150%\", zIndex: \"100000\", marginRight: \"auto\" }} >\n              <ul className=\"navlist\" style={{ display: \"inline-flex \" }}>\n                <Link to=\"/admind\" style={{ color: \"white\", padding: \"0 15px\" }}> <li > Dashboard</li></Link>\n                {/* <select name=\"\" id=\"\" className=\"bg-dark text-white border-0 \">\n                  <option value=\"\">\n                <Link to=\"/inquiry_list\" style={{ color: \"white\", padding: \"0 15px\" }}> <li> Inquiries</li></Link>\n                </option>\n                </select> */}\n                <Link to=\"/inquiry_list\" style={{ color: \"white\", padding: \"0 15px\" }}> <li> Inquiries</li></Link>\n                <Link to=\"/project_list\" style={{ color: \"white\", padding: \"0 15px\" }}> <li> Projects</li></Link>\n                <Link to=\"/lead_list\" style={{ color: \"white\", padding: \"0 15px\" }}> <li> Leads</li></Link>\n                <Link to=\"/companylist\" style={{ color: \"white\", padding: \"0 15px\" }}> <li> Companies</li></Link>\n                <Link to=\"/reports\" style={{ color: \"white\", padding: \"0 15px\" }}> <li>Reports</li></Link>\n                <Link to=\"/detailreport\" style={{ color: \"white\", padding: \"0 15px\" }}><li>DetailedReport</li></Link>\n                <Link to=\"/income\" style={{ color: \"white\", padding: \"0 15px\" }}><li>Income</li></Link>\n                <Link to=\"/expense\" style={{ color: \"white\", padding: \"0 15px\" }}><li>Expense</li></Link>\n\n\n              </ul>\n            </div>\n\n          }\n          {usertype == \"Admin\" && <span>\n\n\n            <Link to=\"/register\"  className=\"li-link mx-4\">Register User</Link>\n            <Link to=\"/inquiry\"  className=\"li-link mx-4\">Create Inquiry</Link>\n\n            <button onClick={handleLogout} className=\"bg-dark border-0\"><a href=\"#\" className=\"btn btn-light rounded-pill\">Logout</a></button>\n          </span>}\n\n\n          {usertype == \"Developer\" &&\n\n            <div style={{ width: \"30%\", height: \"150%\", zIndex: \"100000\", marginRight: \"auto\" }} >\n              <ul className=\"navlist\" style={{ display: \"inline-flex \" }}>\n                <Link to=\"/devdash\" style={{ color: \"white\", padding: \"0 15px\" }}> <li> Dashboard</li></Link>\n                <Link to=\"/dev_task\" style={{ color: \"white\", padding: \"0 15px\" }}> <li> Tasks</li></Link>\n              </ul>\n            </div>\n\n          }\n\n          {usertype == \"Developer\" && <span>\n\n\n\n\n            <button onClick={handleLogout} className=\"bg-dark border-0\"><a href=\"#\" className=\"btn btn-light rounded-pill\">Logout</a></button>\n          </span>}\n        </div>\n      </nav>\n    </>\n  )\n}\n\n\nexport default Header","/var/www/html/github/inhouse/src/pages/filter.jsx",["892","893","894","895","896"],[],"import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport \"./filter.css\"\n\nconst Filter = (props)=>{\nconst [selectedFilter,setSelectedFilter] = useState()\nconst [FilterName, setFilterName] = useState()\nuseEffect(()=>{\n\tprops.tofilterdata({selectedFilter,FilterName})\n},[selectedFilter,FilterName])\n    return(\n        <>\n        <div className=\"container border border-2 rounded-pill   p-2\">\n\t<div className=\"row\" id=\"search\">\n\t\t{/* <form id=\"search-form\" action=\"\" method=\"POST\" enctype=\"multipart/form-data\"> */}\n      <div className=\"d-flex search\" >\n\t\t\n    <select onChange={(e)=>{setSelectedFilter(e.target.value)}} name=\"\" id=\"\" className=\"rounded-pill dropset\">\n\n<option value=\"\">--Search All--</option>\n<option value=\"title\">Title</option>\n<option value=\"technology\">Technology</option>\n{props.isPage==\"inquiry\"&&\n<option value=\"monthlybudget\">Monthly Budget</option>\n}\n{props.isPage==\"project\"&&\n<option value=\"monthlybudget\">Hire Monthly Budget</option>\n}\n{props.isPage==\"lead\"&&\n<option value=\"monthlybudget\">Hire Billing Amount</option>\n}\n</select>\n\t\t\t<div className=\"form-group col-xs-9 \">\n\t\t\t\t\n     \n\t\t\t\t{selectedFilter==\"monthlybudget\"?<input className=\"p-1 rounded-pill\" onChange={(e)=>{\n\t\t\t\t\tsetFilterName(e.target.value)\n\t\t\t\t}} type=\"number\" placeholder=\"Numbers Only\" />:\n\t\t\t\t<input className=\"p-1 rounded-pill\" onChange={(e)=>{\n\t\t\t\t\tsetFilterName(e.target.value)\n\t\t\t\t}} type=\"text\" placeholder=\"search here\" />}\n        {/* {/ <button type=\"submit\" class=\"btn btn-block btn-primary\">Search</button> /} */}\n\t\t\t</div>\n      </div>\n\t\t\t<div className=\"form-group col-xs-3\">\n\t\t\t\t\n\t\t\t</div>\n\t\t{/* </form> */}\n\t</div>\n\t<div className=\"row\" id=\"filter\">\n\t\t{/* <form>\n\t\t\t<div class=\"form-group col-sm-3 col-xs-6\">\n\t\t\t\t<select data-filter=\"make\" class=\"filter-make filter form-control\">\n\t\t\t\t\t<option value=\"\">Select Make</option>\n\t\t\t\t\t<option value=\"\">Show All</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t\t<div class=\"form-group col-sm-3 col-xs-6\">\n\t\t\t\t<select data-filter=\"model\" class=\"filter-model filter form-control\">\n\t\t\t\t\t<option value=\"\">Select Model</option>\n\t\t\t\t\t<option value=\"\">Show All</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t\t<div class=\"form-group col-sm-3 col-xs-6\">\n\t\t\t\t<select data-filter=\"type\" class=\"filter-type filter form-control\">\n\t\t\t\t\t<option value=\"\">Select Type</option>\n\t\t\t\t\t<option value=\"\">Show All</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t\t<div class=\"form-group col-sm-3 col-xs-6\">\n\t\t\t\t<select data-filter=\"price\" class=\"filter-price filter form-control\">\n\t\t\t\t\t<option value=\"\">Select Price Range</option>\n\t\t\t\t\t<option value=\"\">Show All</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t</form> */}\n\t</div>\n\t<div className=\"row\" id=\"products\">\n\t\t\n\t</div>\n</div>\n        </>\n    )\n\n}\n\nexport default Filter","/var/www/html/github/inhouse/src/pages/sidebar/sidebar.jsx",["897","898","899"],[],"import React from \"react\";\nimport \"./sidebar.css\"\nimport { Link } from \"react-router-dom\";\n\nconst Sidebar =({usertype})=>{\nreturn(\n    <>\n{usertype==\"Sales\" &&\n<div class=\"sidebar\">\n   {/* <h1>Brand</h1> */}\n   <Link to=\"/sales_dash\" style={{marginTop:\"50px\"}}> <li> Dashboard</li></Link>\n   <Link to=\"/inquiry_list\"> <li> Inquiries</li></Link>\n   <Link to=\"/project_list\"> <li> Projects</li></Link>\n   <Link to=\"/lead_list\"> <li> Leads</li></Link>\n   \n  \n</div>}\n{usertype==\"Developer\"&&\n<div class=\"sidebar\">\n   {/* <h1>Brand</h1> */}\n   <Link to=\"/devdash\" style={{marginTop:\"50px\"}}> <li> Dashboard</li></Link>\n   <Link to=\"/dev_task\"> <li> Tasks</li></Link>\n   \n   \n  \n</div>}\n{usertype==\"Admin\"&&\n<div class=\"sidebar\">\n   {/* <h1>Brand</h1> */}\n   <Link to=\"/admind\" style={{marginTop:\"50px\"}}> <li> Dashboard</li></Link>\n   <Link to=\"/inquiry_list\"> <li> Inquiries</li></Link>\n   <Link to=\"/project_list\"> <li> Projects</li></Link>\n   <Link to=\"/lead_list\"> <li> Leads</li></Link>\n   \n  \n</div>}\n    </>\n)\n}\nexport default Sidebar","/var/www/html/github/inhouse/src/constfiles/index.js",[],[],"/var/www/html/github/inhouse/src/pages/create_inquiry_update/c_inquiry.jsx",[],[],"/var/www/html/github/inhouse/src/pages/create_project_update/c_project.jsx",["900","901","902","903"],[],"\nimport Sidebar from \"../sidebar/sidebar\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useForm } from 'react-hook-form';\nimport { technologylist } from \"../../constfiles\";\n\n\nconst Project = () => {\n\n  const navigate = useNavigate()\n  const { inquiryid } = useParams();\n  const [technologydropdown] = useState(technologylist);\n  const [modal, setModal] = useState(false)\n  const [message, setMessage] = useState(false)\n \n  const singleapi = async () => {\n    try {\n    // alert(\"fetcvhiong data\")\n    const result = await fetch(\n      `${process.env.REACT_APP_APIURL}/inquiry/${inquiryid}`,\n      {\n        method: \"get\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"Token\")}`,\n        },\n      }\n    );\n    const apiresponse = await result.json();\n    const check = apiresponse.inquirylist[0];\n    console.log(check)\n      setValue(\"vTitleProject\", check.vTitle)\n      setValue(\"vTechnology\", check.vTechnology)\n      setValue(\"vHireDuration\", check.vHireDuration)\n      setValue(\"vHireMonthlyBudget\", check.vHireMonthlyBudget)\n      setValue(\"vExperienceRequired\", check.vExperienceRequired)\n      setValue(\"eStatus\", check.eStatus)\n      setValue(\"eTypeOfProject\", check.eTypeofInquiry)\n      setValue(\"eTypeofHire\", check.eTypeofHire)\n    }\n    catch (e) {\n      console.log(\"fetching error\",e)\n    }\n  };\n  useEffect(() => {\n    singleapi(inquiryid);\n   \n  }, []);\n  const createproject = (projectdetail) => {\n    console.log(\"createproject\",projectdetail)\n    const formData = new FormData();\n    if (projectdetail.requiredprojectfiles.length >= 0) {\n\n      for (let i = 0; i < projectdetail.requiredprojectfiles.length; i++) {\n        formData.append(\"requiredprojectfiles\", projectdetail.requiredprojectfiles[i]);\n      }\n    }\n    formData.append(\"iiInquiryId\", inquiryid);\n    formData.append(\"eTypeOfProject\", projectdetail.eTypeOfProject);\n    formData.append(\"vTitleProject\", projectdetail.vTitleProject);\n    formData.append(\"fCostOfProject\", projectdetail.fCostOfProject);\n    formData.append(\"vTechnology\", projectdetail.vTechnology);\n    formData.append(\"vHireResource\", projectdetail.vHireResource);\n    // formData.append(\"iVendorId\", projectdetail.iVendorId);\n    formData.append(\"dBillingCycleDate\", projectdetail.dBillingCycleDate);\n    formData.append(\"fHireBillingAmount\", projectdetail.fHireBillingAmount);\n    formData.append(\"dconvertedDate\", projectdetail.dconvertedDate);\n    formData.append(\"fProjectCost\", projectdetail.fProjectCost);\n    formData.append(\"iAccountHolderId\", localStorage.getItem(\"userid\"));\n    formData.append(\"tNotes\", projectdetail.tNotes);\n    formData.append(\"vHireDuration\", projectdetail.vHireDuration);\n    formData.append(\"vHireMonthlyBudget\", projectdetail.vHireMonthlyBudget);\n    formData.append(\"vExperienceRequired\", projectdetail.vExperienceRequired);\n    formData.append(\"fAtCostResourceToVendor\", projectdetail.fAtCostResourceToVendor);\n    formData.append(\"eProjectStatus\", projectdetail.eProjectStatus);\n    formData.append(\"eStatus\", projectdetail.eStatus);\n    formData.append(\"dstartdate\", projectdetail.dstartdate);\n    formData.append(\"denddate\", projectdetail.denddate);\n    const imageupdateapicall = async () => {\n      let callingurl = `${process.env.REACT_APP_APIURL}/projects`;\n      const returneddetail = await axios({\n        method: \"post\",\n        url: callingurl,\n        data: formData,\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"Token\")}`,\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n      const respo = returneddetail.data;\n      const check = respo?.Message;\n      // alert(\"check\", JSON.stringify(check));\n\n      if (returneddetail.status == 200) {\n        reset()\n        setModal(true)\n        setMessage(\"Project Created\")\n      }\n      else {\n        setModal(true)\n        setMessage(\"Something Went Wrong\")\n      }\n    };\n    try {\n      imageupdateapicall()\n    } catch (e) {\n      // alert(e)\n    }\n  };\n\n  const handleBack = () => {\n    navigate(\"/i_edit/\" + `${inquiryid}`)\n  }\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    reset,\n    formState: { errors },\n    watch\n  } = useForm({\n  });\n\n  const selectedtypeofproject = watch(\"eTypeOfProject\",false)\n\n\n  return (\n    <>\n      <Sidebar IsSales={true} />\n      <div className='set'>\n        <div className=\"container my-3 body p-5\">\n          <button type=\"submit\" onClick={handleBack} className=\"mx-auto bg-dark text-white btn btn-outline-dark w-25\">\n            Back to Inquiry\n          </button>\n          <div className=\"row \">\n            <form onSubmit={handleSubmit(createproject)}>\n              <div className=\"col-12 text-center mb-2 \">\n                <h1 className=\"title\">PROJECT</h1>\n              </div>\n              <div className=\"row\">\n                  <div className=\"col-6  my-2 px-3\">\n                    <label htmlFor=\"\" className=\"d-block\">\n                      Type of Project\n                    </label>\n                    <select\n                      {...register('eTypeOfProject', { required: {\n                        value:true,\n                        message:\"Type of Project is required\"\n                      } })}\n                      className=\"form-control rounded-pill mt-2\"\n                      type=\"text\"\n                      placeholder=\"Type of Project\"\n                    >\n                      <option value=\"\">Select</option>\n                      <option value=\"Hire\">Hire</option>\n                      <option value=\"Project Basis\">Project Basis</option>\n                    </select>\n                    {errors.eTypeOfProject ? <p style={{ color: \"red\" }}>{errors.eTypeOfProject.message}</p> : \"\"}\n                  </div>\n                  {selectedtypeofproject===\"Hire\"&&\n                  <div className=\"col-6  my-2 px-3\">\n                    <label htmlFor=\"\" className=\"d-block\">\n                      Type of Hire Inquire\n                    </label>\n                    <select\n                      className=\"form-control rounded-pill mt-2\"\n                      {...register('eTypeofHire', { required: true })}\n                    >\n                      <option value=\"\">Select</option>\n                      <option value=\"Weekly\">Weekly</option>\n                      <option value=\"Monthly\">Monthly</option>\n                      <option value=\"Hourly\">Hourly</option>\n                    </select>\n                    {errors.eTypeofHire && <p className=\"error\">{errors.eTypeofHire.message}</p>}\n                  </div>\n}\n\n                  <div className=\"col-6  my-2 px-3\">\n                    <label htmlFor=\"\">Title</label>\n                    <input\n                       {...register('vTitleProject', { required: {\n                        value:true,\n                        message:\"Title is Required\"\n                       } })}\n                      className=\"form-control rounded-pill mt-2\"\n                      type=\"text\"\n                      placeholder=\"Project Title\"\n                    />\n                    {errors.vTitleProject ? <p style={{ color: \"red\" }}>{errors.vTitleProject.message}</p> : \"\"}\n                  </div>\n                  <div className=\"col-6  my-2 px-3\">\n                    <label htmlFor=\"\" className=\"d-block\">\n                      Technology\n                    </label>\n                    <select \n                      {...register('vTechnology', { required: {\n                        value:true,\n                        message:\"Technology is Required\"\n                      } })}\n                      className=\"form-control rounded-pill mt-2\"\n                    >\n                      <option value=\"\">select</option>\n                      {technologydropdown.map((e) => {\n                        return (\n                          <option value={e}>{e}</option>\n                        )\n                      })}\n                    </select>\n                    {errors.vTechnology ? <p style={{ color: \"red\" }}>{errors.vTechnology.message}</p> : \"\"}\n                  </div>\n\n                  <div className=\"col-6  my-2 px-3\">\n                    <label htmlFor=\"\">Hire Resource</label>\n                    <input\n                      {...register('vHireResource', { required: {\n                        value:true,\n                        message:\"Hire Resource is Required\"\n                      } })}\n                      type=\"text\"\n                      className=\"form-control rounded-pill mt-2\"\n                      placeholder=\"Hire Resource\"\n                    />\n                    {errors.vHireResource ? <p style={{ color: \"red\" }}>{errors.vHireResource.message}</p> : \"\"}\n                  </div>\n                  <div className=\"col-6  my-2 px-3\">\n                    <label htmlFor=\"\">Billing Date</label>\n                    {/* <textarea className=\"inputField col-12 mb-3\" name=\"tDescription\" value={inquiryform.tDescription} onChange={handleChange} placeholder=\"Description\"></textarea> */}\n                    <input\n                      {...register('dBillingCycleDate', { required: {\n                        value:true,\n                        message:\"Billing Date is Required\"\n                      }  })}\n                      type=\"date\"\n                      className=\"form-control rounded-pill mt-2\"\n                      placeholder=\"Billing Date\"\n                    />\n                    {errors.dBillingCycleDate ? <p style={{ color: \"red\" }}>{errors.dBillingCycleDate.message}</p> : \"\"}\n                  </div>\n\n                  <div className=\"col-6  my-2 px-3\">\n                    <label htmlFor=\"\">Billing Amount</label>\n                    <input\n                       {...register('fHireBillingAmount', { required: {\n                        value:true,\n                        message:\"Billing Amount is Required\"\n                      },\n                    min:{\n                      value:1000,\n                      message:\"Minimum value is 1000\"\n                    }\n                    })}\n                      type=\"number\"\n                      className=\"form-control rounded-pill mt-2\"\n                      placeholder=\"Billing Amount\"\n                    />\n                    {errors.fHireBillingAmount ? <p style={{ color: \"red\" }}>{errors.fHireBillingAmount.message}</p> : \"\"}\n                  </div>\n                  <div className=\"col-6  my-2 px-3\">\n                    <label htmlFor=\"\">Converted Date</label>\n                    <input\n                      {...register('dconvertedDate', { required: {\n                        value:true,\n                        message:\"Converted Date is Required\"\n                      }  })}\n                      type=\"date\"\n                      className=\"form-control rounded-pill mt-2\"\n                      name=\"dconvertedDate\"\n                      placeholder=\"Converted Date\"\n                    />\n                    {errors.dconvertedDate ? <p style={{ color: \"red\" }}>{errors.dconvertedDate.message}</p> : \"\"}\n                  </div>\n\n                  <div className=\"col-6  my-2 px-3\">\n                    <label htmlFor=\"\">Project Cost</label>\n                    <input\n                      {...register('fProjectCost', { required: {\n                        value:true,\n                        message:\"Project Cost is Required\"\n                      } ,\n                      min:{\n                        value:1000,\n                        message:\"Minimum value is 1000\"\n                      }\n                    })}\n                      type=\"number\"\n                      className=\"form-control rounded-pill mt-2\"\n                      name=\"fProjectCost\"\n                      placeholder=\"Project Cost\"\n                    />\n                    {errors.fProjectCost ? <p style={{ color: \"red\" }}>{errors.fProjectCost.message}</p> : \"\"}\n                  </div>\n\n\n                  <div className=\"col-6  my-2 px-3\">\n                    <label htmlFor=\"\">Start Date</label>\n                    <input\n                      {...register('dstartdate', { required: {\n                        value:true,\n                        message:\"Start Date is Required\"\n                      }  })}\n                      type=\"date\"\n                      className=\"form-control rounded-pill mt-2\"\n                      placeholder=\"Converted Date\"\n                    />\n                    {errors.dstartdate ? <p style={{ color: \"red\" }}>{errors.dstartdate.message}</p> : \"\"}\n                  </div>\n\n                  <div className=\"col-6  my-2 px-3\">\n                    <label htmlFor=\"\">End Date</label>\n                    <input\n                      {...register('denddate', { required: {\n                        value:true,\n                        message:\"End Date is Required\"\n                      }  })}\n                      type=\"date\"\n                      className=\"form-control rounded-pill mt-2\"\n                      placeholder=\"End Date\"\n                    />\n                    {errors.denddate ? <p style={{ color: \"red\" }}>{errors.denddate.message}</p> : \"\"}\n                  </div>\n                  <div className=\"col-6  my-2 px-3\">\n                    <label htmlFor=\"\">Cost of Project</label>\n                    \n                    <input\n                      {...register('fCostOfProject', { required: {\n                        value:true,\n                        message:\"Cost Of Project is Required\"\n                      },\n                      min:{\n                        value:1000,\n                        message:\"Minimum value is 1000\"\n                      }\n                    })}\n                      type=\"number\"\n                      className=\"form-control rounded-pill mt-2\"\n                      placeholder=\"Cost of Project\"\n                    />\n                    {errors.fCostOfProject ? <p style={{ color: \"red\" }}>{errors.fCostOfProject.message}</p> : \"\"}\n                  </div>\n\n                  <div className=\"col-6  my-2 px-3\">\n                    <label htmlFor=\"\">Notes</label>\n                    <input\n                       {...register('tNotes', { required: {\n                        value:true,\n                        message:\"End Date is Required\"\n                      } })}\n                      type=\"text\"\n                      className=\"form-control rounded-pill mt-2\"\n                      placeholder=\"Notes\"\n                    />\n                    {errors.tNotes ? <p style={{ color: \"red\" }}>{errors.tNotes.message}</p> : \"\"}\n                  </div>\n                  <div className=\"col-6  my-2 px-3\">\n                    <label htmlFor=\"\">Hire Duration</label>\n                    <input\n                      {...register('vHireDuration', { required: {\n                        value:true,\n                        message:\"Hire Duration is Required\"\n                      } })}\n                      type=\"text\"\n                      className=\"form-control rounded-pill mt-2\"\n                      placeholder=\"Hire Duration\"\n                    />\n                    {errors.vHireDuration ? <p style={{ color: \"red\" }}>{errors.vHireDuration.message}</p> : \"\"}\n                  </div>\n                  <div className=\"col-6  my-2 px-3\">\n                    <label htmlFor=\"\">Monthly Budget</label>\n                    <input\n                      {...register('vHireMonthlyBudget', { required: {\n                        value:true,\n                        message:\"Monthly Budget Required\"\n                      },\n                      min:{\n                        value:1000,\n                        message:\"Minimum value is 1000\"\n                      }\n                    })}\n                      type=\"number\"\n                      className=\"form-control rounded-pill mt-2\"\n                      name=\"vHireMonthlyBudget\"\n                      placeholder=\"Hire Monthly Budget\"\n                    />\n                    {errors.vHireMonthlyBudget ? <p style={{ color: \"red\" }}>{errors.vHireMonthlyBudget.message}</p> : \"\"}\n                  </div>\n                  <div className=\"col-6  my-2 px-3\">\n                    <label htmlFor=\"\">Experienced Required</label>\n                    <input\n                      {...register('vExperienceRequired', { required: {\n                        value:true,\n                        message:\"Experience is Required\"\n                      } })}\n                      type=\"text\"\n                      className=\"form-control rounded-pill mt-2\"\n                      // name=\"vExperienceRequired\"\n                      placeholder=\"Experience Required\"\n                    />\n                    {errors.vExperienceRequired ? <p style={{ color: \"red\" }}>{errors.vExperienceRequired.message}</p> : \"\"}\n                  </div>\n                  <div className=\"col-6  my-2 px-3\">\n                    <label htmlFor=\"\">Cost of Resource</label>\n                    <input\n                      {...register('fAtCostResourceToVendor', { required: {\n                        value:true,\n                        message:\"Cost of Resource is Required\"\n                      } ,\n                      min:{\n                        value:1000,\n                        message:\"Minimum value is 1000\"\n                      }\n                    })}\n                      type=\"number\"\n                      className=\"form-control rounded-pill mt-2\"\n                      placeholder=\"Cost of resource\"\n                    />\n                    {errors.fAtCostResourceToVendor ? <p style={{ color: \"red\" }}>{errors.fAtCostResourceToVendor.message}</p> : \"\"}\n                  </div>\n                  <div className=\"col-6  my-2 px-3\">\n                    <label htmlFor=\"\">Status</label>\n                    <select\n                      {...register('eStatus', { required: {\n                        value:true,\n                        message:\"Status is Required\"\n                      } })}\n                      className=\"form-control rounded-pill mt-2\"\n                      type=\"text\"\n                      name=\"eStatus\"\n                      placeholder=\"Status\"\n                    >\n                      <option value=\"\">Select</option>\n                      <option value=\"Converted\">Converted</option>\n                      <option value=\"InProgress\">InProgress</option>\n                      <option value=\"Cancelled\">Cancelled</option>\n                      <option value=\"Rejected\">Rejected</option>\n                      <option value=\"OnHold\">OnHold</option>\n                      <option value=\"No Response From Client\">No Response From Client</option>\n                    </select>\n                    {errors.eStatus ? <p style={{ color: \"red\" }}>{errors.eStatus.message}</p> : \"\"}\n                  </div>\n                  <div className=\"col-6  my-2 px-3\">\n                    <label htmlFor=\"\">Documents</label>\n                    {/* <input type=\"file\" className=\" col-12 mb-3\" /> */}\n                    {/* <input type=\"file\" name=\"mediafiles\" value={inquiryform.mediafiles} onChange={handleimage} className=\" col-12 mb-3\" multiple/> */}\n                    <input\n                      type=\"file\"\n                      {...register('requiredprojectfiles')}\n                      className=\"form-control rounded-pill mt-2\"\n                      // name=\"requiredprojectfiles\"\n                      // id=\"upload\"\n                      accept=\"image/*\"\n                      multiple\n                    />\n                  </div>\n                  <div className=\"col-6  my-2 \">\n                    <div className=\"col-6  my-2  px-3\">\n                    </div>\n                  </div>\n                </div>\n              <button type=\"button\" className=\"mx-auto btn btn-outline-dark w-25\">\n                Add Team\n              </button>\n              <button type=\"submit\"  className=\"mx-auto btn btn-outline-dark w-25\">\n                Submit\n              </button>\n            </form>\n          </div>\n          {modal ?\n            <>\n              <div className='modal_'>\n                <div className='modalBody'>\n                  {message}\n                  <div className=\"modal-button\">\n                    <button className=\"modal-btn\" >Go to Inquiries</button>\n                    <button className=\"modal-btn\" >Check it</button>\n                  </div>\n                </div>\n\n              </div>\n            </>\n            : \"\"}\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Project","/var/www/html/github/inhouse/src/pages/registerupdate/register.jsx",["904","905"],["906"],"import React, { useState } from \"react\";\nimport \"./register.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport Sidebar from \"../sidebar/sidebar\";\nimport { useForm } from 'react-hook-form';\nimport {  technologylist } from \"../../constfiles\"\nimport aos from 'aos'\nimport \"aos/dist/aos.css\"\nimport { useEffect } from \"react\";\nconst Register = () => {\n  const [technologydropdown] = useState(technologylist);\n  const navigate = useNavigate();\n  const[modal,setModal] = useState(false)\n  const[message, setMessage] = useState(false)\n  // const [registrationform, Setregistrationform] = useState({\n  //   vemailid: \"\",\n  //   isInhouse: true,\n  //   vpassword: \"\",\n  //   vusername: \"\",\n  //   vname: \"\",\n  //   etype: \"\",\n  //   vskypeid: \"\",\n  //   vcontactno: \"\",\n  // });\nuseEffect(()=>{\naos.init({duration:2000})\n},[])\n  const registrationapicall = async (personinfo) => {\n\n    const responseapi = await fetch(\n      `${process.env.REACT_APP_APIURL}/Register`,\n\n      {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(personinfo),\n      }\n    );\n\n    let check = await responseapi.json();\n\n    if(check.success == 1)\n    {\n      setModal(true)\n      reset()\n      setMessage(\"Registered Successfully\")\n    }\n    else{\n      setModal(true)\n      setMessage(check.message)\n    }\n  };\n\n  const handleLogin = () => {\n    navigate(\"/login\");\n  };\n\n  const handleClose=()=>{\n    setModal(false)\n    // reset()\n    // refreshPage()\n  }\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n    watch\n  } = useForm({\n    defaultValues:{\n      isInhouse:true\n    }\n  });\n  const selecteusertype=watch(\"etype\",false)\n  return (\n    <>\n     <Sidebar IsSales={true}/> \n     <div className=\"set\">\n       <div className=\"regbody\">\n      <div className=\"container\">\n        <form onSubmit={handleSubmit(registrationapicall)}>\n        <div className=\"row d-inline-flex  justify-content-between\">\n          <div className=\"col-12 text-center mb-4\"  data-aos=\"fade-right\" >\n            <h1 className=\"logo\">Register</h1>\n          </div>\n\n          <div className=\"col-xxl-12 col-xl-6 col-lg-6 col-md-6 col-sm-6 my-2\">\n            <label htmlFor=\"\" className=\"label\">\n              Email Id\n            </label>\n            <input\n             {...register('vemailid', { required: \"Email is Required\" , \n              pattern: {\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                message: \"invalid email address\"\n              }\n            })}\n              type=\"text\"\n              className=\"form-control rounded-pill mt-2\"\n              placeholder=\"email\"\n             \n            />\n             {errors.vemailid && <p className=\"error\">{errors.vemailid.message}</p>}\n          </div>\n\n          <div className=\"col-xxl-12 col-xl-6 col-lg-6 col-md-6 col-sm-6 my-2\">\n            <label htmlFor=\"\" className=\"label\">\n              In House\n            </label>\n            <select\n            {...register('isInhouse', { required: true })}\n              className=\"form-control rounded-pill mt-2\"\n            >\n              <option value={true}>Yes</option>\n              <option value={false}>No</option>\n            </select>\n            {errors.isInhouse && <p className=\"error\">Select anyone</p>}\n          </div>\n\n          <div className=\"col-xxl-12 col-xl-6 col-lg-6 col-md-6 col-sm-6 my-2\">\n            <label htmlFor=\"\" className=\"label\">\n              Password\n            </label>\n            <input\n             {...register('vpassword', { required: true })}\n              type=\"password\"\n              className=\"form-control rounded-pill mt-2\"\n              placeholder=\"Password\"\n            />\n            {errors.vpassword && <p className=\"error\">Password is required</p>}\n          </div>\n\n          <div className=\"col-xxl-12 col-xl-6 col-lg-6 col-md-6 col-sm-6 my-2\">\n            <label htmlFor=\"\" className=\"label\">\n              User Name\n            </label>\n            <input\n            {...register('vusername', { required: true })}\n              type=\"text\"\n              className=\"form-control rounded-pill mt-2\"\n              placeholder=\"Username\"\n            />\n            {errors.vusername && <p className=\"error\">UserName is required</p>}\n          </div>\n\n          <div className=\"col-xxl-12 col-xl-6 col-lg-6 col-md-6 col-sm-6 my-2\">\n            <label htmlFor=\"\" className=\"label\">\n              Name\n            </label>\n            <input\n             {...register('vname', { required: true })}\n              type=\"text\"\n              className=\"form-control rounded-pill mt-2\"\n              placeholder=\"name\"\n            />\n            {errors.vname && <p className=\"error\">Name is required</p>}\n          </div>\n\n          <div className=\"col-xxl-12 col-xl-6 col-lg-6 col-md-6 col-sm-6 my-2\">\n            <label htmlFor=\"\" className=\"label\">\n              User Type\n            </label>\n            <select\n             {...register('etype', { required: true })}\n              type=\"text\"\n              className=\"form-control rounded-pill mt-2\"\n            >\n              <option value=\"\">Select</option>\n\n              <option value=\"Admin\">Admin</option>\n              <option value=\"Sales\">Sales</option>\n              <option value=\"Developer\">Developer</option>\n            </select>\n            {errors.etype && <p className=\"error\">Select Type</p>}\n          </div>\n\n         \n\n          <div className=\"col-xxl-12 col-xl-6 col-lg-6 col-md-6 col-sm-6 my-2\">\n            <label htmlFor=\"\" className=\"label\">\n              Contact Number\n            </label>\n            <input\n             {...register('vcontactno', { required: \"Contact is Required\" , \n             pattern: {\n               // eslint-disable-next-line no-useless-escape\n               value: /^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\./0-9]*$/g,\n               message: \"invalid Contact Number\"\n             }\n           })}\n              type=\"text\"\n              className=\"form-control rounded-pill mt-2 \" \n              placeholder=\"Contact no\"\n            />\n            {errors.vcontactno && <p className=\"error\">{errors.vcontactno.message}</p>}\n          </div>\n         { selecteusertype===\"Developer\"&&\n         <div className=\"col-xxl-12 col-xl-6 col-lg-6 col-md-6 col-sm-6 my-2\">\n            <label htmlFor=\"\" className=\"label\">\n              Technology\n            </label>\n            <select name=\"vTechnology\" id=\"\"\n                      {...register('vTechnology', { required: {\n                        value:true,\n                        message:'Technology is Required'\n                      } })}\n                      className=\"form-control rounded-pill mt-2\"\n                    >\n                      <option value=\"\">select</option>\n                      {technologydropdown.map((e) => {\n                        return (\n                          <option value={e} >{e}</option>\n                        )\n                      })}\n                    </select>\n          \n            {errors.vTechnology && <p className=\"error\">{errors.vTechnology.message}</p>}\n          </div>\n}\n\n          <div className=\"col-xxl-12 col-xl-6 col-lg-6 col-md-6 col-sm-6 my-2\">\n            <label htmlFor=\"\" className=\"label\">\n              Skype Id\n            </label>\n            <input\n            {...register('vskypeid', { required: true })}\n              type=\"text\"\n              className=\"form-control rounded-pill mt-2\"\n              placeholder=\"Skype id\"\n            />\n            {errors.vskypeid && <p className=\"error\">Skypeid is required</p>}\n          </div>\n          <div className=\"col-xxl-12 col-xl-6 col-lg-6 col-md-6 col-sm-6 my-2\"    data-aos=\"fade-right\" >\n            <label htmlFor=\"\" className=\"label\">\n              Salary\n            </label>\n            <input\n            {...register('salary', { required: {\n              value:true,\n              message:\"Please Mention Salary\"\n            } })}\n              type=\"number\"\n              className=\"form-control rounded-pill mt-2\"\n              placeholder=\"salery\"\n            />\n            {errors.salary && <p className=\"error\">{errors.salary.message}</p>}\n          </div>\n          {/* <p className=\"text-center\">\n            Already a members ? <Link to=\"/login\" onClick={handleLogin}> Log In </Link>\n          </p> */}\n\n          {/* <p className=\"text-center\">\n          <input type=\"submit\" className=\"btn btn-outline-dark button\" onClick={handleLogin} value=\"Login\" />\n          </p> */}\n\n          <input\n              type=\"submit\"\n              className=\"btn btn-outline-dark button\"\n           \n              // onClick={handleSubmit(registrationapicall)}\n              value=\"Register\"\n            />\n\n\n\n          {/* <div className=\"col-1 my-6 button\">\n            <input type=\"Login\" className=\"btn btn-outline-dark \" onClick={submitData} />\n          </div> */}\n        </div>\n        </form>\n        {modal?\n        <>\n  \n \n  <div className='modal_'>\n        <div className='modalBody'>\n          \n        {message}\n\n          <div className=\"modal-button\">\n            {/* <button className=\"modal-btn\">Ok</button> */}\n            <button className=\"modal-btn\" onClick={handleClose}>Ok</button>\n          </div>\n        </div>\n    \n    </div>\n        </>\n\n        :\"\"}\n      </div>\n    </div>\n    </div>\n    </>\n  );\n};\n\nexport default Register;\n","/var/www/html/github/inhouse/src/pages/facebooklogin/facebook.jsx",[],[],{"ruleId":"907","severity":1,"message":"908","line":1,"column":8,"nodeType":"909","messageId":"910","endLine":1,"endColumn":12},{"ruleId":"907","severity":1,"message":"911","line":43,"column":10,"nodeType":"909","messageId":"910","endLine":43,"endColumn":21},{"ruleId":"912","severity":1,"message":"913","line":70,"column":54,"nodeType":"914","messageId":"915","endLine":70,"endColumn":64},{"ruleId":"912","severity":1,"message":"916","line":72,"column":46,"nodeType":"914","messageId":"915","endLine":72,"endColumn":56},{"ruleId":"912","severity":1,"message":"917","line":73,"column":51,"nodeType":"914","messageId":"915","endLine":73,"endColumn":61},{"ruleId":"912","severity":1,"message":"918","line":74,"column":57,"nodeType":"914","messageId":"915","endLine":74,"endColumn":70},{"ruleId":"912","severity":1,"message":"919","line":82,"column":53,"nodeType":"914","messageId":"915","endLine":82,"endColumn":63},{"ruleId":"912","severity":1,"message":"920","line":83,"column":57,"nodeType":"914","messageId":"915","endLine":83,"endColumn":69},{"ruleId":"912","severity":1,"message":"921","line":84,"column":66,"nodeType":"914","messageId":"915","endLine":84,"endColumn":76},{"ruleId":"912","severity":1,"message":"922","line":85,"column":54,"nodeType":"914","messageId":"915","endLine":85,"endColumn":66},{"ruleId":"912","severity":1,"message":"923","line":88,"column":44,"nodeType":"914","messageId":"915","endLine":88,"endColumn":56},{"ruleId":"912","severity":1,"message":"924","line":90,"column":45,"nodeType":"914","messageId":"915","endLine":90,"endColumn":57},{"ruleId":"912","severity":1,"message":"925","line":91,"column":46,"nodeType":"914","messageId":"915","endLine":91,"endColumn":59},{"ruleId":"912","severity":1,"message":"926","line":92,"column":56,"nodeType":"914","messageId":"915","endLine":92,"endColumn":69},{"ruleId":"912","severity":1,"message":"927","line":93,"column":50,"nodeType":"914","messageId":"915","endLine":93,"endColumn":63},{"ruleId":"912","severity":1,"message":"928","line":94,"column":54,"nodeType":"914","messageId":"915","endLine":94,"endColumn":71},{"ruleId":"929","severity":1,"message":"930","line":12,"column":41,"nodeType":"931","messageId":"932","endLine":12,"endColumn":43},{"ruleId":"929","severity":1,"message":"930","line":13,"column":20,"nodeType":"931","messageId":"932","endLine":13,"endColumn":22},{"ruleId":"907","severity":1,"message":"933","line":2,"column":8,"nodeType":"909","messageId":"910","endLine":2,"endColumn":14},{"ruleId":"907","severity":1,"message":"934","line":3,"column":8,"nodeType":"909","messageId":"910","endLine":3,"endColumn":15},{"ruleId":"929","severity":1,"message":"935","line":15,"column":44,"nodeType":"931","messageId":"932","endLine":15,"endColumn":46},{"ruleId":"929","severity":1,"message":"935","line":18,"column":49,"nodeType":"931","messageId":"932","endLine":18,"endColumn":51},{"ruleId":"936","severity":1,"message":"937","line":21,"column":7,"nodeType":"938","endLine":21,"endColumn":9,"suggestions":"939"},{"ruleId":"907","severity":1,"message":"940","line":4,"column":8,"nodeType":"909","messageId":"910","endLine":4,"endColumn":13},{"ruleId":"929","severity":1,"message":"935","line":11,"column":26,"nodeType":"931","messageId":"932","endLine":11,"endColumn":28},{"ruleId":"907","severity":1,"message":"934","line":3,"column":8,"nodeType":"909","messageId":"910","endLine":3,"endColumn":15},{"ruleId":"907","severity":1,"message":"941","line":3,"column":10,"nodeType":"909","messageId":"910","endLine":3,"endColumn":18},{"ruleId":"907","severity":1,"message":"942","line":4,"column":10,"nodeType":"909","messageId":"910","endLine":4,"endColumn":14},{"ruleId":"907","severity":1,"message":"943","line":12,"column":9,"nodeType":"909","messageId":"910","endLine":12,"endColumn":15},{"ruleId":"907","severity":1,"message":"944","line":13,"column":9,"nodeType":"909","messageId":"910","endLine":13,"endColumn":17},{"ruleId":"929","severity":1,"message":"935","line":41,"column":27,"nodeType":"931","messageId":"932","endLine":41,"endColumn":29},{"ruleId":"929","severity":1,"message":"935","line":42,"column":27,"nodeType":"931","messageId":"932","endLine":42,"endColumn":29},{"ruleId":"929","severity":1,"message":"935","line":43,"column":27,"nodeType":"931","messageId":"932","endLine":43,"endColumn":29},{"ruleId":"929","severity":1,"message":"935","line":44,"column":27,"nodeType":"931","messageId":"932","endLine":44,"endColumn":29},{"ruleId":"929","severity":1,"message":"935","line":61,"column":26,"nodeType":"931","messageId":"932","endLine":61,"endColumn":28},{"ruleId":"929","severity":1,"message":"935","line":63,"column":33,"nodeType":"931","messageId":"932","endLine":63,"endColumn":35},{"ruleId":"929","severity":1,"message":"935","line":65,"column":33,"nodeType":"931","messageId":"932","endLine":65,"endColumn":35},{"ruleId":"907","severity":1,"message":"945","line":74,"column":9,"nodeType":"909","messageId":"910","endLine":74,"endColumn":21},{"ruleId":"907","severity":1,"message":"946","line":77,"column":9,"nodeType":"909","messageId":"910","endLine":77,"endColumn":23},{"ruleId":"907","severity":1,"message":"947","line":85,"column":5,"nodeType":"909","messageId":"910","endLine":85,"endColumn":12},{"ruleId":"929","severity":1,"message":"935","line":107,"column":35,"nodeType":"931","messageId":"932","endLine":107,"endColumn":37},{"ruleId":"929","severity":1,"message":"935","line":108,"column":24,"nodeType":"931","messageId":"932","endLine":108,"endColumn":26},{"ruleId":"929","severity":1,"message":"935","line":122,"column":35,"nodeType":"931","messageId":"932","endLine":122,"endColumn":37},{"ruleId":"929","severity":1,"message":"935","line":123,"column":24,"nodeType":"931","messageId":"932","endLine":123,"endColumn":26},{"ruleId":"929","severity":1,"message":"935","line":143,"column":31,"nodeType":"931","messageId":"932","endLine":143,"endColumn":33},{"ruleId":"907","severity":1,"message":"941","line":3,"column":10,"nodeType":"909","messageId":"910","endLine":3,"endColumn":18},{"ruleId":"907","severity":1,"message":"948","line":4,"column":8,"nodeType":"909","messageId":"910","endLine":4,"endColumn":13},{"ruleId":"907","severity":1,"message":"942","line":5,"column":10,"nodeType":"909","messageId":"910","endLine":5,"endColumn":14},{"ruleId":"929","severity":1,"message":"935","line":54,"column":22,"nodeType":"931","messageId":"932","endLine":54,"endColumn":24},{"ruleId":"936","severity":1,"message":"949","line":73,"column":9,"nodeType":"950","endLine":82,"endColumn":4},{"ruleId":"907","severity":1,"message":"951","line":176,"column":9,"nodeType":"909","messageId":"910","endLine":176,"endColumn":20},{"ruleId":"907","severity":1,"message":"952","line":193,"column":5,"nodeType":"909","messageId":"910","endLine":193,"endColumn":10},{"ruleId":"929","severity":1,"message":"935","line":247,"column":40,"nodeType":"931","messageId":"932","endLine":247,"endColumn":42},{"ruleId":"929","severity":1,"message":"935","line":263,"column":40,"nodeType":"931","messageId":"932","endLine":263,"endColumn":42},{"ruleId":"929","severity":1,"message":"935","line":279,"column":40,"nodeType":"931","messageId":"932","endLine":279,"endColumn":42},{"ruleId":"929","severity":1,"message":"935","line":295,"column":36,"nodeType":"931","messageId":"932","endLine":295,"endColumn":38},{"ruleId":"929","severity":1,"message":"935","line":316,"column":36,"nodeType":"931","messageId":"932","endLine":316,"endColumn":38},{"ruleId":"953","severity":1,"message":"954","line":328,"column":59,"nodeType":"955","messageId":"956","endLine":328,"endColumn":60,"suggestions":"957"},{"ruleId":"929","severity":1,"message":"935","line":356,"column":39,"nodeType":"931","messageId":"932","endLine":356,"endColumn":41},{"ruleId":"907","severity":1,"message":"958","line":2,"column":8,"nodeType":"909","messageId":"910","endLine":2,"endColumn":19},{"ruleId":"907","severity":1,"message":"959","line":3,"column":10,"nodeType":"909","messageId":"910","endLine":3,"endColumn":21},{"ruleId":"907","severity":1,"message":"933","line":6,"column":8,"nodeType":"909","messageId":"910","endLine":6,"endColumn":14},{"ruleId":"907","severity":1,"message":"934","line":7,"column":8,"nodeType":"909","messageId":"910","endLine":7,"endColumn":15},{"ruleId":"907","severity":1,"message":"960","line":8,"column":8,"nodeType":"909","messageId":"910","endLine":8,"endColumn":14},{"ruleId":"907","severity":1,"message":"961","line":53,"column":31,"nodeType":"909","messageId":"910","endLine":53,"endColumn":52},{"ruleId":"907","severity":1,"message":"962","line":55,"column":16,"nodeType":"909","messageId":"910","endLine":55,"endColumn":21},{"ruleId":"907","severity":1,"message":"963","line":66,"column":11,"nodeType":"909","messageId":"910","endLine":66,"endColumn":28},{"ruleId":"907","severity":1,"message":"964","line":71,"column":11,"nodeType":"909","messageId":"910","endLine":71,"endColumn":22},{"ruleId":"929","severity":1,"message":"935","line":90,"column":32,"nodeType":"931","messageId":"932","endLine":90,"endColumn":34},{"ruleId":"929","severity":1,"message":"935","line":91,"column":32,"nodeType":"931","messageId":"932","endLine":91,"endColumn":34},{"ruleId":"929","severity":1,"message":"935","line":96,"column":34,"nodeType":"931","messageId":"932","endLine":96,"endColumn":36},{"ruleId":"929","severity":1,"message":"935","line":97,"column":34,"nodeType":"931","messageId":"932","endLine":97,"endColumn":36},{"ruleId":"929","severity":1,"message":"935","line":106,"column":33,"nodeType":"931","messageId":"932","endLine":106,"endColumn":35},{"ruleId":"929","severity":1,"message":"935","line":107,"column":33,"nodeType":"931","messageId":"932","endLine":107,"endColumn":35},{"ruleId":"929","severity":1,"message":"935","line":112,"column":33,"nodeType":"931","messageId":"932","endLine":112,"endColumn":35},{"ruleId":"929","severity":1,"message":"935","line":113,"column":33,"nodeType":"931","messageId":"932","endLine":113,"endColumn":35},{"ruleId":"929","severity":1,"message":"935","line":129,"column":20,"nodeType":"931","messageId":"932","endLine":129,"endColumn":22},{"ruleId":"929","severity":1,"message":"930","line":129,"column":46,"nodeType":"931","messageId":"932","endLine":129,"endColumn":48},{"ruleId":"936","severity":1,"message":"965","line":133,"column":7,"nodeType":"938","endLine":133,"endColumn":12,"suggestions":"966"},{"ruleId":"929","severity":1,"message":"935","line":152,"column":39,"nodeType":"931","messageId":"932","endLine":152,"endColumn":41},{"ruleId":"929","severity":1,"message":"935","line":153,"column":39,"nodeType":"931","messageId":"932","endLine":153,"endColumn":41},{"ruleId":"929","severity":1,"message":"935","line":158,"column":35,"nodeType":"931","messageId":"932","endLine":158,"endColumn":37},{"ruleId":"929","severity":1,"message":"935","line":159,"column":35,"nodeType":"931","messageId":"932","endLine":159,"endColumn":37},{"ruleId":"929","severity":1,"message":"935","line":164,"column":33,"nodeType":"931","messageId":"932","endLine":164,"endColumn":35},{"ruleId":"929","severity":1,"message":"935","line":165,"column":33,"nodeType":"931","messageId":"932","endLine":165,"endColumn":35},{"ruleId":"929","severity":1,"message":"935","line":174,"column":38,"nodeType":"931","messageId":"932","endLine":174,"endColumn":40},{"ruleId":"929","severity":1,"message":"935","line":175,"column":38,"nodeType":"931","messageId":"932","endLine":175,"endColumn":40},{"ruleId":"929","severity":1,"message":"935","line":180,"column":34,"nodeType":"931","messageId":"932","endLine":180,"endColumn":36},{"ruleId":"929","severity":1,"message":"935","line":181,"column":34,"nodeType":"931","messageId":"932","endLine":181,"endColumn":36},{"ruleId":"929","severity":1,"message":"935","line":190,"column":33,"nodeType":"931","messageId":"932","endLine":190,"endColumn":35},{"ruleId":"929","severity":1,"message":"935","line":191,"column":33,"nodeType":"931","messageId":"932","endLine":191,"endColumn":35},{"ruleId":"929","severity":1,"message":"935","line":196,"column":38,"nodeType":"931","messageId":"932","endLine":196,"endColumn":40},{"ruleId":"929","severity":1,"message":"935","line":197,"column":38,"nodeType":"931","messageId":"932","endLine":197,"endColumn":40},{"ruleId":"929","severity":1,"message":"935","line":202,"column":32,"nodeType":"931","messageId":"932","endLine":202,"endColumn":34},{"ruleId":"929","severity":1,"message":"935","line":203,"column":32,"nodeType":"931","messageId":"932","endLine":203,"endColumn":34},{"ruleId":"929","severity":1,"message":"935","line":208,"column":33,"nodeType":"931","messageId":"932","endLine":208,"endColumn":35},{"ruleId":"929","severity":1,"message":"935","line":209,"column":33,"nodeType":"931","messageId":"932","endLine":209,"endColumn":35},{"ruleId":"929","severity":1,"message":"935","line":222,"column":27,"nodeType":"931","messageId":"932","endLine":222,"endColumn":29},{"ruleId":"929","severity":1,"message":"930","line":222,"column":53,"nodeType":"931","messageId":"932","endLine":222,"endColumn":55},{"ruleId":"936","severity":1,"message":"967","line":227,"column":13,"nodeType":"938","endLine":227,"endColumn":19,"suggestions":"968"},{"ruleId":"907","severity":1,"message":"969","line":298,"column":15,"nodeType":"909","messageId":"910","endLine":298,"endColumn":20},{"ruleId":"929","severity":1,"message":"935","line":302,"column":26,"nodeType":"931","messageId":"932","endLine":302,"endColumn":28},{"ruleId":"907","severity":1,"message":"969","line":330,"column":15,"nodeType":"909","messageId":"910","endLine":330,"endColumn":20},{"ruleId":"929","severity":1,"message":"935","line":333,"column":26,"nodeType":"931","messageId":"932","endLine":333,"endColumn":28},{"ruleId":"929","severity":1,"message":"930","line":349,"column":19,"nodeType":"931","messageId":"932","endLine":349,"endColumn":21},{"ruleId":"907","severity":1,"message":"969","line":379,"column":23,"nodeType":"909","messageId":"910","endLine":379,"endColumn":28},{"ruleId":"929","severity":1,"message":"935","line":380,"column":35,"nodeType":"931","messageId":"932","endLine":380,"endColumn":37},{"ruleId":"907","severity":1,"message":"952","line":436,"column":7,"nodeType":"909","messageId":"910","endLine":436,"endColumn":12},{"ruleId":"929","severity":1,"message":"935","line":441,"column":38,"nodeType":"931","messageId":"932","endLine":441,"endColumn":40},{"ruleId":"929","severity":1,"message":"935","line":444,"column":41,"nodeType":"931","messageId":"932","endLine":444,"endColumn":43},{"ruleId":"929","severity":1,"message":"935","line":447,"column":41,"nodeType":"931","messageId":"932","endLine":447,"endColumn":43},{"ruleId":"929","severity":1,"message":"935","line":555,"column":42,"nodeType":"931","messageId":"932","endLine":555,"endColumn":44},{"ruleId":"929","severity":1,"message":"935","line":556,"column":42,"nodeType":"931","messageId":"932","endLine":556,"endColumn":44},{"ruleId":"929","severity":1,"message":"935","line":557,"column":42,"nodeType":"931","messageId":"932","endLine":557,"endColumn":44},{"ruleId":"929","severity":1,"message":"935","line":568,"column":44,"nodeType":"931","messageId":"932","endLine":568,"endColumn":46},{"ruleId":"929","severity":1,"message":"935","line":569,"column":44,"nodeType":"931","messageId":"932","endLine":569,"endColumn":46},{"ruleId":"929","severity":1,"message":"935","line":570,"column":42,"nodeType":"931","messageId":"932","endLine":570,"endColumn":44},{"ruleId":"929","severity":1,"message":"930","line":819,"column":18,"nodeType":"931","messageId":"932","endLine":819,"endColumn":20},{"ruleId":"907","severity":1,"message":"959","line":1,"column":17,"nodeType":"909","messageId":"910","endLine":1,"endColumn":28},{"ruleId":"929","severity":1,"message":"930","line":32,"column":29,"nodeType":"931","messageId":"932","endLine":32,"endColumn":31},{"ruleId":"936","severity":1,"message":"970","line":45,"column":5,"nodeType":"938","endLine":45,"endColumn":17,"suggestions":"971"},{"ruleId":"936","severity":1,"message":"970","line":91,"column":6,"nodeType":"938","endLine":91,"endColumn":8,"suggestions":"972"},{"ruleId":"907","severity":1,"message":"973","line":99,"column":11,"nodeType":"909","messageId":"910","endLine":99,"endColumn":20},{"ruleId":"936","severity":1,"message":"970","line":116,"column":4,"nodeType":"938","endLine":116,"endColumn":16,"suggestions":"974"},{"ruleId":"929","severity":1,"message":"935","line":157,"column":28,"nodeType":"931","messageId":"932","endLine":157,"endColumn":30},{"ruleId":"929","severity":1,"message":"935","line":158,"column":28,"nodeType":"931","messageId":"932","endLine":158,"endColumn":30},{"ruleId":"929","severity":1,"message":"935","line":159,"column":28,"nodeType":"931","messageId":"932","endLine":159,"endColumn":30},{"ruleId":"929","severity":1,"message":"935","line":160,"column":28,"nodeType":"931","messageId":"932","endLine":160,"endColumn":30},{"ruleId":"929","severity":1,"message":"935","line":161,"column":28,"nodeType":"931","messageId":"932","endLine":161,"endColumn":30},{"ruleId":"929","severity":1,"message":"935","line":162,"column":28,"nodeType":"931","messageId":"932","endLine":162,"endColumn":30},{"ruleId":"975","severity":1,"message":"976","line":164,"column":45,"nodeType":"931","messageId":"977","endLine":164,"endColumn":46},{"ruleId":"975","severity":1,"message":"976","line":170,"column":40,"nodeType":"931","messageId":"977","endLine":170,"endColumn":41},{"ruleId":"929","severity":1,"message":"930","line":23,"column":31,"nodeType":"931","messageId":"932","endLine":23,"endColumn":33},{"ruleId":"936","severity":1,"message":"970","line":36,"column":6,"nodeType":"938","endLine":36,"endColumn":18,"suggestions":"978"},{"ruleId":"936","severity":1,"message":"970","line":78,"column":6,"nodeType":"938","endLine":78,"endColumn":8,"suggestions":"979"},{"ruleId":"907","severity":1,"message":"973","line":86,"column":11,"nodeType":"909","messageId":"910","endLine":86,"endColumn":20},{"ruleId":"936","severity":1,"message":"970","line":103,"column":4,"nodeType":"938","endLine":103,"endColumn":16,"suggestions":"980"},{"ruleId":"929","severity":1,"message":"935","line":144,"column":34,"nodeType":"931","messageId":"932","endLine":144,"endColumn":36},{"ruleId":"929","severity":1,"message":"935","line":145,"column":34,"nodeType":"931","messageId":"932","endLine":145,"endColumn":36},{"ruleId":"929","severity":1,"message":"935","line":146,"column":34,"nodeType":"931","messageId":"932","endLine":146,"endColumn":36},{"ruleId":"929","severity":1,"message":"935","line":147,"column":34,"nodeType":"931","messageId":"932","endLine":147,"endColumn":36},{"ruleId":"929","severity":1,"message":"935","line":148,"column":34,"nodeType":"931","messageId":"932","endLine":148,"endColumn":36},{"ruleId":"929","severity":1,"message":"935","line":149,"column":34,"nodeType":"931","messageId":"932","endLine":149,"endColumn":36},{"ruleId":"975","severity":1,"message":"976","line":152,"column":44,"nodeType":"931","messageId":"977","endLine":152,"endColumn":45},{"ruleId":"907","severity":1,"message":"933","line":7,"column":8,"nodeType":"909","messageId":"910","endLine":7,"endColumn":14},{"ruleId":"907","severity":1,"message":"981","line":12,"column":11,"nodeType":"909","messageId":"910","endLine":12,"endColumn":16},{"ruleId":"907","severity":1,"message":"982","line":12,"column":17,"nodeType":"909","messageId":"910","endLine":12,"endColumn":25},{"ruleId":"907","severity":1,"message":"983","line":15,"column":24,"nodeType":"909","messageId":"910","endLine":15,"endColumn":39},{"ruleId":"929","severity":1,"message":"935","line":58,"column":24,"nodeType":"931","messageId":"932","endLine":58,"endColumn":26},{"ruleId":"975","severity":1,"message":"976","line":76,"column":25,"nodeType":"931","messageId":"977","endLine":76,"endColumn":26},{"ruleId":"929","severity":1,"message":"935","line":118,"column":48,"nodeType":"931","messageId":"932","endLine":118,"endColumn":50},{"ruleId":"929","severity":1,"message":"935","line":132,"column":45,"nodeType":"931","messageId":"932","endLine":132,"endColumn":47},{"ruleId":"929","severity":1,"message":"935","line":146,"column":38,"nodeType":"931","messageId":"932","endLine":146,"endColumn":40},{"ruleId":"929","severity":1,"message":"935","line":160,"column":37,"nodeType":"931","messageId":"932","endLine":160,"endColumn":39},{"ruleId":"929","severity":1,"message":"935","line":176,"column":38,"nodeType":"931","messageId":"932","endLine":176,"endColumn":40},{"ruleId":"907","severity":1,"message":"984","line":621,"column":7,"nodeType":"909","messageId":"910","endLine":621,"endColumn":19},{"ruleId":"907","severity":1,"message":"985","line":626,"column":13,"nodeType":"909","messageId":"910","endLine":626,"endColumn":20},{"ruleId":"907","severity":1,"message":"986","line":627,"column":12,"nodeType":"909","messageId":"910","endLine":627,"endColumn":30},{"ruleId":"907","severity":1,"message":"961","line":627,"column":31,"nodeType":"909","messageId":"910","endLine":627,"endColumn":52},{"ruleId":"929","severity":1,"message":"935","line":667,"column":41,"nodeType":"931","messageId":"932","endLine":667,"endColumn":43},{"ruleId":"929","severity":1,"message":"935","line":668,"column":41,"nodeType":"931","messageId":"932","endLine":668,"endColumn":43},{"ruleId":"929","severity":1,"message":"935","line":673,"column":40,"nodeType":"931","messageId":"932","endLine":673,"endColumn":42},{"ruleId":"929","severity":1,"message":"935","line":674,"column":40,"nodeType":"931","messageId":"932","endLine":674,"endColumn":42},{"ruleId":"929","severity":1,"message":"935","line":679,"column":41,"nodeType":"931","messageId":"932","endLine":679,"endColumn":43},{"ruleId":"929","severity":1,"message":"935","line":680,"column":41,"nodeType":"931","messageId":"932","endLine":680,"endColumn":43},{"ruleId":"929","severity":1,"message":"935","line":685,"column":38,"nodeType":"931","messageId":"932","endLine":685,"endColumn":40},{"ruleId":"929","severity":1,"message":"935","line":686,"column":38,"nodeType":"931","messageId":"932","endLine":686,"endColumn":40},{"ruleId":"929","severity":1,"message":"935","line":691,"column":37,"nodeType":"931","messageId":"932","endLine":691,"endColumn":39},{"ruleId":"929","severity":1,"message":"935","line":692,"column":37,"nodeType":"931","messageId":"932","endLine":692,"endColumn":39},{"ruleId":"929","severity":1,"message":"935","line":697,"column":35,"nodeType":"931","messageId":"932","endLine":697,"endColumn":37},{"ruleId":"929","severity":1,"message":"935","line":698,"column":35,"nodeType":"931","messageId":"932","endLine":698,"endColumn":37},{"ruleId":"929","severity":1,"message":"935","line":703,"column":40,"nodeType":"931","messageId":"932","endLine":703,"endColumn":42},{"ruleId":"929","severity":1,"message":"935","line":704,"column":40,"nodeType":"931","messageId":"932","endLine":704,"endColumn":42},{"ruleId":"929","severity":1,"message":"935","line":715,"column":46,"nodeType":"931","messageId":"932","endLine":715,"endColumn":48},{"ruleId":"929","severity":1,"message":"935","line":716,"column":46,"nodeType":"931","messageId":"932","endLine":716,"endColumn":48},{"ruleId":"929","severity":1,"message":"935","line":721,"column":34,"nodeType":"931","messageId":"932","endLine":721,"endColumn":36},{"ruleId":"929","severity":1,"message":"935","line":722,"column":34,"nodeType":"931","messageId":"932","endLine":722,"endColumn":36},{"ruleId":"929","severity":1,"message":"935","line":733,"column":44,"nodeType":"931","messageId":"932","endLine":733,"endColumn":46},{"ruleId":"929","severity":1,"message":"935","line":734,"column":44,"nodeType":"931","messageId":"932","endLine":734,"endColumn":46},{"ruleId":"929","severity":1,"message":"935","line":739,"column":45,"nodeType":"931","messageId":"932","endLine":739,"endColumn":47},{"ruleId":"929","severity":1,"message":"935","line":740,"column":45,"nodeType":"931","messageId":"932","endLine":740,"endColumn":47},{"ruleId":"929","severity":1,"message":"935","line":745,"column":41,"nodeType":"931","messageId":"932","endLine":745,"endColumn":43},{"ruleId":"929","severity":1,"message":"935","line":746,"column":41,"nodeType":"931","messageId":"932","endLine":746,"endColumn":43},{"ruleId":"929","severity":1,"message":"935","line":751,"column":40,"nodeType":"931","messageId":"932","endLine":751,"endColumn":42},{"ruleId":"929","severity":1,"message":"935","line":752,"column":40,"nodeType":"931","messageId":"932","endLine":752,"endColumn":42},{"ruleId":"929","severity":1,"message":"935","line":757,"column":39,"nodeType":"931","messageId":"932","endLine":757,"endColumn":41},{"ruleId":"929","severity":1,"message":"935","line":758,"column":39,"nodeType":"931","messageId":"932","endLine":758,"endColumn":41},{"ruleId":"929","severity":1,"message":"935","line":763,"column":50,"nodeType":"931","messageId":"932","endLine":763,"endColumn":52},{"ruleId":"929","severity":1,"message":"935","line":764,"column":50,"nodeType":"931","messageId":"932","endLine":764,"endColumn":52},{"ruleId":"929","severity":1,"message":"935","line":769,"column":45,"nodeType":"931","messageId":"932","endLine":769,"endColumn":47},{"ruleId":"929","severity":1,"message":"935","line":770,"column":45,"nodeType":"931","messageId":"932","endLine":770,"endColumn":47},{"ruleId":"929","severity":1,"message":"930","line":780,"column":48,"nodeType":"931","messageId":"932","endLine":780,"endColumn":50},{"ruleId":"936","severity":1,"message":"987","line":825,"column":8,"nodeType":"938","endLine":825,"endColumn":10,"suggestions":"988"},{"ruleId":"929","severity":1,"message":"930","line":831,"column":24,"nodeType":"931","messageId":"932","endLine":831,"endColumn":26},{"ruleId":"907","severity":1,"message":"989","line":858,"column":15,"nodeType":"909","messageId":"910","endLine":858,"endColumn":20},{"ruleId":"907","severity":1,"message":"969","line":880,"column":17,"nodeType":"909","messageId":"910","endLine":880,"endColumn":22},{"ruleId":"929","severity":1,"message":"935","line":883,"column":36,"nodeType":"931","messageId":"932","endLine":883,"endColumn":38},{"ruleId":"929","severity":1,"message":"935","line":894,"column":41,"nodeType":"931","messageId":"932","endLine":894,"endColumn":43},{"ruleId":"975","severity":1,"message":"976","line":922,"column":27,"nodeType":"931","messageId":"977","endLine":922,"endColumn":28},{"ruleId":"907","severity":1,"message":"990","line":926,"column":7,"nodeType":"909","messageId":"910","endLine":926,"endColumn":15},{"ruleId":"907","severity":1,"message":"991","line":928,"column":20,"nodeType":"909","messageId":"910","endLine":928,"endColumn":26},{"ruleId":"907","severity":1,"message":"942","line":7,"column":10,"nodeType":"909","messageId":"910","endLine":7,"endColumn":14},{"ruleId":"907","severity":1,"message":"992","line":15,"column":11,"nodeType":"909","messageId":"910","endLine":15,"endColumn":20},{"ruleId":"907","severity":1,"message":"961","line":17,"column":30,"nodeType":"909","messageId":"910","endLine":17,"endColumn":51},{"ruleId":"929","severity":1,"message":"935","line":42,"column":39,"nodeType":"931","messageId":"932","endLine":42,"endColumn":41},{"ruleId":"929","severity":1,"message":"935","line":43,"column":39,"nodeType":"931","messageId":"932","endLine":43,"endColumn":41},{"ruleId":"929","severity":1,"message":"935","line":48,"column":31,"nodeType":"931","messageId":"932","endLine":48,"endColumn":33},{"ruleId":"929","severity":1,"message":"935","line":49,"column":31,"nodeType":"931","messageId":"932","endLine":49,"endColumn":33},{"ruleId":"929","severity":1,"message":"935","line":54,"column":36,"nodeType":"931","messageId":"932","endLine":54,"endColumn":38},{"ruleId":"929","severity":1,"message":"935","line":55,"column":36,"nodeType":"931","messageId":"932","endLine":55,"endColumn":38},{"ruleId":"929","severity":1,"message":"935","line":60,"column":41,"nodeType":"931","messageId":"932","endLine":60,"endColumn":43},{"ruleId":"929","severity":1,"message":"935","line":61,"column":41,"nodeType":"931","messageId":"932","endLine":61,"endColumn":43},{"ruleId":"929","severity":1,"message":"935","line":66,"column":37,"nodeType":"931","messageId":"932","endLine":66,"endColumn":39},{"ruleId":"929","severity":1,"message":"935","line":67,"column":37,"nodeType":"931","messageId":"932","endLine":67,"endColumn":39},{"ruleId":"929","severity":1,"message":"935","line":72,"column":38,"nodeType":"931","messageId":"932","endLine":72,"endColumn":40},{"ruleId":"929","severity":1,"message":"935","line":73,"column":38,"nodeType":"931","messageId":"932","endLine":73,"endColumn":40},{"ruleId":"929","severity":1,"message":"935","line":78,"column":43,"nodeType":"931","messageId":"932","endLine":78,"endColumn":45},{"ruleId":"929","severity":1,"message":"935","line":79,"column":43,"nodeType":"931","messageId":"932","endLine":79,"endColumn":45},{"ruleId":"929","severity":1,"message":"935","line":84,"column":44,"nodeType":"931","messageId":"932","endLine":84,"endColumn":46},{"ruleId":"929","severity":1,"message":"935","line":85,"column":44,"nodeType":"931","messageId":"932","endLine":85,"endColumn":46},{"ruleId":"929","severity":1,"message":"935","line":90,"column":32,"nodeType":"931","messageId":"932","endLine":90,"endColumn":34},{"ruleId":"929","severity":1,"message":"935","line":91,"column":32,"nodeType":"931","messageId":"932","endLine":91,"endColumn":34},{"ruleId":"929","severity":1,"message":"930","line":100,"column":34,"nodeType":"931","messageId":"932","endLine":100,"endColumn":36},{"ruleId":"936","severity":1,"message":"987","line":137,"column":6,"nodeType":"938","endLine":137,"endColumn":8,"suggestions":"993"},{"ruleId":"929","severity":1,"message":"930","line":148,"column":22,"nodeType":"931","messageId":"932","endLine":148,"endColumn":24},{"ruleId":"907","severity":1,"message":"989","line":154,"column":11,"nodeType":"909","messageId":"910","endLine":154,"endColumn":16},{"ruleId":"907","severity":1,"message":"969","line":181,"column":13,"nodeType":"909","messageId":"910","endLine":181,"endColumn":18},{"ruleId":"929","severity":1,"message":"935","line":187,"column":49,"nodeType":"931","messageId":"932","endLine":187,"endColumn":51},{"ruleId":"975","severity":1,"message":"976","line":207,"column":26,"nodeType":"931","messageId":"977","endLine":207,"endColumn":27},{"ruleId":"975","severity":1,"message":"976","line":210,"column":23,"nodeType":"931","messageId":"977","endLine":210,"endColumn":24},{"ruleId":"994","severity":1,"message":"995","line":425,"column":27,"nodeType":"914","messageId":"996","endLine":425,"endColumn":140,"fix":"997"},{"ruleId":"929","severity":1,"message":"930","line":25,"column":29,"nodeType":"931","messageId":"932","endLine":25,"endColumn":31},{"ruleId":"936","severity":1,"message":"970","line":38,"column":5,"nodeType":"938","endLine":38,"endColumn":17,"suggestions":"998"},{"ruleId":"936","severity":1,"message":"970","line":80,"column":6,"nodeType":"938","endLine":80,"endColumn":8,"suggestions":"999"},{"ruleId":"907","severity":1,"message":"973","line":90,"column":11,"nodeType":"909","messageId":"910","endLine":90,"endColumn":20},{"ruleId":"936","severity":1,"message":"970","line":107,"column":4,"nodeType":"938","endLine":107,"endColumn":16,"suggestions":"1000"},{"ruleId":"929","severity":1,"message":"935","line":149,"column":29,"nodeType":"931","messageId":"932","endLine":149,"endColumn":31},{"ruleId":"929","severity":1,"message":"935","line":150,"column":28,"nodeType":"931","messageId":"932","endLine":150,"endColumn":30},{"ruleId":"929","severity":1,"message":"935","line":151,"column":28,"nodeType":"931","messageId":"932","endLine":151,"endColumn":30},{"ruleId":"929","severity":1,"message":"935","line":152,"column":28,"nodeType":"931","messageId":"932","endLine":152,"endColumn":30},{"ruleId":"929","severity":1,"message":"935","line":153,"column":28,"nodeType":"931","messageId":"932","endLine":153,"endColumn":30},{"ruleId":"929","severity":1,"message":"935","line":154,"column":28,"nodeType":"931","messageId":"932","endLine":154,"endColumn":30},{"ruleId":"975","severity":1,"message":"976","line":156,"column":40,"nodeType":"931","messageId":"977","endLine":156,"endColumn":41},{"ruleId":"907","severity":1,"message":"1001","line":1,"column":17,"nodeType":"909","messageId":"910","endLine":1,"endColumn":26},{"ruleId":"907","severity":1,"message":"1002","line":6,"column":8,"nodeType":"909","messageId":"910","endLine":6,"endColumn":20},{"ruleId":"907","severity":1,"message":"986","line":18,"column":10,"nodeType":"909","messageId":"910","endLine":18,"endColumn":28},{"ruleId":"907","severity":1,"message":"961","line":18,"column":30,"nodeType":"909","messageId":"910","endLine":18,"endColumn":51},{"ruleId":"907","severity":1,"message":"1003","line":25,"column":9,"nodeType":"909","messageId":"910","endLine":25,"endColumn":26},{"ruleId":"907","severity":1,"message":"969","line":31,"column":9,"nodeType":"909","messageId":"910","endLine":31,"endColumn":14},{"ruleId":"929","severity":1,"message":"930","line":33,"column":28,"nodeType":"931","messageId":"932","endLine":33,"endColumn":30},{"ruleId":"907","severity":1,"message":"1004","line":58,"column":13,"nodeType":"909","messageId":"910","endLine":58,"endColumn":21},{"ruleId":"1005","severity":1,"message":"1006","line":58,"column":45,"nodeType":"1007","messageId":"1008","endLine":58,"endColumn":47},{"ruleId":"1005","severity":1,"message":"1009","line":59,"column":34,"nodeType":"1007","messageId":"1010","endLine":59,"endColumn":36},{"ruleId":"907","severity":1,"message":"1011","line":78,"column":10,"nodeType":"909","messageId":"910","endLine":78,"endColumn":16},{"ruleId":"907","severity":1,"message":"1012","line":78,"column":18,"nodeType":"909","messageId":"910","endLine":78,"endColumn":27},{"ruleId":"907","severity":1,"message":"1013","line":80,"column":9,"nodeType":"909","messageId":"910","endLine":80,"endColumn":17},{"ruleId":"907","severity":1,"message":"1014","line":87,"column":10,"nodeType":"909","messageId":"910","endLine":87,"endColumn":19},{"ruleId":"907","severity":1,"message":"1015","line":87,"column":21,"nodeType":"909","messageId":"910","endLine":87,"endColumn":33},{"ruleId":"1005","severity":1,"message":"1006","line":124,"column":29,"nodeType":"1007","messageId":"1008","endLine":124,"endColumn":31},{"ruleId":"936","severity":1,"message":"1016","line":125,"column":23,"nodeType":"1017","endLine":125,"endColumn":31},{"ruleId":"1005","severity":1,"message":"1006","line":131,"column":15,"nodeType":"1007","messageId":"1008","endLine":131,"endColumn":17},{"ruleId":"929","severity":1,"message":"935","line":155,"column":39,"nodeType":"931","messageId":"932","endLine":155,"endColumn":41},{"ruleId":"929","severity":1,"message":"935","line":156,"column":39,"nodeType":"931","messageId":"932","endLine":156,"endColumn":41},{"ruleId":"929","severity":1,"message":"935","line":161,"column":38,"nodeType":"931","messageId":"932","endLine":161,"endColumn":40},{"ruleId":"929","severity":1,"message":"935","line":162,"column":38,"nodeType":"931","messageId":"932","endLine":162,"endColumn":40},{"ruleId":"929","severity":1,"message":"935","line":167,"column":39,"nodeType":"931","messageId":"932","endLine":167,"endColumn":41},{"ruleId":"929","severity":1,"message":"935","line":168,"column":39,"nodeType":"931","messageId":"932","endLine":168,"endColumn":41},{"ruleId":"929","severity":1,"message":"935","line":173,"column":36,"nodeType":"931","messageId":"932","endLine":173,"endColumn":38},{"ruleId":"929","severity":1,"message":"935","line":174,"column":36,"nodeType":"931","messageId":"932","endLine":174,"endColumn":38},{"ruleId":"929","severity":1,"message":"935","line":179,"column":38,"nodeType":"931","messageId":"932","endLine":179,"endColumn":40},{"ruleId":"929","severity":1,"message":"935","line":180,"column":38,"nodeType":"931","messageId":"932","endLine":180,"endColumn":40},{"ruleId":"929","severity":1,"message":"935","line":191,"column":44,"nodeType":"931","messageId":"932","endLine":191,"endColumn":46},{"ruleId":"929","severity":1,"message":"935","line":192,"column":44,"nodeType":"931","messageId":"932","endLine":192,"endColumn":46},{"ruleId":"929","severity":1,"message":"935","line":197,"column":32,"nodeType":"931","messageId":"932","endLine":197,"endColumn":34},{"ruleId":"929","severity":1,"message":"935","line":198,"column":32,"nodeType":"931","messageId":"932","endLine":198,"endColumn":34},{"ruleId":"929","severity":1,"message":"935","line":209,"column":42,"nodeType":"931","messageId":"932","endLine":209,"endColumn":44},{"ruleId":"929","severity":1,"message":"935","line":210,"column":42,"nodeType":"931","messageId":"932","endLine":210,"endColumn":44},{"ruleId":"929","severity":1,"message":"935","line":215,"column":43,"nodeType":"931","messageId":"932","endLine":215,"endColumn":45},{"ruleId":"929","severity":1,"message":"935","line":216,"column":43,"nodeType":"931","messageId":"932","endLine":216,"endColumn":45},{"ruleId":"929","severity":1,"message":"935","line":221,"column":39,"nodeType":"931","messageId":"932","endLine":221,"endColumn":41},{"ruleId":"929","severity":1,"message":"935","line":222,"column":39,"nodeType":"931","messageId":"932","endLine":222,"endColumn":41},{"ruleId":"929","severity":1,"message":"935","line":227,"column":38,"nodeType":"931","messageId":"932","endLine":227,"endColumn":40},{"ruleId":"929","severity":1,"message":"935","line":228,"column":38,"nodeType":"931","messageId":"932","endLine":228,"endColumn":40},{"ruleId":"929","severity":1,"message":"935","line":233,"column":37,"nodeType":"931","messageId":"932","endLine":233,"endColumn":39},{"ruleId":"929","severity":1,"message":"935","line":234,"column":37,"nodeType":"931","messageId":"932","endLine":234,"endColumn":39},{"ruleId":"929","severity":1,"message":"935","line":239,"column":48,"nodeType":"931","messageId":"932","endLine":239,"endColumn":50},{"ruleId":"929","severity":1,"message":"935","line":240,"column":48,"nodeType":"931","messageId":"932","endLine":240,"endColumn":50},{"ruleId":"929","severity":1,"message":"935","line":245,"column":43,"nodeType":"931","messageId":"932","endLine":245,"endColumn":45},{"ruleId":"929","severity":1,"message":"935","line":246,"column":43,"nodeType":"931","messageId":"932","endLine":246,"endColumn":45},{"ruleId":"929","severity":1,"message":"930","line":255,"column":34,"nodeType":"931","messageId":"932","endLine":255,"endColumn":36},{"ruleId":"936","severity":1,"message":"1018","line":287,"column":6,"nodeType":"938","endLine":287,"endColumn":8,"suggestions":"1019"},{"ruleId":"929","severity":1,"message":"930","line":306,"column":22,"nodeType":"931","messageId":"932","endLine":306,"endColumn":24},{"ruleId":"907","severity":1,"message":"969","line":344,"column":13,"nodeType":"909","messageId":"910","endLine":344,"endColumn":18},{"ruleId":"929","severity":1,"message":"935","line":350,"column":49,"nodeType":"931","messageId":"932","endLine":350,"endColumn":51},{"ruleId":"907","severity":1,"message":"990","line":387,"column":5,"nodeType":"909","messageId":"910","endLine":387,"endColumn":13},{"ruleId":"907","severity":1,"message":"1020","line":388,"column":5,"nodeType":"909","messageId":"910","endLine":388,"endColumn":17},{"ruleId":"907","severity":1,"message":"991","line":389,"column":18,"nodeType":"909","messageId":"910","endLine":389,"endColumn":24},{"ruleId":"907","severity":1,"message":"947","line":390,"column":5,"nodeType":"909","messageId":"910","endLine":390,"endColumn":12},{"ruleId":"929","severity":1,"message":"935","line":512,"column":85,"nodeType":"931","messageId":"932","endLine":512,"endColumn":87},{"ruleId":"975","severity":1,"message":"976","line":905,"column":33,"nodeType":"931","messageId":"977","endLine":905,"endColumn":34},{"ruleId":"907","severity":1,"message":"986","line":600,"column":10,"nodeType":"909","messageId":"910","endLine":600,"endColumn":28},{"ruleId":"907","severity":1,"message":"961","line":600,"column":29,"nodeType":"909","messageId":"910","endLine":600,"endColumn":50},{"ruleId":"929","severity":1,"message":"935","line":638,"column":41,"nodeType":"931","messageId":"932","endLine":638,"endColumn":43},{"ruleId":"929","severity":1,"message":"935","line":639,"column":41,"nodeType":"931","messageId":"932","endLine":639,"endColumn":43},{"ruleId":"929","severity":1,"message":"935","line":644,"column":40,"nodeType":"931","messageId":"932","endLine":644,"endColumn":42},{"ruleId":"929","severity":1,"message":"935","line":645,"column":40,"nodeType":"931","messageId":"932","endLine":645,"endColumn":42},{"ruleId":"929","severity":1,"message":"935","line":650,"column":41,"nodeType":"931","messageId":"932","endLine":650,"endColumn":43},{"ruleId":"929","severity":1,"message":"935","line":651,"column":41,"nodeType":"931","messageId":"932","endLine":651,"endColumn":43},{"ruleId":"929","severity":1,"message":"935","line":656,"column":38,"nodeType":"931","messageId":"932","endLine":656,"endColumn":40},{"ruleId":"929","severity":1,"message":"935","line":657,"column":38,"nodeType":"931","messageId":"932","endLine":657,"endColumn":40},{"ruleId":"929","severity":1,"message":"935","line":662,"column":40,"nodeType":"931","messageId":"932","endLine":662,"endColumn":42},{"ruleId":"929","severity":1,"message":"935","line":663,"column":40,"nodeType":"931","messageId":"932","endLine":663,"endColumn":42},{"ruleId":"929","severity":1,"message":"935","line":674,"column":46,"nodeType":"931","messageId":"932","endLine":674,"endColumn":48},{"ruleId":"929","severity":1,"message":"935","line":675,"column":46,"nodeType":"931","messageId":"932","endLine":675,"endColumn":48},{"ruleId":"929","severity":1,"message":"935","line":680,"column":34,"nodeType":"931","messageId":"932","endLine":680,"endColumn":36},{"ruleId":"929","severity":1,"message":"935","line":681,"column":34,"nodeType":"931","messageId":"932","endLine":681,"endColumn":36},{"ruleId":"929","severity":1,"message":"935","line":692,"column":44,"nodeType":"931","messageId":"932","endLine":692,"endColumn":46},{"ruleId":"929","severity":1,"message":"935","line":693,"column":44,"nodeType":"931","messageId":"932","endLine":693,"endColumn":46},{"ruleId":"929","severity":1,"message":"935","line":698,"column":45,"nodeType":"931","messageId":"932","endLine":698,"endColumn":47},{"ruleId":"929","severity":1,"message":"935","line":699,"column":45,"nodeType":"931","messageId":"932","endLine":699,"endColumn":47},{"ruleId":"929","severity":1,"message":"935","line":704,"column":41,"nodeType":"931","messageId":"932","endLine":704,"endColumn":43},{"ruleId":"929","severity":1,"message":"935","line":705,"column":41,"nodeType":"931","messageId":"932","endLine":705,"endColumn":43},{"ruleId":"929","severity":1,"message":"935","line":710,"column":40,"nodeType":"931","messageId":"932","endLine":710,"endColumn":42},{"ruleId":"929","severity":1,"message":"935","line":711,"column":40,"nodeType":"931","messageId":"932","endLine":711,"endColumn":42},{"ruleId":"929","severity":1,"message":"935","line":716,"column":39,"nodeType":"931","messageId":"932","endLine":716,"endColumn":41},{"ruleId":"929","severity":1,"message":"935","line":717,"column":39,"nodeType":"931","messageId":"932","endLine":717,"endColumn":41},{"ruleId":"929","severity":1,"message":"935","line":722,"column":50,"nodeType":"931","messageId":"932","endLine":722,"endColumn":52},{"ruleId":"929","severity":1,"message":"935","line":723,"column":50,"nodeType":"931","messageId":"932","endLine":723,"endColumn":52},{"ruleId":"929","severity":1,"message":"935","line":728,"column":45,"nodeType":"931","messageId":"932","endLine":728,"endColumn":47},{"ruleId":"929","severity":1,"message":"935","line":729,"column":45,"nodeType":"931","messageId":"932","endLine":729,"endColumn":47},{"ruleId":"929","severity":1,"message":"930","line":739,"column":48,"nodeType":"931","messageId":"932","endLine":739,"endColumn":50},{"ruleId":"936","severity":1,"message":"987","line":784,"column":8,"nodeType":"938","endLine":784,"endColumn":10,"suggestions":"1021"},{"ruleId":"929","severity":1,"message":"930","line":797,"column":24,"nodeType":"931","messageId":"932","endLine":797,"endColumn":26},{"ruleId":"907","severity":1,"message":"989","line":822,"column":15,"nodeType":"909","messageId":"910","endLine":822,"endColumn":20},{"ruleId":"907","severity":1,"message":"969","line":844,"column":17,"nodeType":"909","messageId":"910","endLine":844,"endColumn":22},{"ruleId":"929","severity":1,"message":"935","line":847,"column":36,"nodeType":"931","messageId":"932","endLine":847,"endColumn":38},{"ruleId":"929","severity":1,"message":"935","line":858,"column":41,"nodeType":"931","messageId":"932","endLine":858,"endColumn":43},{"ruleId":"975","severity":1,"message":"976","line":886,"column":27,"nodeType":"931","messageId":"977","endLine":886,"endColumn":28},{"ruleId":"907","severity":1,"message":"990","line":890,"column":7,"nodeType":"909","messageId":"910","endLine":890,"endColumn":15},{"ruleId":"907","severity":1,"message":"991","line":892,"column":20,"nodeType":"909","messageId":"910","endLine":892,"endColumn":26},{"ruleId":"907","severity":1,"message":"933","line":6,"column":8,"nodeType":"909","messageId":"910","endLine":6,"endColumn":14},{"ruleId":"936","severity":1,"message":"1022","line":35,"column":5,"nodeType":"938","endLine":35,"endColumn":19,"suggestions":"1023"},{"ruleId":"907","severity":1,"message":"1002","line":6,"column":8,"nodeType":"909","messageId":"910","endLine":6,"endColumn":20},{"ruleId":"907","severity":1,"message":"942","line":7,"column":10,"nodeType":"909","messageId":"910","endLine":7,"endColumn":14},{"ruleId":"907","severity":1,"message":"986","line":16,"column":10,"nodeType":"909","messageId":"910","endLine":16,"endColumn":28},{"ruleId":"907","severity":1,"message":"961","line":16,"column":29,"nodeType":"909","messageId":"910","endLine":16,"endColumn":50},{"ruleId":"907","severity":1,"message":"992","line":26,"column":11,"nodeType":"909","messageId":"910","endLine":26,"endColumn":20},{"ruleId":"907","severity":1,"message":"1024","line":26,"column":30,"nodeType":"909","messageId":"910","endLine":26,"endColumn":39},{"ruleId":"929","severity":1,"message":"935","line":62,"column":39,"nodeType":"931","messageId":"932","endLine":62,"endColumn":41},{"ruleId":"929","severity":1,"message":"935","line":63,"column":39,"nodeType":"931","messageId":"932","endLine":63,"endColumn":41},{"ruleId":"929","severity":1,"message":"935","line":68,"column":38,"nodeType":"931","messageId":"932","endLine":68,"endColumn":40},{"ruleId":"929","severity":1,"message":"935","line":69,"column":38,"nodeType":"931","messageId":"932","endLine":69,"endColumn":40},{"ruleId":"929","severity":1,"message":"935","line":74,"column":39,"nodeType":"931","messageId":"932","endLine":74,"endColumn":41},{"ruleId":"929","severity":1,"message":"935","line":75,"column":39,"nodeType":"931","messageId":"932","endLine":75,"endColumn":41},{"ruleId":"929","severity":1,"message":"935","line":80,"column":36,"nodeType":"931","messageId":"932","endLine":80,"endColumn":38},{"ruleId":"929","severity":1,"message":"935","line":81,"column":36,"nodeType":"931","messageId":"932","endLine":81,"endColumn":38},{"ruleId":"929","severity":1,"message":"935","line":86,"column":38,"nodeType":"931","messageId":"932","endLine":86,"endColumn":40},{"ruleId":"929","severity":1,"message":"935","line":87,"column":38,"nodeType":"931","messageId":"932","endLine":87,"endColumn":40},{"ruleId":"929","severity":1,"message":"935","line":98,"column":44,"nodeType":"931","messageId":"932","endLine":98,"endColumn":46},{"ruleId":"929","severity":1,"message":"935","line":99,"column":44,"nodeType":"931","messageId":"932","endLine":99,"endColumn":46},{"ruleId":"929","severity":1,"message":"935","line":104,"column":32,"nodeType":"931","messageId":"932","endLine":104,"endColumn":34},{"ruleId":"929","severity":1,"message":"935","line":105,"column":32,"nodeType":"931","messageId":"932","endLine":105,"endColumn":34},{"ruleId":"929","severity":1,"message":"935","line":116,"column":42,"nodeType":"931","messageId":"932","endLine":116,"endColumn":44},{"ruleId":"929","severity":1,"message":"935","line":117,"column":42,"nodeType":"931","messageId":"932","endLine":117,"endColumn":44},{"ruleId":"929","severity":1,"message":"935","line":122,"column":43,"nodeType":"931","messageId":"932","endLine":122,"endColumn":45},{"ruleId":"929","severity":1,"message":"935","line":123,"column":43,"nodeType":"931","messageId":"932","endLine":123,"endColumn":45},{"ruleId":"929","severity":1,"message":"935","line":128,"column":39,"nodeType":"931","messageId":"932","endLine":128,"endColumn":41},{"ruleId":"929","severity":1,"message":"935","line":129,"column":39,"nodeType":"931","messageId":"932","endLine":129,"endColumn":41},{"ruleId":"929","severity":1,"message":"935","line":134,"column":38,"nodeType":"931","messageId":"932","endLine":134,"endColumn":40},{"ruleId":"929","severity":1,"message":"935","line":135,"column":38,"nodeType":"931","messageId":"932","endLine":135,"endColumn":40},{"ruleId":"929","severity":1,"message":"935","line":140,"column":37,"nodeType":"931","messageId":"932","endLine":140,"endColumn":39},{"ruleId":"929","severity":1,"message":"935","line":141,"column":37,"nodeType":"931","messageId":"932","endLine":141,"endColumn":39},{"ruleId":"929","severity":1,"message":"935","line":146,"column":48,"nodeType":"931","messageId":"932","endLine":146,"endColumn":50},{"ruleId":"929","severity":1,"message":"935","line":147,"column":48,"nodeType":"931","messageId":"932","endLine":147,"endColumn":50},{"ruleId":"929","severity":1,"message":"935","line":152,"column":43,"nodeType":"931","messageId":"932","endLine":152,"endColumn":45},{"ruleId":"929","severity":1,"message":"935","line":153,"column":43,"nodeType":"931","messageId":"932","endLine":153,"endColumn":45},{"ruleId":"929","severity":1,"message":"930","line":162,"column":34,"nodeType":"931","messageId":"932","endLine":162,"endColumn":36},{"ruleId":"936","severity":1,"message":"1025","line":193,"column":6,"nodeType":"938","endLine":193,"endColumn":8,"suggestions":"1026"},{"ruleId":"929","severity":1,"message":"930","line":203,"column":22,"nodeType":"931","messageId":"932","endLine":203,"endColumn":24},{"ruleId":"907","severity":1,"message":"969","line":242,"column":13,"nodeType":"909","messageId":"910","endLine":242,"endColumn":18},{"ruleId":"929","severity":1,"message":"935","line":247,"column":47,"nodeType":"931","messageId":"932","endLine":247,"endColumn":49},{"ruleId":"975","severity":1,"message":"976","line":271,"column":31,"nodeType":"931","messageId":"977","endLine":271,"endColumn":32},{"ruleId":"907","severity":1,"message":"990","line":278,"column":5,"nodeType":"909","messageId":"910","endLine":278,"endColumn":13},{"ruleId":"907","severity":1,"message":"1020","line":279,"column":5,"nodeType":"909","messageId":"910","endLine":279,"endColumn":17},{"ruleId":"907","severity":1,"message":"991","line":280,"column":18,"nodeType":"909","messageId":"910","endLine":280,"endColumn":24},{"ruleId":"907","severity":1,"message":"947","line":281,"column":5,"nodeType":"909","messageId":"910","endLine":281,"endColumn":12},{"ruleId":"907","severity":1,"message":"1027","line":282,"column":5,"nodeType":"909","messageId":"910","endLine":282,"endColumn":10},{"ruleId":"929","severity":1,"message":"935","line":381,"column":82,"nodeType":"931","messageId":"932","endLine":381,"endColumn":84},{"ruleId":"994","severity":1,"message":"995","line":724,"column":27,"nodeType":"914","messageId":"996","endLine":724,"endColumn":141,"fix":"1028"},{"ruleId":"907","severity":1,"message":"1002","line":6,"column":8,"nodeType":"909","messageId":"910","endLine":6,"endColumn":20},{"ruleId":"907","severity":1,"message":"942","line":7,"column":10,"nodeType":"909","messageId":"910","endLine":7,"endColumn":14},{"ruleId":"907","severity":1,"message":"1029","line":19,"column":9,"nodeType":"909","messageId":"910","endLine":19,"endColumn":17},{"ruleId":"907","severity":1,"message":"992","line":32,"column":11,"nodeType":"909","messageId":"910","endLine":32,"endColumn":20},{"ruleId":"907","severity":1,"message":"1024","line":32,"column":28,"nodeType":"909","messageId":"910","endLine":32,"endColumn":37},{"ruleId":"929","severity":1,"message":"935","line":69,"column":39,"nodeType":"931","messageId":"932","endLine":69,"endColumn":41},{"ruleId":"929","severity":1,"message":"935","line":70,"column":39,"nodeType":"931","messageId":"932","endLine":70,"endColumn":41},{"ruleId":"929","severity":1,"message":"935","line":75,"column":38,"nodeType":"931","messageId":"932","endLine":75,"endColumn":40},{"ruleId":"929","severity":1,"message":"935","line":76,"column":38,"nodeType":"931","messageId":"932","endLine":76,"endColumn":40},{"ruleId":"929","severity":1,"message":"935","line":81,"column":39,"nodeType":"931","messageId":"932","endLine":81,"endColumn":41},{"ruleId":"929","severity":1,"message":"935","line":82,"column":39,"nodeType":"931","messageId":"932","endLine":82,"endColumn":41},{"ruleId":"929","severity":1,"message":"935","line":87,"column":36,"nodeType":"931","messageId":"932","endLine":87,"endColumn":38},{"ruleId":"929","severity":1,"message":"935","line":88,"column":36,"nodeType":"931","messageId":"932","endLine":88,"endColumn":38},{"ruleId":"929","severity":1,"message":"935","line":93,"column":38,"nodeType":"931","messageId":"932","endLine":93,"endColumn":40},{"ruleId":"929","severity":1,"message":"935","line":94,"column":38,"nodeType":"931","messageId":"932","endLine":94,"endColumn":40},{"ruleId":"929","severity":1,"message":"935","line":105,"column":44,"nodeType":"931","messageId":"932","endLine":105,"endColumn":46},{"ruleId":"929","severity":1,"message":"935","line":106,"column":44,"nodeType":"931","messageId":"932","endLine":106,"endColumn":46},{"ruleId":"929","severity":1,"message":"935","line":111,"column":32,"nodeType":"931","messageId":"932","endLine":111,"endColumn":34},{"ruleId":"929","severity":1,"message":"935","line":112,"column":32,"nodeType":"931","messageId":"932","endLine":112,"endColumn":34},{"ruleId":"929","severity":1,"message":"935","line":117,"column":34,"nodeType":"931","messageId":"932","endLine":117,"endColumn":36},{"ruleId":"929","severity":1,"message":"935","line":118,"column":34,"nodeType":"931","messageId":"932","endLine":118,"endColumn":36},{"ruleId":"929","severity":1,"message":"935","line":123,"column":42,"nodeType":"931","messageId":"932","endLine":123,"endColumn":44},{"ruleId":"929","severity":1,"message":"935","line":124,"column":42,"nodeType":"931","messageId":"932","endLine":124,"endColumn":44},{"ruleId":"929","severity":1,"message":"935","line":129,"column":43,"nodeType":"931","messageId":"932","endLine":129,"endColumn":45},{"ruleId":"929","severity":1,"message":"935","line":130,"column":43,"nodeType":"931","messageId":"932","endLine":130,"endColumn":45},{"ruleId":"929","severity":1,"message":"935","line":135,"column":39,"nodeType":"931","messageId":"932","endLine":135,"endColumn":41},{"ruleId":"929","severity":1,"message":"935","line":136,"column":39,"nodeType":"931","messageId":"932","endLine":136,"endColumn":41},{"ruleId":"929","severity":1,"message":"935","line":141,"column":38,"nodeType":"931","messageId":"932","endLine":141,"endColumn":40},{"ruleId":"929","severity":1,"message":"935","line":142,"column":38,"nodeType":"931","messageId":"932","endLine":142,"endColumn":40},{"ruleId":"929","severity":1,"message":"935","line":147,"column":37,"nodeType":"931","messageId":"932","endLine":147,"endColumn":39},{"ruleId":"929","severity":1,"message":"935","line":148,"column":37,"nodeType":"931","messageId":"932","endLine":148,"endColumn":39},{"ruleId":"929","severity":1,"message":"935","line":153,"column":48,"nodeType":"931","messageId":"932","endLine":153,"endColumn":50},{"ruleId":"929","severity":1,"message":"935","line":154,"column":48,"nodeType":"931","messageId":"932","endLine":154,"endColumn":50},{"ruleId":"929","severity":1,"message":"935","line":159,"column":43,"nodeType":"931","messageId":"932","endLine":159,"endColumn":45},{"ruleId":"929","severity":1,"message":"935","line":160,"column":43,"nodeType":"931","messageId":"932","endLine":160,"endColumn":45},{"ruleId":"929","severity":1,"message":"930","line":169,"column":34,"nodeType":"931","messageId":"932","endLine":169,"endColumn":36},{"ruleId":"936","severity":1,"message":"1025","line":200,"column":6,"nodeType":"938","endLine":200,"endColumn":8,"suggestions":"1030"},{"ruleId":"929","severity":1,"message":"930","line":216,"column":22,"nodeType":"931","messageId":"932","endLine":216,"endColumn":24},{"ruleId":"907","severity":1,"message":"989","line":241,"column":13,"nodeType":"909","messageId":"910","endLine":241,"endColumn":18},{"ruleId":"907","severity":1,"message":"969","line":260,"column":15,"nodeType":"909","messageId":"910","endLine":260,"endColumn":20},{"ruleId":"907","severity":1,"message":"1031","line":278,"column":9,"nodeType":"909","messageId":"910","endLine":278,"endColumn":20},{"ruleId":"975","severity":1,"message":"976","line":299,"column":25,"nodeType":"931","messageId":"977","endLine":299,"endColumn":26},{"ruleId":"907","severity":1,"message":"1020","line":305,"column":3,"nodeType":"909","messageId":"910","endLine":305,"endColumn":15},{"ruleId":"907","severity":1,"message":"1032","line":307,"column":3,"nodeType":"909","messageId":"910","endLine":307,"endColumn":11},{"ruleId":"907","severity":1,"message":"947","line":309,"column":3,"nodeType":"909","messageId":"910","endLine":309,"endColumn":10},{"ruleId":"994","severity":1,"message":"995","line":746,"column":3,"nodeType":"914","messageId":"996","endLine":746,"endColumn":117,"fix":"1033"},{"ruleId":"907","severity":1,"message":"941","line":3,"column":10,"nodeType":"909","messageId":"910","endLine":3,"endColumn":18},{"ruleId":"907","severity":1,"message":"992","line":10,"column":21,"nodeType":"909","messageId":"910","endLine":10,"endColumn":30},{"ruleId":"929","severity":1,"message":"935","line":52,"column":26,"nodeType":"931","messageId":"932","endLine":52,"endColumn":28},{"ruleId":"936","severity":1,"message":"970","line":42,"column":10,"nodeType":"938","endLine":42,"endColumn":12,"suggestions":"1034"},{"ruleId":"975","severity":1,"message":"976","line":50,"column":28,"nodeType":"931","messageId":"977","endLine":50,"endColumn":29},{"ruleId":"975","severity":1,"message":"976","line":71,"column":34,"nodeType":"931","messageId":"977","endLine":71,"endColumn":35},{"ruleId":"929","severity":1,"message":"935","line":105,"column":29,"nodeType":"931","messageId":"932","endLine":105,"endColumn":31},{"ruleId":"929","severity":1,"message":"935","line":106,"column":29,"nodeType":"931","messageId":"932","endLine":106,"endColumn":31},{"ruleId":"975","severity":1,"message":"976","line":115,"column":53,"nodeType":"931","messageId":"977","endLine":115,"endColumn":54},{"ruleId":"975","severity":1,"message":"976","line":121,"column":41,"nodeType":"931","messageId":"977","endLine":121,"endColumn":42},{"ruleId":"907","severity":1,"message":"1035","line":11,"column":24,"nodeType":"909","messageId":"910","endLine":11,"endColumn":32},{"ruleId":"936","severity":1,"message":"970","line":39,"column":10,"nodeType":"938","endLine":39,"endColumn":12,"suggestions":"1036"},{"ruleId":"975","severity":1,"message":"976","line":65,"column":32,"nodeType":"931","messageId":"977","endLine":65,"endColumn":33},{"ruleId":"975","severity":1,"message":"976","line":112,"column":41,"nodeType":"931","messageId":"977","endLine":112,"endColumn":42},{"ruleId":"975","severity":1,"message":"976","line":118,"column":43,"nodeType":"931","messageId":"977","endLine":118,"endColumn":44},{"ruleId":"907","severity":1,"message":"1037","line":11,"column":12,"nodeType":"909","messageId":"910","endLine":11,"endColumn":23},{"ruleId":"936","severity":1,"message":"970","line":39,"column":10,"nodeType":"938","endLine":39,"endColumn":12,"suggestions":"1038"},{"ruleId":"975","severity":1,"message":"976","line":64,"column":30,"nodeType":"931","messageId":"977","endLine":64,"endColumn":31},{"ruleId":"975","severity":1,"message":"976","line":112,"column":43,"nodeType":"931","messageId":"977","endLine":112,"endColumn":44},{"ruleId":"907","severity":1,"message":"942","line":6,"column":10,"nodeType":"909","messageId":"910","endLine":6,"endColumn":14},{"ruleId":"929","severity":1,"message":"935","line":48,"column":44,"nodeType":"931","messageId":"932","endLine":48,"endColumn":46},{"ruleId":"929","severity":1,"message":"935","line":49,"column":44,"nodeType":"931","messageId":"932","endLine":49,"endColumn":46},{"ruleId":"929","severity":1,"message":"935","line":54,"column":40,"nodeType":"931","messageId":"932","endLine":54,"endColumn":42},{"ruleId":"929","severity":1,"message":"935","line":55,"column":40,"nodeType":"931","messageId":"932","endLine":55,"endColumn":42},{"ruleId":"929","severity":1,"message":"935","line":60,"column":34,"nodeType":"931","messageId":"932","endLine":60,"endColumn":36},{"ruleId":"929","severity":1,"message":"935","line":61,"column":34,"nodeType":"931","messageId":"932","endLine":61,"endColumn":36},{"ruleId":"929","severity":1,"message":"935","line":66,"column":33,"nodeType":"931","messageId":"932","endLine":66,"endColumn":35},{"ruleId":"929","severity":1,"message":"935","line":67,"column":33,"nodeType":"931","messageId":"932","endLine":67,"endColumn":35},{"ruleId":"929","severity":1,"message":"935","line":72,"column":34,"nodeType":"931","messageId":"932","endLine":72,"endColumn":36},{"ruleId":"929","severity":1,"message":"935","line":73,"column":34,"nodeType":"931","messageId":"932","endLine":73,"endColumn":36},{"ruleId":"929","severity":1,"message":"930","line":85,"column":36,"nodeType":"931","messageId":"932","endLine":85,"endColumn":38},{"ruleId":"936","severity":1,"message":"1039","line":115,"column":8,"nodeType":"938","endLine":115,"endColumn":10,"suggestions":"1040"},{"ruleId":"907","severity":1,"message":"1041","line":124,"column":13,"nodeType":"909","messageId":"910","endLine":124,"endColumn":24},{"ruleId":"907","severity":1,"message":"969","line":146,"column":21,"nodeType":"909","messageId":"910","endLine":146,"endColumn":26},{"ruleId":"929","severity":1,"message":"935","line":151,"column":53,"nodeType":"931","messageId":"932","endLine":151,"endColumn":55},{"ruleId":"975","severity":1,"message":"976","line":160,"column":24,"nodeType":"931","messageId":"977","endLine":160,"endColumn":25},{"ruleId":"907","severity":1,"message":"990","line":164,"column":5,"nodeType":"909","messageId":"910","endLine":164,"endColumn":13},{"ruleId":"907","severity":1,"message":"1020","line":165,"column":5,"nodeType":"909","messageId":"910","endLine":165,"endColumn":17},{"ruleId":"907","severity":1,"message":"991","line":166,"column":18,"nodeType":"909","messageId":"910","endLine":166,"endColumn":24},{"ruleId":"907","severity":1,"message":"947","line":167,"column":5,"nodeType":"909","messageId":"910","endLine":167,"endColumn":12},{"ruleId":"907","severity":1,"message":"942","line":6,"column":10,"nodeType":"909","messageId":"910","endLine":6,"endColumn":14},{"ruleId":"907","severity":1,"message":"992","line":14,"column":10,"nodeType":"909","messageId":"910","endLine":14,"endColumn":19},{"ruleId":"907","severity":1,"message":"1037","line":14,"column":20,"nodeType":"909","messageId":"910","endLine":14,"endColumn":31},{"ruleId":"929","severity":1,"message":"935","line":45,"column":41,"nodeType":"931","messageId":"932","endLine":45,"endColumn":43},{"ruleId":"929","severity":1,"message":"935","line":46,"column":41,"nodeType":"931","messageId":"932","endLine":46,"endColumn":43},{"ruleId":"929","severity":1,"message":"935","line":51,"column":38,"nodeType":"931","messageId":"932","endLine":51,"endColumn":40},{"ruleId":"929","severity":1,"message":"935","line":52,"column":38,"nodeType":"931","messageId":"932","endLine":52,"endColumn":40},{"ruleId":"929","severity":1,"message":"935","line":57,"column":34,"nodeType":"931","messageId":"932","endLine":57,"endColumn":36},{"ruleId":"929","severity":1,"message":"935","line":58,"column":34,"nodeType":"931","messageId":"932","endLine":58,"endColumn":36},{"ruleId":"929","severity":1,"message":"935","line":63,"column":35,"nodeType":"931","messageId":"932","endLine":63,"endColumn":37},{"ruleId":"929","severity":1,"message":"935","line":64,"column":35,"nodeType":"931","messageId":"932","endLine":64,"endColumn":37},{"ruleId":"929","severity":1,"message":"930","line":77,"column":36,"nodeType":"931","messageId":"932","endLine":77,"endColumn":38},{"ruleId":"936","severity":1,"message":"1039","line":108,"column":8,"nodeType":"938","endLine":108,"endColumn":10,"suggestions":"1042"},{"ruleId":"907","severity":1,"message":"1041","line":119,"column":13,"nodeType":"909","messageId":"910","endLine":119,"endColumn":24},{"ruleId":"907","severity":1,"message":"969","line":136,"column":21,"nodeType":"909","messageId":"910","endLine":136,"endColumn":26},{"ruleId":"929","severity":1,"message":"935","line":141,"column":53,"nodeType":"931","messageId":"932","endLine":141,"endColumn":55},{"ruleId":"907","severity":1,"message":"1043","line":4,"column":8,"nodeType":"909","messageId":"910","endLine":4,"endColumn":16},{"ruleId":"907","severity":1,"message":"941","line":3,"column":10,"nodeType":"909","messageId":"910","endLine":3,"endColumn":18},{"ruleId":"907","severity":1,"message":"1044","line":6,"column":17,"nodeType":"909","messageId":"910","endLine":6,"endColumn":22},{"ruleId":"936","severity":1,"message":"1045","line":56,"column":6,"nodeType":"938","endLine":56,"endColumn":8,"suggestions":"1046"},{"ruleId":"907","severity":1,"message":"1047","line":101,"column":9,"nodeType":"909","messageId":"910","endLine":101,"endColumn":19},{"ruleId":"929","severity":1,"message":"935","line":152,"column":35,"nodeType":"931","messageId":"932","endLine":152,"endColumn":37},{"ruleId":"929","severity":1,"message":"935","line":168,"column":45,"nodeType":"931","messageId":"932","endLine":168,"endColumn":47},{"ruleId":"907","severity":1,"message":"1048","line":10,"column":11,"nodeType":"909","messageId":"910","endLine":10,"endColumn":20},{"ruleId":"907","severity":1,"message":"1049","line":13,"column":9,"nodeType":"909","messageId":"910","endLine":13,"endColumn":16},{"ruleId":"907","severity":1,"message":"1050","line":27,"column":11,"nodeType":"909","messageId":"910","endLine":27,"endColumn":25},{"ruleId":"929","severity":1,"message":"935","line":132,"column":28,"nodeType":"931","messageId":"932","endLine":132,"endColumn":30},{"ruleId":"929","severity":1,"message":"935","line":133,"column":28,"nodeType":"931","messageId":"932","endLine":133,"endColumn":30},{"ruleId":"929","severity":1,"message":"935","line":134,"column":28,"nodeType":"931","messageId":"932","endLine":134,"endColumn":30},{"ruleId":"929","severity":1,"message":"935","line":135,"column":28,"nodeType":"931","messageId":"932","endLine":135,"endColumn":30},{"ruleId":"929","severity":1,"message":"935","line":149,"column":60,"nodeType":"931","messageId":"932","endLine":149,"endColumn":62},{"ruleId":"929","severity":1,"message":"930","line":149,"column":115,"nodeType":"931","messageId":"932","endLine":149,"endColumn":117},{"ruleId":"907","severity":1,"message":"942","line":6,"column":10,"nodeType":"909","messageId":"910","endLine":6,"endColumn":14},{"ruleId":"907","severity":1,"message":"992","line":14,"column":11,"nodeType":"909","messageId":"910","endLine":14,"endColumn":20},{"ruleId":"907","severity":1,"message":"1037","line":14,"column":22,"nodeType":"909","messageId":"910","endLine":14,"endColumn":33},{"ruleId":"907","severity":1,"message":"1035","line":14,"column":35,"nodeType":"909","messageId":"910","endLine":14,"endColumn":43},{"ruleId":"929","severity":1,"message":"935","line":45,"column":34,"nodeType":"931","messageId":"932","endLine":45,"endColumn":36},{"ruleId":"929","severity":1,"message":"935","line":46,"column":34,"nodeType":"931","messageId":"932","endLine":46,"endColumn":36},{"ruleId":"929","severity":1,"message":"935","line":51,"column":44,"nodeType":"931","messageId":"932","endLine":51,"endColumn":46},{"ruleId":"929","severity":1,"message":"935","line":52,"column":44,"nodeType":"931","messageId":"932","endLine":52,"endColumn":46},{"ruleId":"929","severity":1,"message":"935","line":57,"column":32,"nodeType":"931","messageId":"932","endLine":57,"endColumn":34},{"ruleId":"929","severity":1,"message":"935","line":58,"column":32,"nodeType":"931","messageId":"932","endLine":58,"endColumn":34},{"ruleId":"929","severity":1,"message":"935","line":63,"column":34,"nodeType":"931","messageId":"932","endLine":63,"endColumn":36},{"ruleId":"929","severity":1,"message":"935","line":64,"column":34,"nodeType":"931","messageId":"932","endLine":64,"endColumn":36},{"ruleId":"929","severity":1,"message":"930","line":78,"column":34,"nodeType":"931","messageId":"932","endLine":78,"endColumn":36},{"ruleId":"936","severity":1,"message":"1051","line":109,"column":6,"nodeType":"938","endLine":109,"endColumn":8,"suggestions":"1052"},{"ruleId":"907","severity":1,"message":"969","line":137,"column":13,"nodeType":"909","messageId":"910","endLine":137,"endColumn":18},{"ruleId":"907","severity":1,"message":"942","line":6,"column":10,"nodeType":"909","messageId":"910","endLine":6,"endColumn":14},{"ruleId":"907","severity":1,"message":"992","line":14,"column":11,"nodeType":"909","messageId":"910","endLine":14,"endColumn":20},{"ruleId":"907","severity":1,"message":"1037","line":14,"column":22,"nodeType":"909","messageId":"910","endLine":14,"endColumn":33},{"ruleId":"907","severity":1,"message":"1035","line":14,"column":35,"nodeType":"909","messageId":"910","endLine":14,"endColumn":43},{"ruleId":"929","severity":1,"message":"935","line":46,"column":34,"nodeType":"931","messageId":"932","endLine":46,"endColumn":36},{"ruleId":"929","severity":1,"message":"935","line":47,"column":34,"nodeType":"931","messageId":"932","endLine":47,"endColumn":36},{"ruleId":"929","severity":1,"message":"935","line":52,"column":44,"nodeType":"931","messageId":"932","endLine":52,"endColumn":46},{"ruleId":"929","severity":1,"message":"935","line":53,"column":44,"nodeType":"931","messageId":"932","endLine":53,"endColumn":46},{"ruleId":"929","severity":1,"message":"935","line":58,"column":32,"nodeType":"931","messageId":"932","endLine":58,"endColumn":34},{"ruleId":"929","severity":1,"message":"935","line":59,"column":32,"nodeType":"931","messageId":"932","endLine":59,"endColumn":34},{"ruleId":"929","severity":1,"message":"935","line":64,"column":34,"nodeType":"931","messageId":"932","endLine":64,"endColumn":36},{"ruleId":"929","severity":1,"message":"935","line":65,"column":34,"nodeType":"931","messageId":"932","endLine":65,"endColumn":36},{"ruleId":"929","severity":1,"message":"930","line":79,"column":34,"nodeType":"931","messageId":"932","endLine":79,"endColumn":36},{"ruleId":"936","severity":1,"message":"1051","line":110,"column":6,"nodeType":"938","endLine":110,"endColumn":8,"suggestions":"1053"},{"ruleId":"907","severity":1,"message":"969","line":138,"column":13,"nodeType":"909","messageId":"910","endLine":138,"endColumn":18},{"ruleId":"936","severity":1,"message":"1054","line":118,"column":5,"nodeType":"938","endLine":118,"endColumn":74,"suggestions":"1055"},{"ruleId":"907","severity":1,"message":"973","line":127,"column":11,"nodeType":"909","messageId":"910","endLine":127,"endColumn":20},{"ruleId":"936","severity":1,"message":"1054","line":144,"column":4,"nodeType":"938","endLine":144,"endColumn":16,"suggestions":"1056"},{"ruleId":"929","severity":1,"message":"935","line":183,"column":43,"nodeType":"931","messageId":"932","endLine":183,"endColumn":45},{"ruleId":"929","severity":1,"message":"935","line":195,"column":43,"nodeType":"931","messageId":"932","endLine":195,"endColumn":45},{"ruleId":"929","severity":1,"message":"935","line":206,"column":43,"nodeType":"931","messageId":"932","endLine":206,"endColumn":45},{"ruleId":"929","severity":1,"message":"935","line":293,"column":37,"nodeType":"931","messageId":"932","endLine":293,"endColumn":39},{"ruleId":"929","severity":1,"message":"935","line":303,"column":38,"nodeType":"931","messageId":"932","endLine":303,"endColumn":40},{"ruleId":"929","severity":1,"message":"935","line":313,"column":38,"nodeType":"931","messageId":"932","endLine":313,"endColumn":40},{"ruleId":"929","severity":1,"message":"935","line":331,"column":39,"nodeType":"931","messageId":"932","endLine":331,"endColumn":41},{"ruleId":"929","severity":1,"message":"935","line":345,"column":39,"nodeType":"931","messageId":"932","endLine":345,"endColumn":41},{"ruleId":"929","severity":1,"message":"935","line":359,"column":39,"nodeType":"931","messageId":"932","endLine":359,"endColumn":41},{"ruleId":"907","severity":1,"message":"942","line":7,"column":10,"nodeType":"909","messageId":"910","endLine":7,"endColumn":14},{"ruleId":"907","severity":1,"message":"1057","line":12,"column":9,"nodeType":"909","messageId":"910","endLine":12,"endColumn":16},{"ruleId":"907","severity":1,"message":"992","line":15,"column":13,"nodeType":"909","messageId":"910","endLine":15,"endColumn":22},{"ruleId":"907","severity":1,"message":"961","line":17,"column":31,"nodeType":"909","messageId":"910","endLine":17,"endColumn":52},{"ruleId":"929","severity":1,"message":"935","line":53,"column":41,"nodeType":"931","messageId":"932","endLine":53,"endColumn":43},{"ruleId":"929","severity":1,"message":"935","line":54,"column":41,"nodeType":"931","messageId":"932","endLine":54,"endColumn":43},{"ruleId":"929","severity":1,"message":"935","line":59,"column":33,"nodeType":"931","messageId":"932","endLine":59,"endColumn":35},{"ruleId":"929","severity":1,"message":"935","line":60,"column":33,"nodeType":"931","messageId":"932","endLine":60,"endColumn":35},{"ruleId":"929","severity":1,"message":"935","line":65,"column":38,"nodeType":"931","messageId":"932","endLine":65,"endColumn":40},{"ruleId":"929","severity":1,"message":"935","line":66,"column":38,"nodeType":"931","messageId":"932","endLine":66,"endColumn":40},{"ruleId":"929","severity":1,"message":"935","line":71,"column":43,"nodeType":"931","messageId":"932","endLine":71,"endColumn":45},{"ruleId":"929","severity":1,"message":"935","line":72,"column":43,"nodeType":"931","messageId":"932","endLine":72,"endColumn":45},{"ruleId":"929","severity":1,"message":"935","line":77,"column":39,"nodeType":"931","messageId":"932","endLine":77,"endColumn":41},{"ruleId":"929","severity":1,"message":"935","line":78,"column":39,"nodeType":"931","messageId":"932","endLine":78,"endColumn":41},{"ruleId":"929","severity":1,"message":"935","line":83,"column":40,"nodeType":"931","messageId":"932","endLine":83,"endColumn":42},{"ruleId":"929","severity":1,"message":"935","line":84,"column":40,"nodeType":"931","messageId":"932","endLine":84,"endColumn":42},{"ruleId":"929","severity":1,"message":"935","line":89,"column":45,"nodeType":"931","messageId":"932","endLine":89,"endColumn":47},{"ruleId":"929","severity":1,"message":"935","line":90,"column":45,"nodeType":"931","messageId":"932","endLine":90,"endColumn":47},{"ruleId":"929","severity":1,"message":"935","line":95,"column":46,"nodeType":"931","messageId":"932","endLine":95,"endColumn":48},{"ruleId":"929","severity":1,"message":"935","line":96,"column":46,"nodeType":"931","messageId":"932","endLine":96,"endColumn":48},{"ruleId":"929","severity":1,"message":"935","line":101,"column":34,"nodeType":"931","messageId":"932","endLine":101,"endColumn":36},{"ruleId":"929","severity":1,"message":"935","line":102,"column":34,"nodeType":"931","messageId":"932","endLine":102,"endColumn":36},{"ruleId":"929","severity":1,"message":"930","line":111,"column":36,"nodeType":"931","messageId":"932","endLine":111,"endColumn":38},{"ruleId":"936","severity":1,"message":"987","line":147,"column":8,"nodeType":"938","endLine":147,"endColumn":10,"suggestions":"1058"},{"ruleId":"907","severity":1,"message":"1059","line":156,"column":15,"nodeType":"909","messageId":"910","endLine":156,"endColumn":26},{"ruleId":"929","severity":1,"message":"930","line":158,"column":28,"nodeType":"931","messageId":"932","endLine":158,"endColumn":30},{"ruleId":"907","severity":1,"message":"989","line":164,"column":19,"nodeType":"909","messageId":"910","endLine":164,"endColumn":24},{"ruleId":"907","severity":1,"message":"969","line":191,"column":25,"nodeType":"909","messageId":"910","endLine":191,"endColumn":30},{"ruleId":"929","severity":1,"message":"935","line":197,"column":57,"nodeType":"931","messageId":"932","endLine":197,"endColumn":59},{"ruleId":"907","severity":1,"message":"1060","line":219,"column":11,"nodeType":"909","messageId":"910","endLine":219,"endColumn":21},{"ruleId":"975","severity":1,"message":"976","line":220,"column":30,"nodeType":"931","messageId":"977","endLine":220,"endColumn":31},{"ruleId":"907","severity":1,"message":"1061","line":222,"column":11,"nodeType":"909","messageId":"910","endLine":222,"endColumn":21},{"ruleId":"975","severity":1,"message":"976","line":223,"column":27,"nodeType":"931","messageId":"977","endLine":223,"endColumn":28},{"ruleId":"994","severity":1,"message":"995","line":510,"column":3,"nodeType":"914","messageId":"996","endLine":510,"endColumn":116,"fix":"1062"},{"ruleId":"907","severity":1,"message":"1027","line":22,"column":5,"nodeType":"909","messageId":"910","endLine":22,"endColumn":10},{"ruleId":"907","severity":1,"message":"1063","line":5,"column":8,"nodeType":"909","messageId":"910","endLine":5,"endColumn":13},{"ruleId":"907","severity":1,"message":"1064","line":6,"column":10,"nodeType":"909","messageId":"910","endLine":6,"endColumn":18},{"ruleId":"907","severity":1,"message":"1065","line":6,"column":20,"nodeType":"909","messageId":"910","endLine":6,"endColumn":24},{"ruleId":"1005","severity":1,"message":"1009","line":330,"column":62,"nodeType":"1007","messageId":"1010","endLine":330,"endColumn":64},{"ruleId":"1066","severity":1,"message":"1067","line":367,"column":123,"nodeType":"1068","messageId":"1069","endLine":367,"endColumn":173,"fix":"1070"},{"ruleId":"1066","severity":1,"message":"1071","line":368,"column":123,"nodeType":"1068","messageId":"1069","endLine":368,"endColumn":173,"fix":"1072"},{"ruleId":"1066","severity":1,"message":"1067","line":375,"column":123,"nodeType":"1068","messageId":"1069","endLine":375,"endColumn":173,"fix":"1073"},{"ruleId":"1066","severity":1,"message":"1071","line":376,"column":123,"nodeType":"1068","messageId":"1069","endLine":376,"endColumn":173,"fix":"1074"},{"ruleId":"1005","severity":1,"message":"1009","line":393,"column":65,"nodeType":"1007","messageId":"1010","endLine":393,"endColumn":67},{"ruleId":"1005","severity":1,"message":"1009","line":398,"column":68,"nodeType":"1007","messageId":"1010","endLine":398,"endColumn":70},{"ruleId":"936","severity":1,"message":"1054","line":472,"column":6,"nodeType":"938","endLine":472,"endColumn":56,"suggestions":"1075","suppressions":"1076"},{"ruleId":"1077","severity":1,"message":"1078","line":65,"column":21,"nodeType":"914","endLine":65,"endColumn":24},{"ruleId":"936","severity":1,"message":"1079","line":28,"column":10,"nodeType":"938","endLine":28,"endColumn":12,"suggestions":"1080"},{"ruleId":"929","severity":1,"message":"935","line":37,"column":21,"nodeType":"931","messageId":"932","endLine":37,"endColumn":23},{"ruleId":"1077","severity":1,"message":"1081","line":42,"column":73,"nodeType":"914","endLine":42,"endColumn":124},{"ruleId":"929","severity":1,"message":"935","line":45,"column":21,"nodeType":"931","messageId":"932","endLine":45,"endColumn":23},{"ruleId":"929","severity":1,"message":"935","line":69,"column":21,"nodeType":"931","messageId":"932","endLine":69,"endColumn":23},{"ruleId":"1077","severity":1,"message":"1081","line":75,"column":73,"nodeType":"914","endLine":75,"endColumn":124},{"ruleId":"929","severity":1,"message":"935","line":79,"column":21,"nodeType":"931","messageId":"932","endLine":79,"endColumn":23},{"ruleId":"929","severity":1,"message":"935","line":90,"column":21,"nodeType":"931","messageId":"932","endLine":90,"endColumn":23},{"ruleId":"1077","severity":1,"message":"1081","line":95,"column":73,"nodeType":"914","endLine":95,"endColumn":124},{"ruleId":"936","severity":1,"message":"1082","line":11,"column":3,"nodeType":"938","endLine":11,"endColumn":30,"suggestions":"1083"},{"ruleId":"929","severity":1,"message":"935","line":24,"column":14,"nodeType":"931","messageId":"932","endLine":24,"endColumn":16},{"ruleId":"929","severity":1,"message":"935","line":27,"column":14,"nodeType":"931","messageId":"932","endLine":27,"endColumn":16},{"ruleId":"929","severity":1,"message":"935","line":30,"column":14,"nodeType":"931","messageId":"932","endLine":30,"endColumn":16},{"ruleId":"929","severity":1,"message":"935","line":37,"column":20,"nodeType":"931","messageId":"932","endLine":37,"endColumn":22},{"ruleId":"929","severity":1,"message":"935","line":8,"column":10,"nodeType":"931","messageId":"932","endLine":8,"endColumn":12},{"ruleId":"929","severity":1,"message":"935","line":18,"column":10,"nodeType":"931","messageId":"932","endLine":18,"endColumn":12},{"ruleId":"929","severity":1,"message":"935","line":27,"column":10,"nodeType":"931","messageId":"932","endLine":27,"endColumn":12},{"ruleId":"936","severity":1,"message":"987","line":50,"column":6,"nodeType":"938","endLine":50,"endColumn":8,"suggestions":"1084"},{"ruleId":"907","severity":1,"message":"969","line":93,"column":13,"nodeType":"909","messageId":"910","endLine":93,"endColumn":18},{"ruleId":"929","severity":1,"message":"935","line":96,"column":33,"nodeType":"931","messageId":"932","endLine":96,"endColumn":35},{"ruleId":"975","severity":1,"message":"976","line":114,"column":25,"nodeType":"931","messageId":"977","endLine":114,"endColumn":26},{"ruleId":"929","severity":1,"message":"935","line":44,"column":22,"nodeType":"931","messageId":"932","endLine":44,"endColumn":24},{"ruleId":"907","severity":1,"message":"951","line":56,"column":9,"nodeType":"909","messageId":"910","endLine":56,"endColumn":20},{"ruleId":"953","severity":1,"message":"954","line":189,"column":59,"nodeType":"955","messageId":"956","endLine":189,"endColumn":60,"suggestions":"1085","suppressions":"1086"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useNavigate' is defined but never used.","react/jsx-pascal-case","Imported JSX component P_edit must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component L_list must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component L_edit must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component L_project must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component M_List must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Mod_List must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component M_edit must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Mod_edit must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Dev_Dash must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Dev_task must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Not_Found must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Task_List must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Task_Edit must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Dev_Task_Edit must be in PascalCase or SCREAMING_SNAKE_CASE","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Header' is defined but never used.","'Sidebar' is defined but never used.","Expected '===' and instead saw '=='.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["1087"],"'Login' is defined but never used.","'Navigate' is defined but never used.","'Link' is defined but never used.","'userid' is assigned a value but never used.","'usertype' is assigned a value but never used.","'handelsubmit' is assigned a value but never used.","'handleRegister' is assigned a value but never used.","'control' is assigned a value but never used.","'axios' is defined but never used.","The 'data' object makes the dependencies of useEffect Hook (at line 175) change on every render. To fix this, wrap the initialization of 'data' in its own useMemo() Hook.","VariableDeclarator","'handleLogin' is assigned a value but never used.","'reset' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["1088","1089"],"'AsyncSelect' is defined but never used.","'useCallback' is defined but never used.","'Select' is defined but never used.","'setSourcelistdropdown' is assigned a value but never used.","'setId' is assigned a value but never used.","'handleInputChange' is assigned a value but never used.","'handleinput' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'contactperson' and 'hereistoaddcontact'. Either include them or remove the dependency array.",["1090"],"React Hook useEffect has missing dependencies: 'hereistoaddvendor' and 'vendorform'. Either include them or remove the dependency array.",["1091"],"'check' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'listapi'. Either include it or remove the dependency array.",["1092"],["1093"],"'endoffset' is assigned a value but never used.",["1094"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat",["1095"],["1096"],["1097"],"'modal' is assigned a value but never used.","'setModal' is assigned a value but never used.","'accountholderid' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'addteam' is assigned a value but never used.","'Sourcelistdropdown' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'inquiryid' and 'singleapi'. Either include them or remove the dependency array.",["1098"],"'token' is assigned a value but never used.","'register' is assigned a value but never used.","'errors' is assigned a value but never used.","'projectid' is assigned a value but never used.",["1099"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"1100","text":"1101"},["1102"],["1103"],["1104"],"'Component' is defined but never used.","'fileDownload' is defined but never used.","'handleselectusers' is assigned a value but never used.","'username' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","'cancel' is assigned a value but never used.","'setCancel' is assigned a value but never used.","'navigate' is assigned a value but never used.","'milestone' is assigned a value but never used.","'setMilestone' is assigned a value but never used.","Assignments to the 'errorMessage' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","TemplateLiteral","React Hook useEffect has missing dependencies: 'projectid' and 'singleapi'. Either include them or remove the dependency array.",["1105"],"'handleSubmit' is assigned a value but never used.",["1106"],"React Hook useEffect has a missing dependency: 'dash'. Either include it or remove the dependency array.",["1107"],"'inquiryid' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Leadid' and 'singleapi'. Either include them or remove the dependency array.",["1108"],"'watch' is assigned a value but never used.",{"range":"1109","text":"1101"},"'isUpdate' is assigned a value but never used.",["1110"],"'uploadimage' is assigned a value but never used.","'setValue' is assigned a value but never used.",{"range":"1111","text":"1101"},["1112"],"'moduleid' is assigned a value but never used.",["1113"],"'milestoneid' is assigned a value but never used.",["1114"],"React Hook useEffect has a missing dependency: 'mileapi'. Either include it or remove the dependency array.",["1115"],"'alloweditms' is assigned a value but never used.",["1116"],"'Dev_task' is defined but never used.","'Axios' is defined but never used.","React Hook useEffect has a missing dependency: 'geting'. Either include it or remove the dependency array.",["1117"],"'handleBack' is assigned a value but never used.","'completed' is assigned a value but never used.","'message' is assigned a value but never used.","'serverresponse' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'taskapi'. Either include it or remove the dependency array.",["1118"],["1119"],"React Hook useEffect has a missing dependency: 'apicall'. Either include it or remove the dependency array.",["1120"],["1121"],"'updated' is assigned a value but never used.",["1122"],"'inquiryData' is assigned a value but never used.","'handlenavi' is assigned a value but never used.","'handleLead' is assigned a value but never used.",{"range":"1123","text":"1101"},"'Chart' is defined but never used.","'Doughnut' is defined but never used.","'Line' is defined but never used.","no-useless-computed-key","Unnecessarily computed property [\"project_projectbasis\"] found.","Property","unnecessarilyComputedProperty",{"range":"1124","text":"1125"},"Unnecessarily computed property [\"inquiry_projectbasis\"] found.",{"range":"1126","text":"1127"},{"range":"1128","text":"1125"},{"range":"1129","text":"1127"},["1130"],["1131"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'fetchingallcompanies'. Either include it or remove the dependency array.",["1132"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1133"],["1134"],["1135","1136"],["1137"],{"desc":"1138","fix":"1139"},{"messageId":"1140","fix":"1141","desc":"1142"},{"messageId":"1143","fix":"1144","desc":"1145"},{"desc":"1146","fix":"1147"},{"desc":"1148","fix":"1149"},{"desc":"1150","fix":"1151"},{"desc":"1152","fix":"1153"},{"desc":"1154","fix":"1155"},{"desc":"1150","fix":"1156"},{"desc":"1152","fix":"1157"},{"desc":"1154","fix":"1158"},{"desc":"1159","fix":"1160"},{"desc":"1159","fix":"1161"},[15240,15240]," rel=\"noreferrer\"",{"desc":"1150","fix":"1162"},{"desc":"1152","fix":"1163"},{"desc":"1154","fix":"1164"},{"desc":"1165","fix":"1166"},{"desc":"1159","fix":"1167"},{"desc":"1168","fix":"1169"},{"desc":"1170","fix":"1171"},[27608,27608],{"desc":"1170","fix":"1172"},[25381,25381],{"desc":"1152","fix":"1173"},{"desc":"1152","fix":"1174"},{"desc":"1152","fix":"1175"},{"desc":"1176","fix":"1177"},{"desc":"1176","fix":"1178"},{"desc":"1179","fix":"1180"},{"desc":"1181","fix":"1182"},{"desc":"1181","fix":"1183"},{"desc":"1184","fix":"1185"},{"desc":"1186","fix":"1187"},{"desc":"1159","fix":"1188"},[17791,17791],[10978,11002],"\"project_projectbasis\"",[11153,11177],"\"inquiry_projectbasis\"",[11874,11898],[12049,12073],{"desc":"1189","fix":"1190"},{"kind":"1191","justification":"1192"},{"desc":"1193","fix":"1194"},{"desc":"1195","fix":"1196"},{"desc":"1159","fix":"1197"},{"messageId":"1140","fix":"1198","desc":"1142"},{"messageId":"1143","fix":"1199","desc":"1145"},{"kind":"1191","justification":"1192"},"Update the dependencies array to be: [navigate]",{"range":"1200","text":"1201"},"removeEscape",{"range":"1202","text":"1192"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"1203","text":"1204"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [contactperson, err, hereistoaddcontact]",{"range":"1205","text":"1206"},"Update the dependencies array to be: [hereistoaddvendor, vendorform, verr]",{"range":"1207","text":"1208"},"Update the dependencies array to be: [FilterName, listapi]",{"range":"1209","text":"1210"},"Update the dependencies array to be: [listapi]",{"range":"1211","text":"1212"},"Update the dependencies array to be: [itemOffset, listapi]",{"range":"1213","text":"1214"},{"range":"1215","text":"1210"},{"range":"1216","text":"1212"},{"range":"1217","text":"1214"},"Update the dependencies array to be: [inquiryid, singleapi]",{"range":"1218","text":"1219"},{"range":"1220","text":"1219"},{"range":"1221","text":"1210"},{"range":"1222","text":"1212"},{"range":"1223","text":"1214"},"Update the dependencies array to be: [projectid, singleapi]",{"range":"1224","text":"1225"},{"range":"1226","text":"1219"},"Update the dependencies array to be: [dash, monthly, year]",{"range":"1227","text":"1228"},"Update the dependencies array to be: [Leadid, singleapi]",{"range":"1229","text":"1230"},{"range":"1231","text":"1230"},{"range":"1232","text":"1212"},{"range":"1233","text":"1212"},{"range":"1234","text":"1212"},"Update the dependencies array to be: [mileapi]",{"range":"1235","text":"1236"},{"range":"1237","text":"1236"},"Update the dependencies array to be: [geting]",{"range":"1238","text":"1239"},"Update the dependencies array to be: [taskapi]",{"range":"1240","text":"1241"},{"range":"1242","text":"1241"},"Update the dependencies array to be: [searchfilter, FilterName, ok, StartFrom, EndFrom, StartDate, EndDate, List, apicall]",{"range":"1243","text":"1244"},"Update the dependencies array to be: [apicall, itemOffset]",{"range":"1245","text":"1246"},{"range":"1247","text":"1219"},"Update the dependencies array to be: [searchfilter, StartDate, EndDate, selecteproject, apicall]",{"range":"1248","text":"1249"},"directive","","Update the dependencies array to be: [fetchingallcompanies]",{"range":"1250","text":"1251"},"Update the dependencies array to be: [selectedFilter, FilterName, props]",{"range":"1252","text":"1253"},{"range":"1254","text":"1219"},{"range":"1255","text":"1192"},{"range":"1256","text":"1204"},[531,533],"[navigate]",[9588,9589],[9588,9588],"\\",[3843,3848],"[contactperson, err, hereistoaddcontact]",[6397,6403],"[hereistoaddvendor, vendorform, verr]",[1211,1223],"[FilterName, listapi]",[2289,2291],"[listapi]",[2883,2895],"[itemOffset, listapi]",[1032,1044],[2137,2139],[2731,2743],[32165,32167],"[inquiryid, singleapi]",[3655,3657],[1052,1064],[2061,2063],[2683,2695],[8128,8130],"[projectid, singleapi]",[30861,30863],[892,906],"[dash, monthly, year]",[5479,5481],"[Leadid, singleapi]",[5280,5282],[1046,1048],[982,984],[978,980],[2926,2928],"[mileapi]",[2732,2734],[1388,1390],"[geting]",[2543,2545],"[taskapi]",[2565,2567],[3131,3200],"[searchfilter, FilterName, ok, StartFrom, EndFrom, StartDate, EndDate, List, apicall]",[3832,3844],"[apicall, itemOffset]",[4259,4261],[15173,15223],"[searchfilter, StartDate, EndDate, selecteproject, apicall]",[970,972],"[fetchingallcompanies]",[313,340],"[selectedFilter, FilterName, props]",[1537,1539],[5887,5888],[5887,5887]]